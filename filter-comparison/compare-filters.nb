(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    361679,       6677]
NotebookOptionsPosition[    358020,       6580]
NotebookOutlinePosition[    358527,       6600]
CellTagsIndexPosition[    358484,       6597]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Testing Consistency of Track Selection and Filter \
Comparison",
 FontFamily->"DejaVu Sans"]], "Chapter",
 CellChangeTimes->{{3.70469561446419*^9, 3.704695639560692*^9}, {
  3.704705814853997*^9, 3.704705822083313*^9}},
 FontFamily->"DejaVu Sans",
 FontSize->36,ExpressionUUID->"9b6712c0-cc94-4ff0-acf1-537705bfc915"],

Cell["\<\
The track selection process was modified in order to achieve higher \
consistency of the separation estimations, and a new track filter was \
deployed in order to reduce the human effort in the process. Although the new \
process has better justification, because it involves more prior knowledge \
about the FLImP algorithm and the experimental setup, results selected with \
the new filter need to be tested against the results of the old filter.\
\>", "Text",
 CellChangeTimes->{{3.704695645984399*^9, 3.7046956563160257`*^9}, {
  3.7046957933149023`*^9, 3.704696021890438*^9}, {3.704696137712782*^9, 
  3.7046961571667233`*^9}, {3.704696194457203*^9, 3.704696313935978*^9}, {
  3.704704408069088*^9, 3.704704422784341*^9}, {3.704704463376152*^9, 
  3.7047044761991653`*^9}, {3.704706500643632*^9, 3.704706528438278*^9}, {
  3.704707454976671*^9, 3.7047074567435923`*^9}, {3.7057429935601263`*^9, 
  3.705742995347659*^9}},ExpressionUUID->"6ba1cd72-fd8b-455b-9c8c-\
552fdf329b2c"],

Cell["\<\
The performance of the old and the new filter will be compared in terms of \
number of tracks manually reviewed, number of tracks analysed and number of \
tracks used. The comparison will be on the same data sets. \
\>", "Text",
 CellChangeTimes->{{3.704706342654265*^9, 3.704706421036167*^9}, {
  3.705743021614403*^9, 
  3.705743022727414*^9}},ExpressionUUID->"fa4693f7-be80-47df-a99c-\
0d3473341009"],

Cell[CellGroupData[{

Cell["\<\
Difference in results of tracks selected by old and new filter.\
\>", "Section",
 CellChangeTimes->{{3.705655997007078*^9, 
  3.705656053935457*^9}},ExpressionUUID->"ca8038e7-4e8b-4d0d-8c8b-\
3c93528e3e20"],

Cell[TextData[{
 "The new filter needs to be compared to the old filter in order to make sure \
that no systematic bias is introduced. Therefore both filters were used to \
select tracks from 545, collected from experiments with 2 different \
conditions - \[OpenCurlyDoubleQuote]I942E EGFR ",
 StyleBox["Affibody",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]L680N MBCD EGF\
\[CloseCurlyDoubleQuote]. The selected tracks were analysed and the results \
from each filter were compared with each other."
}], "Text",
 CellChangeTimes->{{3.705656935825982*^9, 
  3.705657211564459*^9}},ExpressionUUID->"8aa13113-bdc1-4af9-8dd9-\
fcabe523ca84"],

Cell[CellGroupData[{

Cell["Comparing the results from L680N MBCD EGF", "Subsection",
 CellChangeTimes->{{3.705657235039077*^9, 3.705657243411055*^9}, {
  3.7056605976090193`*^9, 3.705660600532279*^9}, {3.7057328611372643`*^9, 
  3.7057328636991377`*^9}},ExpressionUUID->"1c847548-b91f-4c22-929f-\
94d3b0768527"],

Cell["\<\
The new filter was used to select tracks from 203 datasets collected from \
experiment  \[OpenCurlyDoubleQuote]L680N MBCD EGF\[CloseCurlyDoubleQuote] and \
analysed. The results were compared with the results from analysed tracks \
extracted from the same data sets with the old filter.\
\>", "Text",
 CellChangeTimes->{{3.705737030163743*^9, 3.70573706819771*^9}, {
  3.705741707427498*^9, 3.7057417392873793`*^9}, {3.705741946545286*^9, 
  3.705741958756207*^9}, {3.70574203330641*^9, 3.70574219549434*^9}, {
  3.705742249165091*^9, 3.705742302970971*^9}, {3.705743056669279*^9, 
  3.705743057524954*^9}},ExpressionUUID->"baa3d6b9-7a62-434a-ba44-\
a7a220b9e869"],

Cell["\<\
The table below shows how many tracks were shown by each filter, how many \
were selected and how many had separation less than 60 nm and confidence \
interval less than 10 an 8 nm.\
\>", "Text",
 CellChangeTimes->{{3.705743060049489*^9, 
  3.7057430720150127`*^9}},ExpressionUUID->"2ff1c4cd-6c63-45e6-ab09-\
eb0cb305f2f7"],

Cell[BoxData[
 RowBox[{GridBox[{
    {" ", "Shown", "Selected", 
     RowBox[{"<", 
      RowBox[{"10", "nm"}]}], 
     RowBox[{"<", 
      RowBox[{"8", "nm"}]}], 
     RowBox[{"<", 
      RowBox[{"7", "nm"}]}]},
    {
     RowBox[{"Old", " ", "Filter"}], "18396", "102", "26", "10", "3"},
    {
     RowBox[{"New", " ", "Filter"}], "182", "81", "29", "7", "4"}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}], " "}]], "Text",
 CellChangeTimes->{{3.705742196873336*^9, 3.705742221264556*^9}, {
  3.705911970331018*^9, 3.7059119757293587`*^9}, {3.705912025591918*^9, 
  3.705912039663124*^9}},
 TextAlignment->Center,ExpressionUUID->"dd349ffd-3442-4035-984a-c3c9d6123b94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "prefix", " ", "=", " ", 
   "\"\</home/ffz52431/Workspace/repos/track-select/mathematica/filter-\
comparison/data/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", " ", "80", ",", " ", "10"}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", " ", "0.06", ",", " ", "0.01"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgSize", " ", "=", " ", "300"}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.705734527738666*^9, 3.705734528204747*^9}, 
   3.705734572803931*^9, {3.705915258276065*^9, 
   3.705915269059937*^9}},ExpressionUUID->"6480738f-26d0-4e82-a326-\
f0514b7fa4ed"],

Cell["\<\
The plots below show the probability density of separation for tracks \
selected with the old and the new filter with confidence interval less than \
8nm and 10nm and separation less than 60nm. The results of the new filter are \
more consistent when more tracks are added and also the peaks are narrower. \
The result from the old filter with on tracks with confidence interval less \
than 10nm is consistent with the results from the new filter.\
\>", "Text",
 CellChangeTimes->{{3.705742331060844*^9, 3.70574233912162*^9}, {
  3.705742465398554*^9, 3.705742509468965*^9}, {3.705742576911792*^9, 
  3.70574259128104*^9}, {3.705742624027782*^9, 
  3.7057426992395697`*^9}},ExpressionUUID->"43df5066-a1d0-4ff0-85b5-\
7481c18bbcb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"#", ",", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", "imgSize"}]}], "]"}], "&"}], "/@",
    "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"prefix", "<>", "#"}], ",", " ", "\"\<table\>\"", ",", " ", 
           RowBox[{"FieldSeparators", " ", "\[Rule]", "\"\< \>\""}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<L680N_MBCD_EGF.old.ci_8.txt\>\"", ",", "\[IndentingNewLine]", 
          "\"\<L680N_MBCD_EGF.new.ci_8.txt\>\""}], "\[IndentingNewLine]", 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Old\>\"", ",", " ", "\"\<New\>\""}], "}"}], ",", 
          "Above"}], "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "70"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.06"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"GridLines", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<ci 8 nm\>\""}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Separation\>\"", ",", " ", "\"\<Probablity Density\>\""}], 
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"prefix", "<>", "#"}], ",", " ", "\"\<table\>\"", ",", " ", 
           RowBox[{"FieldSeparators", " ", "\[Rule]", "\"\< \>\""}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<L680N_MBCD_EGF.old.ci_10.txt\>\"", ",", " ", 
          "\[IndentingNewLine]", "\"\<L680N_MBCD_EGF.new.ci_10.txt\>\""}], 
         "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Old\>\"", ",", " ", "\"\<New\>\""}], "}"}], ",", " ", 
          "Above"}], "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "70"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.06"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"GridLines", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<ci 10nm\>\""}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Separation\>\"", ",", " ", "\"\<Probablity Density\>\""}], 
         "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/US0xPfvrNeOUcmfg0H0zZhd4SB6+3KLeBC9QMo9
BUQHNa1PB9G75pnw/QPSWelHDEH0CW5lcxC9gXG1I4ieZ54cBKI1GGcEg+gD
30SiQfSPozGxINpmEnew6uzXjqznz4Fpi6JTESC6SOJGJIg2aVuYCqKVfV0L
QPSx9GTrX0B6kfI6GxA9R2xV4m8gLfPRLQlECwX9TgfRnz7MrATRLa5N3+Tn
vHYM8V7OoACkF/xjkQDRMr6CMiBaZK+eHoh+807fEkRvVf1tB6JTcvc5g2g2
jaBVIPrORsaDIPrFjbtHQbTYxN0XQHTB8x9XQHRZNN9tEB33M/kLiJ42+RCY
nrDploEikNbe3GQMov+cs/xYAaQtzrWBaQBD+cMp
  
  "],ExpressionUUID->"86be7e7e-deac-46ba-a50e-d5ea1629fe36"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxVm3c81t///43SUsmKimyy9x4Pe3PNSlNKKi1EUSIpFYoUEtHS1KKh5WoX
6q20NJXyLlGJlsLP5+t53rfbzz/d3Lqu+/W4Hudxnuc8j/NSD1vCC5cQExO7
Iikm9r9/+3/URM8/Hhb843nHuWDH/37Gi4Y4DeXt5991tvi/n/Eis2sbmx51
1znfrf3fj6qovK3i8NRD9c5z/+9HVZRjOclh9dnHzv08VdHTtt6zzpbPiKci
+jn/1/VOk1fEUxGlRwyUNpn+hnjjRColEZeF35qIN05Ukx/o3tPYTLy+30/0
nlpg2UK8saJcS8+Re3+1EW+sKKkrfFGoSjvxxoiCH7tYH0/tIN4YUWZJp0mW
/Q/ijRFx1Wyn3Pf+TTxlkURU2dyLp/8ST1kkU1E6tthbzKWfpyRqclKzuL5E
wqWfpyTiHji1d3PDAJd+npLo9yS9zn/TB7n080aLlCevnN2TOdSlnzda1BSP
tNf/Dieeoujpq7ZRSvdliKcoSjMfbDOySZZ4iqLuSddl7xgrEE9BVH9f9sPh
ytHEUxDtvuHZNW3jGOLJiywKRnTL7FMhnrwo3kD3mOoGNeLJi0QnI/4JX6BB
PDlRSMXL6XmrtIgnJ+p5YmW25aoO8WRFkmEBDYswgXiyohBbo135XQbEkxUF
D5S4UPzdmHijRI0jR97UHWtGvFGiHXbrXjU2mhNPRnT4Y1lO1j1L4smIZrot
f9HbbE08GZFB0POXg43s6P0jRdfb5t3du9eBXj9CNPaVaP/bQGf6vOGiCTM3
LorLA/GlRZ96HqhKabsRT1o0NlFb5H/fnXjDRLnxJyK6izyJN1TkN+xD4ZMM
b+INEXlVbPqyv9iXeINFRTFKCtZP/Yk3WLTIbduIKbZBxBsk+piR/Lk9lEM8
KdHvs9n1/Atc4g0UjRk07H2AIZ94A0RaDY5RZRUC4g0QzbjdoL9cOJF4kqJt
dsfl40ZOJp6E6LvwoNbuphDiiYuCUrZOv/5gKvHEREUDqx2uvJxOPDGRy0kv
rQMSofT+nqqFZ8+pq2vPotf/rRq9K27Vvolh9Hl/quKsJl9ckzeb+L+rnl7+
qy3/YQ7xflXda5TRKfSZS7wfVS2urhOmVEYQr7PKrO6x00b7+cTrqFqRl/4r
qHYB8dqryuTfHH6+eCHxvlZ9OLdrlL3GYnp/a1Wz6tkB65qX0Os/VvE1Fdxe
vVxKn9dctWFm/seWuijiN1XheHBkaG008RqrHn8YedS4Lobe31D1KFBprdOL
ZfT6+irbCI/5S77G0v/fqYoeKB2/W3o5/V5Z9TxtvEyp6QoXc4czc8Q4Qy/V
BJpkBE+LZ//v4jL/26uwLQns/S57LC7uLL6zkvFdwqUahTeGJrLPd+GNWr9u
LW810+fy6cC+jvUlSUy/y1k1sZeOCcns+7mIf6su6NZZw76/S8nipFO8x2uY
Py5jZtkuk9qQwvxz+ZkjY9rksJb569LimKl3pH0t899l3d4Cn/GHUtn4uARt
5TcOCVvHxs9l67Jogwnj1rPxdVFOGL/H8Ml6Nv4ud84vFmvdmsby4XK8Znvz
n6ANLD8uJ64flLEctpHlyyX30T8/3G9tZPnDxpWGiR9SNrF8QtDcPPa+UzrL
L1Ry1M6e/5nO8o2RvV3mYScyWP7BPZAXkxqRyeYHyi6otteN28zmD/wrT24Z
ULeZzS+cWhBZ/DF5C5t/0A1xUswencXmJ04mxB33XZTF5i8M01fsXnIli81v
ODj5JX+Xy2bzH1cP9g4qn5PN6gMGWpSGZpZns/qBH/96z1sqtpXVFzQYfvNy
9d/K6g+CKo5kfcvZyuoTPjmuOxv2bCurX+DGrwtOVc1h9Q0a48pbfUNzWP1D
zxN5zdLiHFYf8excRV3qixxWPzFQKdflteI2Vl9RF3Sx8ljQNlZ/kXlGf2Pr
2m2sPuOF+AfX9DPbWP2Gyuq24Pzmbay+w83GM7tXbjur/ziY8CHqnvN2tj5A
7Ev9gWER29n6gYK2oYknMraz9QUPr62fXn18O1t/MEPJo3dmHeMpoDnbRWnF
Z8ZTwEqtJdU6Q3PZ+oYEldo18Zq5bP3DNk1+Z5x9LlsfoZ3anWkYnMvWTxQk
n39xYVYuW1/RobSpUSua8ZRQuHmq7sZkxlNCh7Geyo8MxlOC1Of3TUl5jKeM
7LlpfNcSxlMG16LXXXiA8cbgR5dv5NWjjDcGBfv5w0+eYLwx8NOVDbAqZ7yx
UFi20nd2BeONxRmdlJfCCsYbh9YGpUbdcsYbh6trrGLa/uONQ+nMW1q3yxhP
BZ2iW6E3DjGeCiIxobd3H+OpIm7888wdxYynipgjj1cU72A8VYxPGpFvmMN4
42FtFXttagbjjYfS2AER9usYTw0m0YdlWhLZ69XwLG2W4Yo4xlfDkx9jt/Yu
Zu9XQ4p0fVlmBPs8NeyYHT/JKZTx1KH/dcBJjRDGU0ffm3X8eYynjsZ1ZQ3V
/oynDrXlZ1pPezKeOkJvJa1RA+NpgKMiFTTKgfE00L3QZVmhNeNpIPawuuJj
c8bTgELfbKoxYTwNZCbeubnWiPE08alsTZmsIeNpIkP8dtU6A8bTRN2N7fNb
DBhPE3N2/xvqbcR4muiyPz91rwnjaaFoveQqWQvG00KPvmj5ThvG00JC7Mfz
/k6Mp4XZVSlbxnkwnhZu/F0zWiOA8bTBedg0eLaQ8bQx0Ovg7NczGU8b2b9q
XhZFMp42Srf6G+1fwXja+Hpec/Df9Yyng6vVk87tzGU8HSSMfHMo+wDj6aDS
4ebSukrG08GrQrH48LuMpwO7jBxpv7eMp4txs1Nil/9iPF1Y374zv3NkHvF0
8Vh+kcV5vTzi6SJ4z5JxV93yiKeLkqX3taRn5BFPDwvNdzRuSsgjnh54BXeb
TPMZTw+SwZHvBpxlPD2oS8bH/X7MeHrYdVVsRddPxpuA6uaBFuJj8ok3AT9u
p7dLOeUTbwIUYwuzf4bmE28CEjwcpteuyyfeBMwpjF214Eg+8fSh+zjIruY+
4+mjorsu6tkvxtNH2Q2J85vUdhBPHxNz2u2u+Owgnj56q0oclkftIJ4BHIeq
m6UX7CCeAY5rxR/7cm0H8QzQdeW4d14b4xngZMmjxaGjC4hngNiY9rNOrgXE
M8SmYhl/+cgC4hmiydRJqm5bAfEMEWWx5ta0ywXEM0R1eJvYjn8ZzxBO6uv+
JsrsJJ4RjidOi2uy3Uk8I1w3SpC4GLqTeEZY6PRhdUfaTuIZwTHy7PR5x3YS
zwg619pXST1kPGOocnefr/zFeMZQUK/rXDSukHjGKGnfXCTuUkg8Y4wc96Zn
UWgh8Yzhc+7Zw03JhcQzQeuKlHK/4kLimaBQ5rVxyUXGM8FnJ/HK+U8ZzwQp
5V/e7/jGeCbwT6zIGTesiHimyBCb3vJYvaj/9cqmyMtttbhqXUR8U0z3XxRU
7VvU//4AU2ikts56OKWIPs8UNgWLzjXMJ16yKbbs6DK5GUe8HaaotiyYlrGG
eOWmsL8RvEF7E/Fq+3gn9J7HZRGv2RRrv2sJk7cxfWYI2h300CiX6TPD2vL9
k5O2M31mULS1FIVuZfrMIGXSNfRBBtNnhr3tXSm1qUyfGbLMnS66JTB9ZliV
f2mhwyKmzwznViW9Oj6d6TPD++yN+7f6M31mmKX9yKjdmukzx+qs8CvXxzN9
5kg3dD4sJcX0mSO/TTC05iP5H2AOz/UnYgfUsPEyR7u732TRIRrfZHPs1NE4
1bOOjZ85Oh9a2t2cSeNdbo6QwpUhWjZsPM1xZ9UPWWVp4jWbY/+1XfdPvmL5
s4Dv5UXif49RXpUtcHbh7D0/V7E8WuDw/OiMKh/Kb4AFHkzNi50iy/JugZcf
78n900DzLdkCzweN3GhWzOaTBZ4cCvy5PYzmX7kF1sSlyUtqsfllAdsLpwPW
N9H8brbAOdma5fa7WT2wRGi1SNxoOs13ZUtsNsmaGDma1QdL9LwwCJKpo/oU
YImZ8Vm7NNJY/bHE0uIT4y85Ur1KtkRm4Tqntq+sXloiZphE3d29VF/LLfFg
q0ZmuJDVT0vMvdsQ8M9AqrfNlmgTjvlX+zSr91YIN3w3df5sWh+UrdBiq/nl
igyr/1Yw1Hg40foS7QcDrGDzorXi2Ty2X7SC8tTZBtfkaD+ZbIXGrUYvJC+z
/asVCpa7fjwRQfvbcivsnZh/+YkM269a4UK1lmVOJe2Pm63QdutF5M9ZbP9s
jQ+dF8cOG5pD+qxx0fNC+NuTW0mfNTSF1er5IbRfD7BG4tKmC3bibH9ujSfp
f4XPD2aTPmtkdY6YtonD+gNrDPwlZy/4Rf1FuTU6THtu8UtYP2GNytabUbk+
WaTPGtL7Hj3zfLuF9Nkg3eNUtpXlFtJnQ+vzZtJngwrHkZ/vPcskfTbImRMx
9o5JJumzQWuS9t+f6zJInw3srhsj+yXrr2zwZPUq/h7rdNJngzd5XfH8bNaP
2UDh8M70qjbq35ptYMLhhYoHsP7NFplPRs/RObqB9NniUOx9rzkjNpA+W6zV
Txp8ITqN9NnC6pV0G69hPemzheqrmFA7N+ovk20xRbakNLdsHemzheftTQYr
xq4jfbZAoNHUT+msX7XFPb5z8rjetaTPFgnb1H/LxK4lfXa4dDfvc2NbCumz
w56O3JSS+Smkzw7fVJp0Z32g/jnADnm8hoNWC9aQPjtYX9inZvwlmfTZYfuS
IRLTlieTPjvIXxKrrJVIJn126IwrWqqpmUT6+j7/bGx8pPdq0meHtPJjclui
E0mfPe7oDZlXum8V6bPHQpW3uP6SnRfYw9jQME5SdSXps8eiPY0xUeEJpM8e
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
/f2FXORf2LO99STdx4/hQuNNsq3TzD/99/XjuUjo7lptp9DVf58/mYund/PX
jnr4q5+3nouwv9zxkoU/+3kZXMwNcT5muuhHPy+Hi4NHyiKveX+n+/9c9NQm
PXxs0NnPK+HiXGatR6YyPT9QyoXfu5qdbTLf+nlH+77PrdPneka19/PKufDU
7Aq5N+5rP6+SC+t2s95zYZ/7eSIuIndXbPMobu3n3ezzL7Hwp+aXFnpegYu/
efHzfXkf+3n1XBzS/3ss/fa//byGvt/XzLlXzqXnIRq56Lypkb637V0/r5mL
7FkHymQKm/p5rVzUFZk7Xp/2tp/XwYXXEw/nVSZv+nm/uVgcuX7qd7lGeh6C
h9rVSSvuyr3q50nxsGNp9KiRGi/6edI8WGaXbhvKe9bPk+PhdbLjloC9T/t5
yjxM1/MUGCk86eep8TAmSLxT5cCjfp4OD8EXxasyJj/s5xny8NMob0CHXj09
b8HDvInROf+MftDPs+NB733H771a9/t54CEhwfHG36C6fp4XD+eCQiSaDP/p
5wXwUPl2frv7d3pehc/DxqJhn6J+1PbzQnhYMW3mmrsmtf28UB4W3NK++rKk
hvLHw97VSfYmvjWUv77v31kbs0SvhvLHQ1Pq5thpzjWUPx6Ml825cX1TDeWP
B4+vIyLShtdS/niYP/je1B03ayl/PKTUr9FuOU36cnhwHthy6cTze5Q/Hop5
9Q86xtZR/ng4drPGUPievm8pD2nBuyIHVd+n/PEw+tn5QKXqB5Q/HlqnmMlm
va+n/PEwu3qW7bJxjyh/PAQZFopdXfyY8sdDdp6odd6LJ5Q/HoTmX5ICwxso
fzxYGdv2+A95Tvnjgfvc4Jj+7ReUPx40j+or5+2mvDTz4L/lqsdOv0bKHw9i
Hd+b3blvKH9949+8fOeqOW8pfzzwmnwWtq1tovzxMXil73uj45RnKT5OBxbk
VL9/T/nj45uKobeN7r+UPz70T7nIvI/+QPnjY4XCmVS52x8pf3ycUxbFGuh8
ovzxAckvTu4ZrZQ/PgSSHj9W/2bPD/HhM4Pzu3PhF8ofH0FVYbJ10V8pf3y0
L/1WY23WTvnj47HEL1vtdnreKICPcM5C/+6T3yh/fEhZ+XxXi+mg/PFhUSy/
4J0F1ZdQPoQLqnce6uik/PHRlZfSe+bkd8ofHyWKN2+HsnoVw8fM9tjMZu2f
lD8+KhTHril89pPyx8fZ7Fy7q5tY/ePjPSeq5YjVb8ofH2/mCfy2PvtN+eNj
12WxhXUruih/fOSiN+X8yD+UPz5Cvs4bkLfrD+WPD8fc0pJHWn8pf3wYj45f
cH831edyPtY5+Mp2yXdT/vrG8+pZ3ZuJ3ZQ/Pt4FDH8qet5N+eOjNm1K1GJj
qve1fNz4fKsoNraH8tenX2aE75ITPZQ/PlbZL4rXet1D+ePja/XpOI44rR/N
fflo/+ddnWIv5Y+PI4+ee20a30v546Nyq1lvxNheyl+fPkXX2uVDeyl/Avx2
O+V/r7WH8idAeMecrvVXSZ+0AP/e2pDVnE765AQ4l7hfT8WX9CkL+vJf/XNT
F31fNQH0NuUtSymh76sjgFbttagVDt2UPwHkyqWuvqlhz5sJYJhc9cib95fy
J0DpskAVy39oPCCA8W3vD9buNB5eAnhnaEv+PdZF+RMg/X3bSnW5LsqfAInv
R4/nL6Xn20IE2Fs0ptLx1i/KnwBvJRQqdilRXuYK4Gvq1a0STuvlQgEsRg18
taaM5U+AE6Is9yXfaL2M79NnMTi/1PI75U+A/JVvD9QvozyvF0D6cK7LnvIO
yp8Af2/WD73RTvMjR4CNYvNt602+Uf4EuBa1/XTU4nbKnwB3ffRO2hz7Svnr
8ztT3Gb66y+UPwE4U/7eqZr7mfInwM/i8UmbO1opfwJMGvPsz6n1nyh/Arge
OT/vj1oL5U+AWHXRUfdrHyh/Auhe9rVVWEz1pV4Al7i4WFONZsqfAI/OONn2
vn5H+ROg4WbcfamD9LxiswAz9e7/2J3wlvIngGih40y1yaz+CWDruMH9Chop
fwIoXRh8eer8V5Q/IbSF6tMl572g/Amxa1xLSV7iM8qfEDu0OqqHHn5K+ROi
IP3iS6+2x5Q/IWzLbjYO8aZ6ryZEaavZNOmz9HymjhDvnr16/t7xAeVPiMfj
Ny9SeVpH+RPC730yZsj8Q/kTotKtbMjwHbReQogX6prTun2qKX9CPJ+6b8Yz
1duUPyFmfYi2t1O+SfkTIvSezJh91tcpf0IM1cKEgtirlD8hno6Q3L7loYjy
J8RPXxvZQfsuU/6EUNGdPPfO0wuUPyFqvxomhXhUUv6EaG+vPFPcdIbyJ8RJ
b/fZ+8srKH9CmIwc/jzm5CnKnxA3bHYutXp2gvInxNXsx+MNJh6j/AnR4vsh
usHtCOWvT79zw1PH2IOUPyHkWzauDP2wn/InhM0n0fukvL2UPyG+drSIy67e
TfkTQuH72IJck2LKnxBn2n8p6F/ZSfkTYnPCT6HdoXzKnxBm9YLQ1MbtlD8h
Ym8lh3qF5lD+hHDTTx2ppZFN+RMixHBn7zxspvwJ0fQszF7i8CbKnxAPltjf
uhuXRvkTYtudP6mzilIpf0LoyTfvVlFIofxNxPUNSxJqjyQ5/z9zrmuC
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
nseCdVus7U4TbzySmzd7WC04TbzxuNupG1iz6TTxxsMVJwI74xhPHTc3NT0N
z2A8dawV/5PrfZHx1JFi1WYTXsJ46ojY//DSgxrGU0eAz2mTse8ZTwNXlSK6
1nQwngbMiv0qUv4xngb299lsv08qm3gauPzr2CSbgdnE04DLrN+KiUOyiaeJ
V09i9qwbmk08TdysWHCvZHA28TTxv7fTn/E08WvIh4tnJRhPE82DczrG/2b5
tMCXKG+ubWX5tNCc4mb09BXLp4WDz/UqxcrZ+9XC2uKg84svsferhfwTkye0
pzGeNm40OOwtjGA8bXwpuWVzZiXjaWPf6YyUOmfG04bXpHpXN03G00bB0cA7
Mn0YbwLMTq68qvCC9WUCspszf8adZX2ZgGv/xltu3sH6MgHlZvVd73isLxPQ
El/Fa1Rh/ZuILfZtxfs+sT5PxM7p2kulL7D1MREbv28oFmxj62MiZk8sadtt
w9bHROwxUdxU0ZetDx3ELphVZ3CPrV8dnGwJSKiMYOtXBx7K68cJ7dj61cFH
TB2kLM7Wrw5qU3LLxK6y+TIJb2+9NA3byObHJEjl524qmsTmzST076M493oD
m3eT0JkpJ5N1kM2zSTCuj/8bOZ3Nv8nQkQwrDJRg820yYk82/Nx7gc3XyVhy
+3TTqxWZxJuM1Z1lTv6KbN5OxlkTa3g/YPN+ChrVuxOLA9k8nwL5y+IzEiay
+T8FLh8sj395we4XU9AgltfWsIvdX6bAxt09Y7tJOvF0sfKBfEVJE92vFHTh
5fcvtDyJ3c90YWIs/vaIzTHR8zm6sFsz2sG6jd0PddHg5aB08zDdL0N0sXlx
4OPJrux+qgupx6ta1b7S/TZfF+U7X3787Mrux7pI71ltlVl0v27SRVv/3bUN
4kco31SM8Ll032I+3e8VpmKK0Rn5PkVsPzAVyUVLdayGp1K+qSg2enR4hB/b
T0zF4C+vfpyqpP1GyFQ0TonKkJp8kPJNxaCowsNz41Io31TYJnheu9XK9jdT
8S3ee8+i6cmUbypqRt/9zDnP9kN6kFVeM+bciAOUTw+FwXbzC4PY/kkPYc8t
d21ooP0XRw/75JwaRrjvo3x66DeKc/52Ee3XQvSQFGLxIFkzifLpQbpWUvvm
Adrf5eth7J2kjLn9EymfHtJLqwyStidQPj14RF4uiPjJ9pP6SDTXOyfw20v5
9PF8os6lsW1s/6mP6P0HZsms30P59FE+uaJidks85dPHuddyHwW/dlM+fdRq
fnKcMmQ35dPHPXPzfUo6cZRPH7ul2kY4ecRSPn2cuvwpqCGQ9s9N+qhqH390
0NloymeAyQfDb3z8sIvyGWBYl6RHrA7bjxvA/FyyWv/NUZTPAD6z9GRDSiIp
nwH+mD2I7BpH+/sQAyQMXqXoGxFB+QzgcPn3QImvOymfAeZnREemerPzggGq
SxSip70Kp3wGyMqrDviwKJzyGcIwe3l17Ec6fygYYqVT33rF4DDKZ4ibHKXa
8FFhlM8QH5sj2/Iv76B8hkhwVpq+dwmdZ0IMsfhYoYbUiB2UzxCeW3TaOipC
KZ8hDtj/CLSOZ+chQ/zImPGxbGYo5TPEAN7cvI3qoZTPCKsGj7JQ7KLzlIJR
z/45VSLlWQjlM8Lgh/full8OoXxGOH3N4eDezBDKZ4QW3b3JN5JCKJ8Rnk8R
VBnFsPOZEY7kVl15EEm8fCOo3NGWnh1NvDIjxCzfr34hgXhNRrh1ZsrDa2nE
EzNGzlmZ2w4FLJ8xJu00uaZVzvIZg2OwstL8I8tnjFOd2/rNHkzvd5kxtFui
VXlG9H5DjHFOJbOmj3co5TPGtQ/DGi2SmD9jTJ3/sftFCfNnjF33N70+I0HX
o8kYNgH/TKKt2fnSBEopf9c5hNH1UDABNyUmLv/+DspngsDC6ENZsuz6miB2
x5uvrT3nUVE+E4wz9z284EwY5TPBwF1hh+90s/OqCba9MOhsF9B5Nd8E37aV
Lb6WE075TLC+z5OVdVI7KZ8JVpkINaf29FOUzxRLWnI/7bixk/KZovFdkfRh
1QjKZ4qNn7oeOIdFUD5THHwUH8FvYudfUwQNOTBmswtbH6YQu67uEns2kvKZ
wn3O/Pbpw6MonynivRb+CQ6k9VZmipMfrVS/vo2ifKa4sVHFwdtpF+Uzg1fp
6CtHc9n6NQNXYU7nDPloymeGzVu/FM0PoPM0xwy/V/2t96+LpnxmkFxxfM4M
xFA+Myia91lbdiyG8plh2RLDPvvFYymfGdZkey4PWsjmixkuvNzV6nwllvKZ
wcevecsV+TjKNw3nPiW2xvnEUb5pqDyb6p9VTPNKfxpiP2qHFQyl8ztnGib1
dbY7vGA35ZuGmoDRh5ROsfk3DVW5uWcV29j8mwZH1fHLuPrxlG8a9B4FXr/h
F0/5puHqtGepWrk0T5umQeuurbZPYzzlM0ecbEOXxcA9lM8cKTsMK7LGsfls
jgk2aR9emrD5bI6vP1QkG1zZzxN6ns+/fu7cvD2Uzxx5/zacdPUhXoo5+h21
PnJpM/HyzZFoMD6xM5R4ZeaQWKZgMSyaeE3mKAxRlJbbQzwxC0g/VlkkncTy
WcDzhPq57n0snwWWHxr9RG4/y2cBy/TO5tlJLJ8FzGUuzK1lvBALVMjaXi2O
YfkscHZmwlulnSyfBdwUEj1HbWP5LFDgNs3hlj/LZwEPw609Q5jls8RuWavC
vPksnyUiSzfKWHBZPku4CuQFv2xZPkukW0jEyxuxfJY4tNWkNl2T5bNEd0qq
4ZNRLJ8l6uLVrxXJsHyWSI0KXvO3g11fS9yaWRy1uppdX0vcOPGqWPkSu75W
+H6/Klj1IP08SMEK+6KD3O4EUV/0rTBa7dJLq0XE41ihoTZ03xE7dv+1glbM
uT56E4gXYoX0e6Zd8rLs50tW/9/9WZTPCjozlT8b1LOfR1lh+ERPycIK6nOT
FcId8tb/vUJ9FgOCTo4zGpxN3z8Q2BCRLK6USv1WAM7Zj/kzOJ6erwFkj06q
Ugin19PvOe6sGXRBLZB4ABZVb91ot4GtJ2CLdP2J9b7E8wTOHDFRv7OarS/g
qOuO0KmriecPTB8ivHphDVtv6JnvX6sF64kXC0THKS/5t4mtP0DeyeqhMJh4
WUBasJdtaBTzAcQEB2u7JRFPCCicyTgtk878ACdnlerdPke8GiCwvvuD1y3m
CzCQcF1SVU28duDJhexjyp+YP2sc8p5SqiZB12+gNWJlquvejmbX2xrOc7PW
uRvR9dSwRuG6Akvw2PW3xmNnMaeLvnR9YY23rgcKknezPlhDqzYipySXeJ7W
eL+wdtaUh6wf1lhqfvxV7jfi+Vtjvc/mghEDWJ+t0fFnZYaZEvU/1hoDciZF
XJ3C+m2Nk+FlZlE2tB6yrOFlP0s/aAbruzWepT2ViFlBPKE1OH+4T1MC2fq0
Rt9rtWVxu4lXYw07px3DOcfYerWGu4RHdVE+8dp73n/OzNDCO2z92uD6qQzL
8c+IN9AGbsNcS+ua2Xq2QZbrHM69n8TTsMF8+XdGxVJ7yZ8NZob/sD8sT/td
2KBa7PgxB1X6+SnHBjeOiUsl6tD+19MG2epKjYuM9pI/GwRkDuiKtCSevw18
w174ttoRL8QGKqEHC32diRdrg1uDvR+/diVeig1+vTKbo8shXpYNOheb8vVc
iJdvg/ysFYce2RNPaIPVQ6rntFuyn+/aYHmf+KIgQ+LV2KC5Ie01T5t4TTZ4
c3N4tpci8dpt8M294+whaba/t8XQfQ5ln9qZP1u8dJRLcqxl/mwxY/mcfjk3
mD9brO1Wl5TKZPPRFhHzfX8sDqPrAVtYGlj4FS5k89IW9hNiJ0maEs/TFr9j
ZyTNG8Lmpy0uX9Jz23aH9c8WgmVJW6KXsXllC9V1JSM+i1OfY21xcMDFZ3UH
2Pq1hdlaG594LbZ+bXFFb8EppQJ2nujJr/1OocaM7udCW4RG5q/+eZXd/22x
Uem0dolZLPmzRbZKtlh4ATtv2OJCbmTjzgkx5K/n/bsod8geZucPO9xdYBqb
OJD2JwPtYKJ6fT4C2H7GDhf/bLofVk/7Hw07bL4xTZDrSvslfTsMjqvrUDpP
+yvY4fwUA71xIyPJnx1SAkYmDQ6k84inHeTHuTbNfkX7vWV2SPUqeG5sTecT
/548vPELZTLp/BFih01rfC+O70f7xVg7yLY+m/t4Fdtf2mHJs1XlCyppf5tl
hyfLV0UMM6T9a74dAv82cfVTaf8stEOrZVyqeF+2P7aDQNqqrMiX9uc1dkj8
3fFQvYh+X9NkB07pyMQdB4LJnx1yAj6EtmzdRv7ssXHv8bB87yDyZ4/+bruH
afACyZ89HjU3nox22Er+7GFzYO+PEdbs90n2qN6zKVvMZgv5s4f3G/d5a5w3
kz97XNv79PCOWfT7KU97zPO+nzx79UbyZ4/64BkruiM3kD97rJphWxJ62p/8
2WP70e8KjU/8yJ89kjKl/4yTZL8fs4dyzihZ02nryZ89AmJ/W8gH0O/T8u3x
11iq0iXQl/zZY4NJfclJ2bXkzx4eOrYL+hWuJn/2iFav2zZxqQ/5s0e/O2nz
K1VXkT97GCx5u+d8ywry5wD3rd5TtxcvJ38OUDGefrHh6DLy54ANpWUHE2KW
kj8HRGanfdfbsYT8OWBAysSwVWHe5M8BpTf3XXm/ezH5c8DmZqs5vEwv8ueA
G3eiFTm3FpE/B3xQtPjQ/9lC8ueAQz7bJbmmC8ifAybX6WwuyZlH/hwwZkHF
hvu6c8mfA+SKA09fvO1J/hyQtXCn9I/ls8mfA0q8Pf0GKc4ifw74XRQymvdi
BvlzgN1P3czZJwXkzwGCT6FF0WF88ueA6UfXXYr04ZG/nte7lXGvYiGX/Dli
pNmqupaFHuTPEcNkouy6q93JnyP+Ncq+cpZ0I3+OsJf9Etvp4Er+HMHdmd46
84gz+XPEId1C/SIZJ/LniGPieQn+UQ7kzxEynA97WxXsyZ8j1nzyc4y6Zkv+
HBF6pjn7nJ8N+XNEZ61KQpUJ/T481hH7rv71XjEE5M8RbkNvnLnz0YL8OaK+
D/eU37Np5M8Re29+W1f+xpT8OaLflXVSD6VMyJ8j3nrHP/VxMiJ/jvg+VH1A
TqYB+et5POlPdrSiPvnreT+KjdP7n5pK/pyQY3O6c/x0XfLnhN8vp7+oHTmZ
/DnhqOSs7yVXJ5I/J3zLGpGuGaNN/pxwj+e4VimUPn8AJxRdiVcrSlUnf064
6VmwVb92HPlzwoWrayQLLNTInxPi54UE+herkD8nXHZZs3RZsTL5c0LF9Zqw
VNMx5M8J05vsxsq2KJA/JySOupieUT6S/DlhSca62WZvh5M/Jwwv/iL2QFWe
/PW8v3Ct816xw8ifE2Kf7emrpyxL/pzg9zY5QeHUEPLnhJVvzi3O9hxE/pzg
dYa/e5DzAPLnjMRGXY8gPxny54y8V2PXLH/Uj/w5Y0neO4GPlxT5c8b1kZXF
S5X7kj9nKKTzbs6UlCR/zpi9amvzniES5M8ZQ7Zpyqw370P+nPHwpEZOSKQ4
+XOG5Oyh2/a2ipE/Zyy+kxR+wEeM/Dljk7zHOYu/3aLPy8Q649nBKwMGOnXT
52Gc4Wfvn+t3/p/o8zNZztDL+Kt2yfif6PMx+c54MeaGr+WTv6LP0widsXRe
2ICvIX/p8zc9+WtVS+rM/4p4Nc7YtWrlpN0Sf0W8Jmfsy7JUyH30R8Rrd0ZR
ZaH65Mw/9PkcF1wOeHx465Y/It5AF7iqS8cM4vwR8RRc0J4XWlI15o+Ip+EC
v0tfp397zz6/44KDa/1yynO7RDy4IKbasKRjdZeIx3HBrTmtYYvVukQ8TxeE
6xz8blbxmz4v5IL3M5UKrvn+FvH8XcA3deyXJfVbxAtxwQiV2d+vJvwify44
KR41X0b+F/lzweuLF65mRXeSPxcU3b2y4vOPn+TPBWt8fzxa6fmT/LlA6Y2h
Zt75H+TPBaYjvdq3Svwgfy5I+iG1MJnznfy5wE234nPn7g7y54Kdm+Zrxj1o
J3+uULLJvr9Wop38uUJNr2J4qvE38ueK2Mecoaor6fNRGq64f7wxeWhKG/lz
RcuV4BUX9nwhf664eyPkhkdbK/lzRa3+9spg3ify54rSOof4+KIW8ueKeaeG
V0lofiB/rojKcu5EajP5c8UWjTSh4egm8ueKF5WVX19kss93uWKbtFX/2Wb1
5M8VO9fU5uTUviV/rog4EWHxMPYN+XPFsJ81NQn7X5E/V4xR2fZ45dRa8ucK
s0ZDXmlLDflzhVZW/QPNW8/InyuWKe4PuHC5ivxxIPQdtHDGoyfkj4N/T2RC
6qUekz8O5smOmVQ55yH542C7bot/dXI5+ePAdXhOUHlhKfnjICly0aT4/vfJ
Hwd1W1tsu5LukD8OLCzP7DzLu0X+OBiqyymytL5B/jjY+qxKMPbqdfLHwdKZ
c9ybOFfIHwcdamd+Jk25RP44qHhV1Za9oJD8cXBLOPpR59Pz5I8Dic+8bt24
PPLHwd1hpsvKJc6QPw6W3f/S9WP+KfLHge3cUa3hylnkj4NXeepZm8wzyB8H
ysvzPjqdTSN/bpB9r/LhXV0q+XODRZyK8fPmZPLnhn0Doblk7T7y54ap/SaW
71qSQP7c8F3pXE1cUDz5c8P2irOxpm+jyZ8bbO/0S3n3LoL8ueFnv9VnTHzD
yJ8bvH57DsvZGEL+3FBupL8grCKQ/Lnha9TbQPk1m8lfD0+xW6Mt15/8ueG1
fPPxnOB15M8NM5LffY1P8CF/boj1c9Vs6lpG/twwwjw579pob/Lnho3pqtsc
8xaSPzfMjZmVKzSYQ/7cUFDs8Xnh4Rnkzw2/1JVNnt3jkj93lCgNOT1ykhv5
c4fRWJOK668dyZ87wl9ev/A80Jb8uWOY643TFy9akT93RNRbByUUm5I/d5w8
vFT1zXMD8ueOS6MvWB6o0iV/7jD5rqd8Umki+XOHwVaZqLp76uTPHVO3/1P5
6qdK/tyRW7mcr/1uNPlzx23j9z6zTUaQP3escJxQ2XlSlvy5Y42HVIVX9wDy
5464jaVrV6hJkT93tBguMPjkL07+el6/7MtCY/8uC5E/d3zPW3LrWOR3C5E/
dwyf66kX/KzNQuTPHZAdvTvKscVC5G86VqesU6n2a7AQ+ZuOUjXlCJVrr0U8
hekQoy+Rv/8ei/z991jk77/HIn//PRb568Vb1ovn34sX0osX24uX0ouX1YuX
34sn7MUr68Wr6cVr6sVr78UT8/j/f7/Uf49FPv97/L/ny/33WOT3v8f/+1Lp
xdPoxdPpxdPvxTPtxUMvnkMvHqcXj9+L59mLt6gXb1kv3upePP9evIBevJBe
vIhevNhevMRevJRevLRevKxevJxevPxevKJePGEv3t1evLJevCe9eDUeSONc
GpHd8FK03t54YJFc/0NF/97S+vTAEI3NfaDVLFp/nzxQk7fmRd6lVlqvHtBs
G7K+qm+7aD3+8sBi36/jrZ07af1y4Vc4rCrw0z8RT4qLS44hDy6nS9A85KI0
1H7bvVfSonkix8Uhh9JTRauG0HzkQqKhr29oqZxovqhwEfr0nIbnq1E0L7lI
Nct1jJ4wVsTT4eKZ/Q9J563jaH5y8UHX2VbMSUvEM+XiqmJw6mbdyTRPudBP
Txx1/6KeiOfAhWK94m9rDWOar1ys8ONpt8WZi3h8LsKWlA9dtcea5i0Xb/yK
Wn7E2ot4i7jQW/Ihy2ShC81fLtJLOXcbR3qIeKu5uJY8IbxrP5/mMRfTds/e
5HV/logXwAW/Yqj37wfzaD5zkfS+tsbN20vEi+Ai4YNKkvPXJTSvuYhbr/XL
XGuliJfIxXMtnkHduLU0v7lYPPNT9AtxPxEvjYvKWaoyNzdupHnek7/7b/OT
0AARL6fH35onqbfNg2m+cxEu6f363+tQEa+Ii91/xlV3yO2kec/F6El/K8RK
o0S8u1xcuWFucEAujuY/F/3S/4b/EN8r4j3h4u5noZbM80S6n3KRxZltFDHy
gIj3houCR6NONZUdpPsrF792mt8+2/eoiPeJC/9H0eMM3x+j+y0XZQFbV/KP
ZIp4v7jo9rwyb8uZE3T/5cFulPuDJcrZIp4UD23n/TbyfudS/3goHBkq8Dt+
jvrHw/bYFsGAQQXUPx6MOzfEKhZdoP7x8EA+ZXFdbhH1j4f5a4dMO99+lfrH
Q5TT/auBDkLqHw/3Eifc/G11k/rHQ9jf/ou/rLhN/eMh5Vffx8237lL/eNiL
2eXgl1D/eFA5tyBhmkIZ9Y+HD9tmNtWOrKT+8bDkiPuA9VqPqH883PK51NX4
7jH1jweX9/cKqq88pf7xsHp3rE9GfjX1j4cFug5j1pQ+p/7x4NQh7zJK7CX1
j4f3c1O2OwrqqH88VPINPDzuvqb+8VB24OWAoxNoP5/IQ2Lto231299R/3re
3zDl4RPe1VP/ePCKLyoP8mik/vHwsS1u5bkSOj/k8LB5sKHvBg79PUg+D+M+
vrnPe/aB+seD6y1/9bwVH6l/PKSOHWpW9O8T9Y+H7htRIesPfKb+8TDZaLbp
2lF0HnrCg5jK8JXzGtqofzwoneXkLc79Sv3jAZGLzvE2fqP+8ZAzY+uUn8Z0
/vrEw7UX/CmDvrdT/3iYeNmdvyy7g/rHA7dgfFqx53fqHx/vVxtfavlH5z0p
PsYFqygJU+h8OJCPqTsCPEZp03lSjo+E+vYpn7Pp71kU+DCVCNhiq9pJ/eNj
5bD+tuZRdB7V4KPG5E2kxJtO6h8f37gdJl2av6h/fGTa9FsZvJDOs6Z8tEdY
39SP+EX948MnM3HIlUO/qH98FJc2dnw9SudhDh99Bt3PL00gHp+PwfaKJYs2
EM+TjyC5ga2ddsRbxIfLnw0bP0kSbxkfZi5B7dcKKN9qPt6pam8cMKOT+sdH
Yejinbub6P0G8NE4eWGL9io6T4fwkfV5xirhmx/UPz7aOOVSC1zJXywfV6pc
bwzO/k7948O10fenmPh36l8P79kzKW93+nuhND4cxOborEpqp/7xcfiEZDjv
6TfqX8/rqeS6cId8o/7xsbdgSWq6w1fqHx+jL/wrDAxso/7xMX7EnYnSC75Q
//g4ar/twqXbdL4u42P/MP0hqpM+Uf/4ULkid9UipYX6x4dgG8d2wIAP1D8+
WqbEGI8Kb6b+8bFwXfmyMVK0Pj7x4RnsWTYnoYH6x8eP+DM2ShPqqX98/DVI
G7Cmgv29lQDpeitadULeUP8ECB6mrTEhhM7XAwWobLj/fIVSLfVPgJc3ds99
+7yG+idA4LeAoyPzn1H/BIjT+D3fPqeK+idA/tKzI5fepvO1jgB5/UoTjbse
Uf8EWF7Q/42tB/39mKkAyceWKJfuLKf+CXDxr4RfUmYp9U+A4jE/vvbpukf9
E6Dq17XaLxF3qH8ClD0N/iHhcIv6J0D3gNq+jw1vUP8EWLHsfHbsievUPwHW
/2pfvtaMzterBfDVsHshNvYS9U+AHesmpL2YXkj96+HprOXn3ztP/RPA/Mop
i0WhedQ/ARw2Rb0P/pJD/RP07F8WZ9a5nqL+CSDW/LbDZ3AW9U8AjSBTe4PJ
GdQ/AV4Ej+7ITU+j/gmg9tEvPe8ena9zBEg5cmXt7KfJ1D8BwjSvB3vM30f9
63n9yIGctBkJ1D8BbqhUlaUujrf8f2bf7F4=
           
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      ImageSize -> 300, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Probablity Density\"", TraditionalForm], None}, {
          FormBox["\"Separation\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{0, 10, 20, 30, 40, 50, 60, 70, 80}, {0., 0.01, 0.02, 
         0.03, 0.04, 0.05, 0.06}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"ci 8 nm\"", TraditionalForm], 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {10, 
           FormBox["10", TraditionalForm]}, {20, 
           FormBox["20", TraditionalForm]}, {30, 
           FormBox["30", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {50, 
           FormBox["50", TraditionalForm]}, {60, 
           FormBox["60", TraditionalForm]}, {70, 
           FormBox["70", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}}, {{0., 
           FormBox["0.`", TraditionalForm]}, {0.01, 
           FormBox["0.01`", TraditionalForm]}, {0.02, 
           FormBox["0.02`", TraditionalForm]}, {0.03, 
           FormBox["0.03`", TraditionalForm]}, {0.04, 
           FormBox["0.04`", TraditionalForm]}, {0.05, 
           FormBox["0.05`", TraditionalForm]}, {0.06, 
           FormBox["0.06`", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Old\"", "\"New\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9m3k4Ve379qWIUlQSaVLGJjMZ92meNvaEPBlKEakoUoqQSIhEikqG0iQp
jRrsRk16aOSpFJUmGjRpUG/f377ud//jcOy1Putc5zrv677utdfSCIkShEpL
SUkd7C8l9b+/ks8YcdPV8aYv7S/ZFhf976MuDpk5123z+Ku2xv/3URdP8v26
d+O+m7aNN//3GS1Wivm+XfF3k23Y/31Gi3PPv3gqM+aurYQ3Wvx0Q8MOP/ED
4qmJt823T0r585B4auKy42/2Fa14SjxVseCQ9q9wv2fEUxX/2CWn925/J/FU
xT0fayYYrX1DvFHiUN9KfuiXd8QbJU5TGpdXJN9DPBXxrdcZn1N+fCaeivha
rKFy/j+9xFMRt1avmmo+4xfxRorv9B6NTOVLcSS8kWLrwy/uxd6X5kh4yuLN
+4b3ZR2V4Uh4yuLAL66q67/KcSQ8ZXFaeHjB8L0KHAlvhLhs5aJPypFKxBsh
3lVjtlrUMJx4w8UvneTHzoseSbzh4j+Hh1RvWqxKvOFiUbbihqbr6sQbJl4b
pWV4KWc88YaJl4UY/VreoUE8JfGxieaHJ1trEk9JrFPYNH/tf9rEUxJ7PIhq
7L6oR/sritOWNFaY/ZlK2w8Vb6qJfXrdzYCON0R8KTFrXKCjEfEVxImpKyYG
xpgQT0Ec9EC/ZchDM+INFie5XDv2IsmCeIPEiV7pgi1h1sSTF8/Vcls7oIBD
PDlx43O5QTvS7YgnJ86LurLtQqQD8QaKVWLOxGonOBFPVnwyY2zfljoX4smI
35vvTvqk5068AeI5b3aIJzdyiTdA3LRSzc5yjzfx+ouH+Psf2RzIJ560OOOQ
uKyfrJB4/cTLMgM/r7glIp6UWHN2bHzMSV/iSYkNf+w0W395Ju3/u77rluZP
w2//0Pa/6j/u2XFTxjuQjvezfkXmurNLbgUT/3t921n96CVWc4jXW/9u3aLL
j3eFEO9rfWK3n7y+5jzifa7/llPiIVsXSrxP9TXb9J58D5tPvI/1P+3bVUqn
RBDvQ31f87ib8XKRtH9XvVgzVr2vbyFt/7r+YpDixWKFKDpeZ/3+pw39/Yqj
if+sfugRE3m700uI97R+U3FPr+7rpbR/a/2BmRd+amvG0vZ36vtG/jvVY+Ey
+v5afeZt1ezN5+Po/1P1vJydarKaKziufi+X/fGWPls1fkZddn48+56zaJfw
8wilVWx/zoDuiI4VRQmMz1E0DczbqL+aHZ9T8efAocm3k5g+jsodUXiqOJnp
5zQ8Ly94vyOFnR+nMsjKziBlDTt/zrIFRbfVF6QyfzhSh+Rdk2auZf5xyrOs
/0zlpjF/OVk/NJe3OKYz/zmB5rvP+NqvY9eHY1vfVjvPMYNdP07v+e93D7uv
Z9eXM2LQsGg5n0x2/Tn+Ddy+UXOzWD44+Xr3PufGZrP8cLJm3741fv0Gli9O
xOvQqLWlOSx/KKo81xFcl8vyCcezaaMnR25k+cX0j2Zaij82snxj06kNc/at
z2P5x5FVW749VtvExgfmz1qaEr1/Exs/KIw2Oj3DKp+NL0y883b20Jv5bPzB
4fOxFRcCCtj4xOO3u85N7S5g4xf3mm++00zczMY35oxyUkxQKGTjHyemaWn3
31bI6gNGr1w5a6fuFlY/oNQQ/Gf0sS2svuBxfIfFLGxl9QdygWNnTb6+ldUn
pCaMtosVFLH6BeMP3XuUWotYfUNV3N5+bYHFrP7hrk7QoKNPi1l9xDZFtdLV
c7ax+onXTt2rRz7dxuorghLbLSMDtrP6i5xYWeeg+9tZfcbZjRFX73juYPUb
bY+VS09c2MHqOzrmDz/wxaSE1X+csVzYEL+rhM0PGCqvt95s2E42fyA+zXvt
uFU72fyCj6dfF47t2MnmHzxbk5imMqmUzU/QDHIYWSEsJd5IKFy7dungmlLi
qcAperiFcU0p8VRwSzh2qfGjUuKpYE/Mm6hq2TLijcKKhFUPSvXLiDcK9oub
9g7yKyOeKgK2v7R9n1BGPFVckT1f5FVWRjxV6Iv8o/QvMZ4aXj2ulc96wXhq
4H28dnexTDnxRiMsZ1vTf5PKiTcaqXI6M2+jnHijIZKN0AgIKCeeOoweBq9b
FVdOPHVopshus8xlvDHQ6w0IKKpkvDH40BmcUnKG8cZgjcsgdVEz442FyaJ/
1p59znhjcfw3N6b9K+ONwxzvp/YXB1YQbxzyqoYER4+qIN44uKjca3ilVUG8
8chKN8wxM64g3njU8jSGBHIqiDcBo66W7wx2Z9tPwEjLQ4c9RIw/AQcrnR00
Atn+E7DxaOigl/PY8SYgcpD82YpIxtOA7V6DWX5LGE8DEQ/v8RTjGE8DBbwf
9lfjGU8Dl/oV2WcnMJ4GhPY1+4NWM95EFIba3rdPYryJeHnOboJ1EuNNxI6y
k888VzPeRJwdWGK45v/zJqJnx6fqe/GMNwmvBx0f5h3HeJMg/NKu+GUJ402C
fuDyfQ0LGW8Spr5eWtAYxniTUNZ1e8qg2YyniVd1m68nz2Q8TfjuOXXDhMd4
mnCUscnUc2E8TcxZNeZMqA3jaWJAoO+ZLiPG08Jj3ktc1mE8Lbz1/dftvTrj
aaFt5OANSxQZTwtD2reGeksznhZ0g5etz/3M8qKNtGclQtNOli9t3FMevtLl
AcujNqKcG/2uNbC8aePAjVsu506wfGrjyTfl3Xp7GE8HC1SLHqoWMp4OStKD
TNPWMp4OWnKDxiUsZTwdLFm35aPUbMbTwfxF8odGeDKeLiJf1SictmA8XUzZ
mSnu02I8XezJK7z+cBjj6WJjWPPTWX1sfOvCaolFUMorVg/00E+mcYf3HTbe
9WCxLPPHtbOsPujh+fklsR/2sPGvB7kXiWMa8xhPD15ZNVsCVjHeZMybJbt9
9zzGm4xP/VJu7fJkvMmQjlfHPDPGm4wOtVbLx+MYbzKK2o7+qzaQ8aYgfsIR
1xHvWb2cAoP0xllN91k9nAKVuTLzROdY/ZyCBKXAA1t3s/o4BcNMm19WZLN6
OhX3muaoxcUw3lRcezYUiv8w3lS8XdQyKwqMNxXWUecWFmoz3lQoW9U3rlNg
vGl4UX6sL/35TuJNg9Q5LffsQ6z+T4Pu4htm2it3Em8agmorL4oc2XwwDaUb
TnwYNZTNH9Px8Vff2agHbL6Zjr49ce0hpSXEm45RrzR3vwln88902J6Vkx9o
WEK86dC4Ne7iud4dxNPH+dHz7wwT7yCePsZVtFtIrWPznT7M5ud8Xf93/pPw
9KHwf4Fj858+uG6rdONa2XxpAPf5p3e0lNB8qmaA2vmTxz+eu534BljnfrUq
VXe7ZH+uARoUNzvf7NpGxzPAJaUCs5qabRJesgEy7U6XOMRuo+MbYEi1cuBS
c5q/aw3wj3thPu9HMekxwPBrzvebztD832mAF00TH35fzfoDQ9yZM7n8BopJ
nyGyJv7TzpUuJn2GCFp4rCPuYhHpM4QHx7rSbS3rPwxx5NXLLbcdi0ifIYzV
6z0GyBSRPkMkJZ5b/uLSVtJnCIfjHc0Ja1l/Y4jmcfq7LjpsJX2GaA0s3SWW
3kr6jCA/2nj9yvNbSJ8RjlS92fYmifVPRrg7suGRku0W0meExvLzJ378ZP2W
EUqE/03de6qQ9BnBWXeYtdpy1p8Z4cqEsBeeJoWkzwgJmbcLhB9ZP2eE+aG+
7pOrN5M+I6w//FHm9oLNpM8YuSPLEvk6m0mfMVraAscef8b6RWMcD5ui/31n
AekzRvoP6fG6f/tJiT5j9KK93E2V+slkY5x+eiF63l3WjxrjVuuejBUb80mf
MTpuZ5dmc/NJnzH6i+f/d1SO+tVOY6z5YZX85hLrd01w7l/p35Ypm0ifCUZu
OFZfa7OJ9JmgJctP0etHHukzgbK4bei4E3mkzwTxTS6xk2PzSJ8Jjs/N/RJv
mEf6THA9/tgmhfcbSZ8JLsrWLPpatZH0maB8UFK6eST1550miI1X/fNMbyPp
M0XtYNkHj5pzSZ8pNDaHuDzj5ZI+U+Q+4px+1ZRD+kyxs2DXlSf8HNJnikW7
Ew5+uLOB9JnCN+D8Q12/DaTPFLNOLeVnPMwmfaaY4ZfaqTeHrT9M4ZHaJav+
Kov0maLQpvrIrOgs0mcGw8VHpyn/oPWMmhnEDTIK5mmZpM8Mf54XaD0Zlkn6
zMAdMatTrXQ96TODbCm/7rM+rY+SzZDZsmRI4vkM0meG/86cfnJElEH6zHD4
pYb84ddsvWUGJf9d65cnryN9Zqg9YGqhobaO9Jlj25N7o6pr00mfObTsV+dN
4bH1mzlqJugO3/MujfT93f7qTZnpuWmkzxwvLBYuFBumkT5zeCh+Hxt/fy3p
M0eja8zomYlrSZ85bFZFR4VqryV95thX3Gl7rDmV9Jlj5ZLSXI+kVNI3A2sK
jKMM9FNJ3wy0xs4vXty+hvTNgP6pGQ0KhWtI3wzEP7/3j7LnGtI3A/aHymsz
ZdeQvhkIrDZ5svxCCumbAZMq3+dPklNI3wws85aJv2aXQvpm4CBv108LGVof
d86ARnaousmNZNJnAdW2levq8pNJnwV+KB1ybg5i62sLXNWU9l8xNZn0WSDv
rcfDed+TSJ8Fvgw0lf9TQuvzZAsYdM56fMotifRZYH1Ij+zW76tJnwWmvQpZ
kVe9mvRZ4H7xqjUV4atJnwW+n2+5clVnNemzhJlSSuunt4mkzxKu++wHTzyW
SPos0cTR/OCUmkj6LNFnu3Gln28i6bOEXuKsXOfpiaTPEqmhHyYMHky8IkuE
3ZqkvLmL7j/UWqLOeXpV6+0E0meJh7ueN149m0D6LBGxzXOIz8EE0mcFr1Nl
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
3KzMceG2/w9pqc8U
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9m3c8Vu//x9FGQ4qo7Igie4+Xvcd931QiaaHSR0jSkFKSpIysVFaKUlmh
yB3tj5amhtJAmqJJ9fP5el8///S4H8553u/zvF7Xdb2Pc5JfEsJdLiQgIBA4
TEDgv3+Hfibx+9btkx7VVW2enfXfjzg/dNkYhxOi5811/vcjzv9yQ/B2zu1G
8xvN//1M5KdwuhLyN1wxD/jfz0R+qVTtzFdaN8yHeBP5giZKG8MkWognxq8y
Hy8X7fWAeGL8WZtWmB/a+IR4E/i7Rfrac1pfEG8CP873ukR0xmviTeBri3hE
C016S+eP55+JOLxxzJqPdPw4/jdr7pHdQV/o+8byzScJr3yu+Y34onz3/Krm
mcW/iCfKPxhq0R/0/i/xRPh3i5NitooOsxjiCfP5hqJrFxwbaTHEG8P383MK
2PJU2GKIN5o/Kq5Pdmf9eIsh3mj+6iM+h0eVTbQY4o3i980pKgvomUy8kfxP
UOG7lEoRbwTfsPSziWXvdOIN519a4xQTuEKeeMP5rqvSI+w0lIg3jK8y8lfh
BI4K8YT4yfo/TGc9USOeID/nH6+33g80iCfAL21MFggq0iKeAH/VE3/rTCVd
Ov9Pw5OQRdla7/Tp+IGGYzUhCTf/GtH39TfUXN+xUDHIjPg/G7Y9dN3wLQ3E
+9FgVe01Ze0RK+J9axAXTb8b0GVDvL4G5y9bPh7wtydeb4PK5PqP9yc4Ea+n
Ic9xiWNtvwvxPjecF5Je+VbMg85/37C/Jin00iUOHf+2QTv1mOSmbB59X0dD
js1N0dnJXsR/1dAi7nvjTMk84r1oyFsu69vV6U3ntzZEPL5ydbGjLx1/t6El
tvn5zVt+9PtrDWYRlU2N9f70ubZBabiHVrjyEgvj+A9+w2Na6qoXxUQMy1/K
fm8x9qeoa7Tmcna+RbZkinfbnQDGt0g45TXyz44g9v0WqasFp9e7rGT1Wcw4
3qX5ZEYwq9/ixAW/+5Ji/7Drs+A3R34WH7WGXb/F0mku873GhTI/Fi0tJbdl
ZcKYP4vW9BfzoR/O/FrUzn2QHD13LfNvsVrJevXh6Ag2PhafxNqeBp5cx8bP
otdztmL2m0g2vhZnn0i0/1aMYuNvUf73czF3xQaWD4tppwpk/Ks2svxYBFpv
a3kzajPLl8WUnUcnn/SPZvlDaNBAfEzDFpZPpI6LrR6fEsPyC6U0eRN1+60s
39BSC/z++89Wln/06y2eFFi7jc0PvBU+I+a+LpbNH2BcuOQBve1sfsHyyBFX
ze/b2fxD2ZoPh4XO7WDzEy+4qnc+xMSx+YvxZQFjHjrsZPMbsZ/L1xRMjGfz
H0+bJh2wbYtn6wMErXNt9h/fRTwRpMj5Cu7YkEA8UUSs9d3z3mk38UTxoeDk
hLJpicQbC7NJ/hXVnxKJNw5Oz7ZrPWraQ7zxOFOmKDsiK4l4ExBQ7GEoEbKX
jp+Am2mJ3B8K+4g/AaF//l1wKmkfnS+Gd91vo4t/7aPvE8OcgM85LQHJxJsI
zU1vUyTuJhNvIszjHpX8Y5FCvIn4ZHVzbu3xFOKJA+XX079JphJPHJFGT1JE
tqcSbxJ2vB6j+vpTKvEmYVXFXO8YnzTiDX4WueV86XIa8SZj5uGotCNa+4k3
GdbyC6+I5+wnngTGvtukMWZkOvEksH70q6OhIenEk4DK7PQrFo/SiSeJKwMp
1huQQTxJHHreYT3yWAbxpmD+xqTo7nGZxJuC7G37dkpFZBJvCsrdPh9LfJxJ
PCn0GpbNNrPIIp4UhLtuXdUqyCKeNJyq3K8sHZlNPGkM+6UT1hyUTTxpvPKN
2hJ2PZt4U/H+mewnr1kHiDcVqx+oiazZfYB40xBkl32X332AeNNgtDGw0ssx
h3jTsF0ly1L+aA7xpuNbzywtteEHiTcd2DrNKNL/IPFkMCw+9MOvcweJJ4MP
J1SG10kcIp4MBD6bbz675hDxZLG75Gz+p2uHiCeLfU+z1/ooHCaeHPyevzT9
HnWYjpeDnWi6bd3tw8SXwxGtBfZe4rl0vhy2OyvMfWyWS98nB/FS5ayOwFzi
ycNjbuCEDcm5xJNHUm7niKSzucSTx9Q3JU1TXzGePHpVzxhKieQRTx71U0WE
Y7XziKeA6+KlW7neecRTQN3FfJ0NW/KIpwDjJx8ufivMI54CLBamKp2/xngK
uOiRaXn5A+MpQmq8QMBosXziKaLd6c6MSJ184ili1cLx/4p45RNPEQt+8t/W
ROQTTxFz/+1U3rg/n3hKKNZOPGdZyXhKKIwv6xnRwnhK6Nrit/DsR8ZTguyl
tAIf4QLiKQF+3hXPlQqINwOffpfLGZkXEG8G7noU7Fs2t4B4M7BnjFaG5+oC
4s2A7Exf3TGxjDcDqotmDazNYDxlePnkpqaVMJ4ynK7VHV5Wx3jK8BbavrKt
mfGUoVbxPfPPE8ZTRmC81O0LbxlPBYH3O1fO+sZ4Krhjt2ycoWAh8VRw9GnS
2U7hQuKpoCs9MMRYvJB4KrCe9u6lvnQh8WaiNlhq8jPZQuLNxHeNT+d0lBhv
JuadWaltrsJ4M/F8IG7XSFXGm4kOL6tp+1QZTxVTg7Jy22cyniraYnZsG63C
eKrY0Tt8+mglxlOF5NmJW7tlGU8VvfLHpOv/vz41XLlz4XDcJMZTg/Ua38uu
YxlPDTKHQrwURzCeGkpP/jwqPMD8qYHzqVdV7AvzNwvVI32SzTqZv1no/Kj6
KesJG49ZsPjqfUrnFhuPWWiQendHuJHxZmH673vTNSsZbza8D0umFhxhvNm4
43riYFg6483GM5/kzNw4xpuN7U0X0gzWMd5sXN5ulmKwnPHUUZz1N6+Ex3jq
UBcafXGfJeOpw7uGM6ZPg/HUoVH3NPTeVMZTh9Dio/P1RjOeBh4WldVL9LH5
oYEFuj/mbnnO5ocGEsdsVAq5zuaHBoKVjZU7Ktl808BAgp7v60Nsvs2BicHq
yyviGW8OYqKfN0SFMt4cTD+7N2XsAsabA/6+DX2zrBhvDs76FMy5qcp4mhCd
KmzTN4GOl9JE1c2TWoe+s/VGE36KqQevPqP1xGXwc3DVy3VNbP0Z/DxXsujI
MVpfYjSxsL2m03MPW480UemfKRQfSrwKTYhsrT5g4sXWJ00ssZKoCDEkXocm
Gg6d8taYytYrLYR/imtd85vWSyktPNu6/5DNc7a+auGI0DPXIj6txy5a2DBl
wcGcPLbeamFZ/ahDWttofY7RQq3N65KgJWz91ULMse57zlbEq9CCmKlUZJs8
W9+18K/Lit/qgsTr0EK10CmTbXy2f2gj/Wh9i3X0YapPG3vvf5910oTtJ9oo
i+GtuP+D9icXbVRbNy25V3WI6tMG95L1zbKwQ1SfNpJ+Xr+xdQ7br7QRdc8t
dv77g1SfNpoG/i00LT5I9Wlj5lg9YccA2g87tHFsRELFZkW2X+ogT+eiaNeL
HKpPB2Gvnw4aZPutDq6fv3010Zf2YxcdFDcebr8hnUP16aA+3W7bolbaz2N0
UN1+wd8hk+33OkgvENscP+8A1acDn6d6D2UlD1B9OvB6o1U76iH1Ex06eC3y
N8k1I5vq08Uvn6P6z+ZlU326KLwm13J9CusvdHHfP8JC6HEW1acL06t5ugkH
sqg+Xah5F/f7LKT+JUYXbmfjnaJlWX+ji2PvLOR72qn/qdDFLruWa6WFrD/S
RW6o6a+zgdQ/dejC5WykjPKsTKpPD+p3E663f6T+S0oP3NOr5IQqMqg+PZzj
SMvtjMyg+vRwafg+vWjTDKpPD7clLjf3CVK/FqOHJzvr3nRfSaf69GB7JPj9
6iTq9yr0MHVps1CKF+sH9SAa9Kht4XTqFzv0sE4w4X3bG9ZP6iNI8aGr6inq
N6X0sW9tXY111H6qTx+uVjpZJjb7qT59DLTq+shM2E/16eN3/NmVP5+mUX36
OJlTr/O4JI3q08f5c8bBV6Kov63Qx5NEjetXHFn/q48zZ/YPeymdRvXp40Tc
iu2KH1j/bIDzA8UuiXzqr6UMYBq2oGjy/lSqzwA7dNf+bl6ZSvUZoDvn14Hj
lqzfNsDK4x+2lkkRL8YAc2s9fj78kkL1GeCvrIrLlBvUz1cYoNpw7cVVx1i/
b4AbviYn/t2eQvUZ4LV5bIbakhSqzxADbc5x8SCelCHm5efnXpdl9weGsH+Z
oNn9N5nqM8S0H6NiXrxg9xeGWJ8up5jbSPcfMYZwv9b2fdKRZKrPEJ/e2joY
xidTfYY4zvH2GxZMvGZDXFquvMTHg3gdhjBXLuVBj93PGCHw/edNx6WJJ2UE
rYv95+IFiKdjhI8j7yy400H3Sy5GOFS5xnvHjX1UnxGSldsED1Xuo/qMsHK8
XNfYHHb/ZISZIfqi92Pp/qrCCP/ayv/Tu4rdfxmh8P2reUs8iddhhIql0dfk
zYgnYIwfJZ8btZSJJ2UMxRUGvzLHs/s1Y4z6dDws78teqs8YuicyBcovs/s9
Y3T1yL3cfWAv1WeMwBlci0mhe6k+Y4xLm7F9vv1eqs8YBx7tiQ+XIV7z4O97
E1yWf0ui+oxxUVPC1OQWu780wfnkOfO+Hkui+kxQe/paxMnYJKrPBJV7XmcE
LEqi+kwQ3BS239CUeAEmaOes/UdJmngxJgiLe5lk8HMP1WeCp/2nbia20v1t
hQmmlz9VVzq3h+ozwf5vi6eIHNpD9ZkgX8Lol9u2PVSfKfIX+Vj8DiSelCn6
ZBp5iu7sftkU3/ICCm4aEM/FFMtiTUZKKxAvwBQvIuwn/BhLvBhTzJy0OSu2
n92PmyLr+P2x17sTqT5T6JhyVv/7JJHqM0WF/8u9+Tfpfr3DFJEB29p9mxKp
PjO0ZavdHHWWeFJmSDjd/nZ/OfF0zJC2N3X9nFLiuZjhjwE23Ctm9/9mUP7+
YkHKMeLFmGGldEjcumJWnxmu53UPxJxg9Zmh8LGLWkMZq88MVYviO5xrWX1m
OPyq4JLU/9dnDlnBlMPWt1h95tCt4a699ozVZ4620R3Wxz+y+szxeI95xzAh
5s8cqva+PnclmT9zrOq0NRDVZONrjoVjPnKuObHxNYdAqedx4SA2vub4tj3m
YeNONr7mMEsOfdBTzMbXAqnB0jHlN9n4WuCZxt59T7+y8bXA+hnXwjfLsvxZ
YPSwW/U7nVn+LKC+4ajQxyiWPwt0JnCtTpdQnrMssCH7WWHFM8pzhQU6jjmo
/ZjI5ofFYP9xUsHBieZbhwWMQ0b/Oh1L800ACEhcGSzcQMeLAg8Snoy1H6D5
JwXES5tkZE6n+a8M7LadHvjajM3vwfO5h+598aP1AICI69X6UzFsPQKakw4F
Tyqg9cEb+N+fPy6z9QkQvh6tEvmWeOGDx89M91kwlq2ngMKR6NgDWrReJgKl
PeY66nPZ+goskW536N9A62cR8OLOqvk/DrP1Fpiq9NZiwiXi8YGqpkWpet1s
/QXclz7oWDCe1v9WIKGKdzNMl+0XgPfldpUV3rQf9A7erjrs3KkZzfYPS3Sn
2Rs05tN+I2oJiGkuGnaF7SeWWFSPv73dxFO2hOmR2K9bxrH9zxLrNv69n6VF
+xsGj8+q7jb2ZPuhJYyX1fo4rKP909sSo58OV23MYPujJVZU5HZk1xAv3BL5
7tl11Y/YfmmJ8tM9JVN+EC/RErtfnt5bLMH2d0vczmj746tL+3eRJRRitybO
4LD93hJrTxdIfAqm/oBvCYkoh87ynWz/t8SvrqinvnnEa7VEU7l5wvNa1g9Y
YuKug9vV7xCv1xKPI3OLtTuJJ2CFVY+crLv6iSdqhdozRXOMx7N+xgoTg6tr
5OWpX1G2Qt3ChJHbtVh/Y4VRbxSWLgD1Q7CCjc/2KYdcWb9jheXNNcNNvInn
bQWRd5fPKS5l/Y8Vdk0o38lZRbxwK2z5FDNwJpR4MVYwb9df5rqOeIlWCMx8
zB0Vxf6+Z4VDV8J8H0YRr8gK+yYP6F9cT7wKK2gmxfBrI4jHt8KthGHWZWuI
12yFaeVb15atIF7rf9cv+PaEP/E6rPC9J647x4t4vVbQLRN+k+TA+j9riB1N
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
7qgT+HIgTpR4Ah6wO5DtIClKx4/0gKNk05d6EeKLeiBST/f6J2E6X9wDKW1/
5EeMoe+T8sBrqUp3jCCenAeyR1xSu/uH+fbA9xbt5vY+Gp/ZHvhas049sYPG
U8cDxe/bj/a20HgZeSAr63c4aml84YEDtxVGn8wknp0HxmaclYpZQzwXD/w+
e8RIAcTjecDlp+880VHE8/bA7Os1TzsvUv78PVC/2XHCxij2Pq4HDmsGepYp
UR6DPfAlJrbZbg+bDx5QOd9uLt5A8yfKA25CU4r3PX9G4+uBdy/Xql/89HSI
F+eBB3H6R4R66P3fRA9sfm68/Mrrx0O8VA88XPXX8EVzK42/B5oyQktmHn80
xMv1gERKtPmxrQ8pD4PXE2htsIX7YIh3wgPtis8e3JC9T/nwQEh9/LOL7+4O
8WoHfeiGNyfWtFBeBs8v+tlhHH9niHfZA4I23l/u+t6m/HhA87L5h51rbg7x
7nqgZ2q4QJ5hM+VpcHx+lpibTr4+xHsxeP2zGm/5j7lK+fLA/j+6ATWSl4d4
7wevZ5pAXYnVRcqbB7xSID4/sXGI99MDf27q6Gd941P+OBhuOufDmJENlD8O
gsd7zhUNqKP8cdCTz11UPf4s5Y+DNf1Hr2mOqKH8cTBKXWx+qsMZyh8HL+Kd
W248qaT8cfDa496fVn4F5Y+D6uqu/Lqf5ZS/QX75peii+HLKHwfT+4+69oWU
U/440Pzg3GRTXk754+Cir3p8Fpd4LhxUzh5t95ZXSfnjICxqXnptbRXljwNZ
8bmiV3ZWU/44SNj8R3dEYy3ljwOoi+SEBdP1BnOw2enbZZvdDZQ/Dgonb5Z1
SL5A+eNAIr/riuqBJsofB0XaPkUz3lyi/HFgkq099saaq5Q/Dvwqgm8dt/iX
8jf4/WZXW45xb1L+OIjXeik05/5tyt/g9Wz77wXRFsofB6dDF124l3qP8jfo
82KIefMRet+9goP6u1aXFz16RPnj4MOqkvNWak8of4Pj2Z8pXZX1jPLHweU6
ufeOE9n6z4HiuVmCKsto/t7lYM7u59W9fLaecbBjj0T+T2Xaf19w8NvHR8I7
7Q3ljwPdriDt3pGdlD8OPukuqcrZ1EX546A2J3vGuy9vKX8caOz56hQQ+I7y
x8Ws0pHlwQ/fU/64WLzZctl6fKT8cVFcaPSx8/Anyh8Xn5dZfkyMon5Eiosn
+g7TLk7tofxxseDrAptlVT2UPy5yjcW7bG2/UP64UA1VeLP0+hfKHxf+n4sf
XrbupfxxEf5AOiP3NOuHuOhVSso0mNBH+ePiWHbhKqElfZQ/LmTr3Z7kHqF+
isdF/TvfOTcf91H+uNhvtKh4k+BXyh8XIgm/O/hSXyl/XNzY9739juJXyh8X
xlXNe6bLfaX8cZHjHJwjO/4r5Y+LDctdH8f29FH+uCh8/SdkylWqL46LJXn2
y8tTqb5ELvjG5r/dvai+VC5gp7Xg21iqL4uLx+5HN5edp+vN5SLkdrrKgaBe
yt+gTwON73dFeyl/XGz5vfRExAnyV8GFX03cih0O9P8jarmI+v3aY/RLGg8+
FwERCy9/jaLxuMzF/DfK+zTFqL9s5qLUMPP7lmOfKX9cdMbMvLYXNL6tXFhe
qp8xUPGJ8jdYX0LEvtBu6j87uFDTGdXvOoPy8p6L8+JLJMcu/0D54+JSc9XB
3uL3lL/BvDmHuYzvY/njoScpQ9Hf+h3lj4fC6RIfd2R0U/54OLfCTU/jM/3/
EHEeVOcLila6UJ6lePj37CLrmBNdlD8e6nKcQlvGdVH+eIP707ZjI8Jpfszm
oexOlrXmow7KHw9ii1+kHzbroPzx8DdCsupk/hvKHw9HNU5H7B1J882Ohyb5
Ybb3g15T/nion8zR6bn6ivLHw9b47oR45VeUPx4Eb55q8dtK/YE/D6MmLR7H
a6X9PICHVs+4hSs0aD8P5qF0yaK6xhjqH8MH6+PvHGmbR/1wFA8+6cruzabU
78bwEPZDymDsfbb/8uC+ULNNYRXbf3mY0N8pM0+A7b88fPjcxhmeTutVFg9f
DVJdctUfUv54UDrzJf/k1fuUPx4kvXevKA1i6x8PphNNvkqOv0v548H2pWyO
X/0dyh8Pxu9Vvj9aS+spnwfPV9usk1ffpPzxoHA3IjJ5dDPlj4fAHts7RXXX
KH88tHdrykXvvkL54+Hk10rzxesuUf54kD++Zi83uonyx8NwyaV/BAsvUP4G
x3/PvOHbb9H+0csD13C/Jie1jvI3yLtvsfdLSi3lzxNy9+ab+984Q/nzRKbx
kiAly0rK3+DvE9osQ9+XUf48ca0mT1Ii+xTlzxN/3qdUv+Ifp/x5QkB3iuBL
+2OUP09snJqqO1f1COXPEzLTG7SdFuVT/jxxqv1lz4Irhyl/nmg1nVLw2P8A
5c8TKpKOG09HZ1D+PJHxkbMvaXIa5c8TO48lvUuTTqb8eeJ3Y7VTw/A9lD9P
xN1tFFq6I57y54lRP2f0Py/YTvnzhCPU17i7baX8eWLrtOexAV2bKH+eUNB8
E1Qnup7y54mZa6KDZD6GU/48oSRivrgkfI35/wH33y8a
           
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      ImageSize -> 300, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Probablity Density\"", TraditionalForm], None}, {
          FormBox["\"Separation\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{0, 10, 20, 30, 40, 50, 60, 70, 80}, {0., 0.01, 0.02, 
         0.03, 0.04, 0.05, 0.06}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"ci 10nm\"", TraditionalForm], 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {10, 
           FormBox["10", TraditionalForm]}, {20, 
           FormBox["20", TraditionalForm]}, {30, 
           FormBox["30", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {50, 
           FormBox["50", TraditionalForm]}, {60, 
           FormBox["60", TraditionalForm]}, {70, 
           FormBox["70", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}}, {{0., 
           FormBox["0.`", TraditionalForm]}, {0.01, 
           FormBox["0.01`", TraditionalForm]}, {0.02, 
           FormBox["0.02`", TraditionalForm]}, {0.03, 
           FormBox["0.03`", TraditionalForm]}, {0.04, 
           FormBox["0.04`", TraditionalForm]}, {0.05, 
           FormBox["0.05`", TraditionalForm]}, {0.06, 
           FormBox["0.06`", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Old\"", "\"New\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.7051397122922173`*^9, 3.705139726148301*^9}, 
   3.705139870875717*^9, {3.7051399234013357`*^9, 3.705139947965106*^9}, 
   3.705219748505315*^9, 3.705219794173354*^9, {3.705219915189089*^9, 
   3.7052199262012444`*^9}, {3.705219960421104*^9, 3.70521997191885*^9}, 
   3.705655785147888*^9, 3.7056581315030947`*^9, {3.705658305121789*^9, 
   3.705658317617134*^9}, 3.705732807807897*^9, {3.705733091814892*^9, 
   3.7057331262602453`*^9}, {3.70573350053472*^9, 3.705733578671319*^9}, {
   3.705733625031563*^9, 3.7057336631232853`*^9}, 3.705734887821916*^9, 
   3.705735044135543*^9, 3.705735079772341*^9, 3.705735120137856*^9, 
   3.705735581973366*^9, 3.705915067079032*^9, 3.705915303703747*^9, 
   3.705917620722139*^9, 3.70591810904959*^9, 
   3.705918153071375*^9},ExpressionUUID->"d15de511-5706-4c11-a9a5-\
603b6003b3ba"]
}, Open  ]],

Cell["\<\
The plots below show the probability density of separations for tracks \
accepted by the new filter, but rejected by the old filter (New \\ Old) and \
tracks accepted by the old filter and rejected by the new filter (Old \\ New) \
for 8nm and 10nm. \
\>", "Text",
 CellChangeTimes->{{3.705742716461543*^9, 3.705742720149603*^9}, {
  3.705742780391428*^9, 
  3.705742873199335*^9}},ExpressionUUID->"453abf31-7fb8-4d11-9635-\
137435de966f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"#", ",", 
      RowBox[{"ImageSize", "\[Rule]", " ", "imgSize"}]}], "]"}], "&"}], "/@", 
   
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"prefix", " ", "<>", " ", "#"}], ",", " ", "\"\<table\>\"",
            ",", " ", 
           RowBox[{"FieldSeparators", "\[Rule]", " ", "\"\< \>\""}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<L680N_MBCD_EGF.old-new.ci_8.txt\>\"", ",", 
          "\[IndentingNewLine]", "\"\<L680N_MBCD_EGF.new-old.ci_8.txt\>\""}], 
         "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Old \\\\ New\>\"", ",", " ", "\"\<New \\\\ Old\>\""}],
            "}"}], ",", "Above"}], "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "70"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.06"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"GridLines", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<8 nm\>\""}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Separation\>\"", ",", " ", "\"\<Probablity Density\>\""}], 
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"prefix", " ", "<>", " ", "#"}], ",", " ", "\"\<table\>\"",
            ",", " ", 
           RowBox[{"FieldSeparators", "\[Rule]", " ", "\"\< \>\""}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<L680N_MBCD_EGF.old-new.ci_10.txt\>\"", ",", 
          "\[IndentingNewLine]", "\"\<L680N_MBCD_EGF.new-old.ci_10.txt\>\""}],
          "\[IndentingNewLine]", "}"}]}], ",", " ", "\[IndentingNewLine]", 
       " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Old \\\\ New\>\"", ",", " ", "\"\<New \\\\ Old\>\""}],
            "}"}], ",", "Above"}], "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "70"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.06"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"GridLines", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<10 nm\>\""}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Separation\>\"", ",", " ", "\"\<Probablity Density\>\""}], 
         "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.70565566672609*^9, 3.705655750177945*^9}, {
  3.70565583161546*^9, 3.7056558691175337`*^9}, {3.705655904646574*^9, 
  3.705655949580349*^9}, {3.705656115633234*^9, 3.705656127394896*^9}, {
  3.705659452072917*^9, 3.70565945668934*^9}, {3.705732752750214*^9, 
  3.70573275581631*^9}, {3.705733679049139*^9, 3.705733679468643*^9}, {
  3.7057337870824966`*^9, 3.7057338221431313`*^9}, {3.705733886809958*^9, 
  3.705733944542894*^9}, {3.7057351787475643`*^9, 3.70573524010631*^9}, {
  3.705735341710047*^9, 3.705735529807551*^9}, {3.7057418299210377`*^9, 
  3.705741874066101*^9}, {3.705915285368682*^9, 
  3.7059152881079493`*^9}},ExpressionUUID->"51cb8caa-57da-42bf-bc21-\
6dd6b1488d80"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
cv5ItdeUM54a/mjFyhWXMp4anj89mxn3lPHUwG3weOb0hPHUsDRwS2LLY8ZT
g/7CySPSnzDeZHh7OXV6PWO8yUjoXz1E6znjTYbxxc/nxrxkvMlw9FryXr2K
8SZDheck61PLeOpYbxb34/n/36862nLN7cLaGE8dzrscL639w3jq2Bh5yeLY
ILYe6tDetOGI8mi2Hhp4eDDeplmVrYcGPh8fdFtan62HBuwsX94JsGXroYGw
IX/66YkYTwMnZTZGOCxlPE30O+ycdmYL42nCbvHaZt94xtPE0BE/xqw4xXia
GOLyrOiOhPE0UV0oc0T4ivG0EBd2Mm7aD8bTwvLK441WsknE00K22qCuPdOT
iKeFKfIvBe3cJOJpQaq/gvmelUnEm4IvJx5zpkQnEW8K9IXdhS8vMN4UBOde
cgx/xnhT4HOwYb7mD8abgupvWY3HFZOJNxUOKnJmHVbJxJuKZ5Hyawb7JhNv
Kl7uzS5/vC+ZeFPR8Wh4P4usZOJNRZHCRD/d14w3DY3j2pLSpFKINw19I+PV
g7RTiDcNv1f3bzsqTiHeNCjreWkM25FCvGmYU5l6OONUCvG0IVZ+1Oheynja
yLgttaf9N+Npo8rH/k+E+gHiaaOPeqreD/cDxNOGi88IjvKmA8TTwaWpl1Wa
Mw4QTwdq4XvThP8eIJ4OTEwyNbVbGU8HjWZD7m9USCWeDoKlSrZKW6cSbzqq
4r64vl6SSrzpOH80+MSziFTiTUdE/VblqvOpxJuOgZMHarx5ynjTseG8wuCH
3xhPF0Vxucej5A4STxeOBgNURhgcJJ4u3mS0e5vzDxJPF1X6yelDVh8kni6i
3FvlFkccJJ4eqrplU3SO0fGKepiY8TvQL5vx9eBgfnP3r2d0PlcP33a6+7yo
Y9fTQ6F2Yfq3DuKF6CHLRkPRdGgaXV8PMuPXKx5TSuvlZelh0uhrn6dopVE8
eqid2bLilkFaL69OD8ffT/ngYplG8c2Ar8ziWW/tiac4A2Mf/pO+wIV4BjNw
W64x77Eb8bgzkMGx6avuQTy/GVCUnDjv7U68kBl4PmnMlmBXFt8MFGw45LTC
kcU3A+3XphvZWrP4ZmDe5xcqTUYsvhnwXBQTvGkqi08f+/P53z6PZ/Hp4+od
zUkmw1h8+rjvPFB97W+mnz6KfJv6pH5i+ulj9c3K5deeMf30saj+wehHt9j6
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
nwtapGM3nZnKJ/1coJG9dvBd8Eg/V2wxD1JrKnQn/VzRXD/o7DoVN9LPFbxV
53ePSnQl/VzhemN5bK6iC+nnihtK8r92XuWQfq4I/DjAPHCxE+nnio0vFsQd
U3Uk/VxRrBZ+dOZ3e9LPFbHrTj2f+8KO9HNF5/sbXMeHtqSfKwS/mg7P+Jfe
L4pyRc19+7B5L9n7R64wDdt1z+CzNennirrrLzmrLK1IP1c0tBybonLagvRz
xYqvexyHaZuTfq64K7zc0b/QlPTrud6t8vp3gTNJP9eefsTIYJ+hCenn2pPf
k+x+DTIm/bgQXLRdqv7VkPTjQjtZ7rEye99KkYu3mxe1tTTqk35cRIUq+ZT0
0yf9uLB4f+z+U40ZpB8XmhdbYThbj/TjYtCwlgYvbV3Sj4sN+UF/ZSQ6pB8X
nltXLxq5Qpv04+JBv78nladMI/24KFU3e/rx9xTSj4ucBO5hg2ot0o+L/mUB
KV8qNEk/LqyW1Fd1vtUg/biof9L8y+GHOunHRbtnbecHRXXSjwuOy8QFn1wn
k35c5H3/nTE3Uo304+Iuv2tu3HNV0o8Lx2M7Thycokr6uaGyWN7h5V4V0s8N
tYVWL/e3TiL93PAjKGqKjs8k0s8Nu21m+Ey4PZH0c8M7h5ZjuDOB9HNDhe3F
uKePlUk/N2gcyd5Q0jSe9HPD7/V7dPwUx5N+bthVHxL1hDeO9HNDs9x4f7NE
JdLPDVdPlZzUfK9I+rnB8ujodzXGiqSfG3Su9X34KVmB9HPD8+g1y3K66f3A
LDeY3Jcd3RowlvRzQ2h1Jk/z8xjSzw1RovzGIf5jSD83zNnaXT+7bTTp5war
gmnt98JGk35u6Fqd2zFOcTTp544Dt4s5htflST93yPa+sEn6uWP7pPNXf0vJ
k37usInxvLT6qhzp5w5D348nZf3lSD93VF+YkFOlKUf6uSMgXi3gxudRpJ87
Jmgqvd2XNYr0c8fd8PYK57BRpJ87gu5z0mtn0fuTIe64NdSn23zGKNLPHQbr
Ds+xkiVeqjtOqdV9edouS/q5Q8H0wbyqalnSzx1r3hXcsy+VJf3cUcDpGFz7
QJb0c4fggvyPmLuypJ87xM4PnCfeJV6dO5LmRjT53CdemzsqppYVaj8hXh8P
5AyXjZz5hngyHmifdW2vexPxFD3A9b3L1+pH96vhgZEn+iVvUqL7NfCA/+Yz
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
bYELVw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
kx+0OGZSfZZQ+PeEZlB9lli/wH75TtUMqs8SJpn1k5Q3plN9lrjvusI36Tut
x8otwfk1QHlYRBrVZ4nHcqsifrbsoPossfj78dFeU3dQfVZQrizKGf5wO9Vn
hScWzh3lE9h60Qrbu+YMHfYwleqzwtdCxe+bp7L1pRXmrLWR6/uS1qexVjim
VOFUsyiF6rPC5XL9xWW/aD1bboWl9QsPHtdJpvr+vF+t6f2r/rT+fWmF+Erf
fNPVf1F91jj3s3JFy/Ekqs8aC4fMXGH7dSvVZ41XXnYDxrhspfqs8d7abMD7
JLYet0Zmzegz21s2U33W8Pa132ThuZnqs8Z4OTTdO0jr+3JrXO3tc3qd5iaq
zxpTHnDa/XZspPqsUWpnoWegtJHqs8H6MwN1LHMSqT4bHF/7Zp+7SSLVZ4M+
6qc2Rl1IoPpsUPU5ru3ALLb/sEHU6XGrHsgnUH1/jv+9wMZTfTboKMpY0BAV
T/XZQJSk7L3Fiu1nbFCz8MusFz/iqD4blO++71l3OY7qs4Vjhk2FRV4c1WeL
kEdvHd6sYfsjW9Tq5KXUz4yj+mzhPLA7sSmQeGG2MIxaZ3fPjXixtmiwlpqd
60S8bFus8q5dOciZeOW2cNil0SLrQbxrttBw3n88JJjVZ4uzM4K+P5nF6rOD
iZL44uI1rD47PMl1v/lsF6vPDrtMBCv7nWf12aFSc4/e6fesPjukXm8wOacV
T/XZYc82rlcnn/mzg9ot+WjzJObPDoNUsiOtrjJ/dlj25UHCPQU6Hy/tcNPy
Zb8n4+h8SNljptONkTb7Eqg+e3Q4VXA3tiVQffZYwqtyOeyTSPXZY5LdJ7/F
exKpPnvY10aKc3/Q/jLWHik141t/TmD7S3u87T5nGlK5keqzR8Tnm+MitVn+
7CFVmm4yNGET1WePy1XWyQM/bqL6HMB/XFunFUJ5VnfANJ/oBe0XN1N9DnCY
HBwfY72F6nOAX/d6w8AC1h8OGNqlX+ysQvvVWAcYakwUDtq4lepzQGGDs0Lc
d+q3cgeoyLw1nBnO9rMOaFmVcjTwSRLV54CvEzyn6ghY/zpC+arZ4cR/aL+r
7ojaXXPec223UX2OePBLPW34/m1UnyNM+4RMb1BNpvocYZ4l/LNETqb6HHHh
6jCfs63JVJ8j+ie/l3I1T6H6HLHsyf0NcTPZ/tgRqs/Hy+Wkp1B9joidECs1
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
+msW+fNGr62L+DY7ZpI/b8iG+Dgv30fffyZ5o6k041bm2enkzxsTLU7dX3Ke
vi8t8sauVo+a4VpTyZ83ulIm79uycTL584YDv7neQGYS+fPGHZ0JmdzUEPLn
jW1u+7jzzSeQP2+Yf82b2vlwHPnzxtQB89ZMyxhL/nygfHDeVqPpIvLnAxWl
DV+u2AnJnw8iGl4JHmgJyJ8PfpS63bmlwCd/Pqg8FbvXfWAw+fNBzIblrxJH
B5I/H4x0H9ReN4lH/nxQ6Pd7zs7d/uTPB16Gq+u1vvmSPx9MnlG7cHcofd8d
6wNO1+QxM1/S9+FJPpg9R8ascpUn+fOB87Be+u0jPcifD3xlZ+6c+9iN/PlA
KaHVfEkJyJ8PJv5eO7lRgUP+fDBnp2vx6jfO5M8HazO9Fm557kj+fCCV6s1v
6rInfz6wtl4w1MXCjvz5Il71TemmDTbkzxeiO0suZHy0In++GNHuUc9dakn+
fLG2I1c+XZHdX+CL+toVdYdT6P4D+KIj6pzmL0Mz8ueL7c27r/54Z0z+fGFx
vUzxUL0h+fOFt2z61oFv9cmfLyynP3JQGjGK/PmidqHHwZaVI8mfL47di+Jk
fR1B/nzRpGmmOTVZh/z5Ys2iOe2PkrTJny++qZQmGVlqkT9fyMma2WjLs/sz
/vBXil2PKKuRP1/Mlm1NSeWqkj9f3KqK/X7vkDL588WhItn0HTZK5M8Ph/al
hks/H0L+/PAjMWLulGODyZ8f5lUqdVi4DyJ/fkjtc/tFcshA8ueHBWnmCwYW
yZM/Pzw9nlM5bCTdj8LzQ6i3ybrEa33Jnx9cpG82G+6WI39+UPUYEGyQRvez
RPnhm8LPhBclsuTPDwHcaQ2Nj2XInx+qpswPe2IqQ/78cDbBoqY5tTf580P7
27vVT/v3Jn9+kHbgLXJJ70X+/HDrXVHwYvNe5M8P00WLatTvSpM/PwSGzvo0
NF6a/Pkh4sr53mucpcmfHyyUVfyWdEmRP38UHtZTdKiWIn/+mJ4yyXB2ohT5
84f27tFxOUFS5M8fevFXXhSpS5E/f3wN5+Z21HRL7h+CP5qeKH9aMKFbcn8Q
zx8eWzzMh7/8LbmfKMQfdpNjeh+M+E33C/lj0ZpPYY6tvyT3F0X547pT952m
8F8SXqw/ZDwqslSf/pTwkvzxJTQwMTjgJ92f5I/4beaTssq6JLwifyz45FZ1
dWCXhFfuj2FrxQmtM35IeGJ/vNiWHZ5whN2/5I9zhQUXm9s6JbwGf/i9er07
37JTwnvpj+NpF+fyF3yT8Nr80XXizY29uzvofikuHquLTi++/lXCG8DFqYOT
IhI62yU8dS4sDCIzanXaJTx9LoqjX8R0e7fR/VRcHPPKXa0X/oX8cTFgenqC
Ymor+eNi+gZnx/KTn8kfFw87dHtfrPpE/rjoO9G77yOFj+SPC7i6NSrNfU/+
uLBfeU6h89Jb8sdF15gTTk8t35A/Lqy0t8pVFL0if1xskJ1xQVP/Jfnjokzu
o3NJWQv54yJ6WL62rv9z8seF22V7v4zPT8kfFw557eXCwmbyx4W5+YOwNXWP
yR8X2Suvnwlezu5f44Fno5Zxw+Eh+ePBYE9f+0uaD8gfD+/XfnwUpnWf/PHQ
NaX/Dh+nu+SPh7a7TbN+Rt8mfzw8bDxZcLvuFvnj4ZqzwCc35Qb54+HV782r
nh6/Sv54SM8dOmybwmXyx8MvpbXz1+TUkD8eXoQ268aH/EP+eBhxa0Z/rvd5
8sfD4SqvudOmickfD4k/tWXLPc+SPx48NRI8otUryR8PilX/aA22P0X+eAhN
atE6knOc/PHw0d+kbjnnGPnjYV3R7faz2qXkj4fPlnPXdM07RP4CUCud8PVo
VzH5C8D1a+bno98Ukr8ARGSn/dYy20f+ApAiGxSp9Xce+QvAhWSt1EvGueQv
AA9/9g7Nn5BN/gKw8WxW26Tv6eQvACM+5Io3SO8gfwHwTBtrExaWQv4C8EXV
etkm5yTyF4C3Rz8dHo1N5C8AxhqTJkytjSd/AeiV1po8+MJ68heA9PAJibu4
a8lfAAylzRUSamLIXwAW9GlDS/My8heA04YdqZ8Sl5C/ANzYMlixNSCS/P05
3lWmlDBzPvkLwMqlq4qLRoeRv0AIekuX7Nk1k/wF4u6SmIMwmEb+ArHexvZz
d6+J5C8QSsuMtD6UjCV/gdB1evbmnLSA/AWiZqG4343GAPL3hz+we1vCMV/y
F4htrrG5U2d4kr9ApJ+Y5+ZXC/IXiGHG0mNPJzuRv0AUlx8zXp1uS/4CYVrf
ORrLLclfIHYkHpVVG2ZO/gJx7lj0krWxhuQvEGr7+WVZz0eSv0BELG+0nKCp
Q/4C0TDu761VfTTIX+CfeXayccoPZfIXiOAZ855vfjyY/AWiIMV44LAh8uQv
CE0epz0aDsiSvyAYVI9UD+RJk78grJmaticouctF4i8Ih24ZBRm++uoi8ReE
RWH9zG9OaXWR+AtClNBx1MKYdy4Sf0GoFSqdjDnywkXiLwjbJ2cYfBryVMIL
C4IUPST+/juW+PvvWOLvv2OJv/+OJf568Mp78MQ9eNd68Bp68F724LX14EkF
///P7/PfscTnf8f/vl7pv2OJ3/+O/33o9ODp9+CZ9uBZ9eA59OChB8+7B4/X
gyfswQvpwZvegxfWgxfegxfVgxfTgxfbg5fYg5fUg7ejBy+7By+vB6+oB+9Q
D155ML4Jv/o9d3gsyWdFMHqVh5R32j2X5FkcDNtma7OGGa8lea0JRk6rXwKv
6aMk39eCUWL3TevbqjZJP9wJhtvhWof8rZ0SXkMwrAbvfR3Y8FvCaw6GFtfz
htz43tSfwbiTF/rL16KvpP/eB6Ps+0vHARYK1K/BeBZ869z6q4qSfvwe/Of6
0jB8+YSh1L98yH/MfS7/UUvC68PH0dt6Vb2fjaB+5kN8sXnVOgV9CU+Jj6Tb
n+f9GmlC/c2HftqoPceKx0h4OnysXPjLV3WONc1LPlZ96b++7oO9hGfKR75i
Qe+gWa40P/kIyBxv5bfSXcJz4GPruNNNgxd40zzlw3st7hbrciU8bz7u//ie
GTgzmOYrHxr6kzMGnhVKeEI+Hug9tvOvGE/zlo8sqb4IXzJZwpvOx6ZdC8Y/
7T2D5i8fn3YW8TMCQyW8cD5u6ccvPWc2l+YxH5dvlL7edTpcwovhw6ruu/VJ
mcU0n/mQacrY/VZ7qYSXyMesBlOlnKpomtd8lF7JX7z+wyoJbwcfyuNdrx8L
jaX5zcf23kn+PKs4CS+Pjza54orIyESa53yEPCg7Os5gi4R3iA8Xd7Nfx+dv
o/nOx+d7Gq3jC1MlvAo+XnML5/dbmEbzno+o2/vP7c/IlPBq+DDwqXnlapZD
85+Pj6qL1lc775Hw7vDx6ONPzq/X+XQ94CNZ6USHaE2BhNfMR2pHZMnRmfsp
f39+36S78lJeCeWPD72nc5+c4xyh/PGx46B1fxW9MsofH8KHag+nzSin/Alw
3uXV3hVNJyh/Apxd2vD4W/Zpyp8A/QoMf1/fTf9voSTAZ4VtUfc+/U35E0Br
Yf74bt9zlD8B0vSkFBW96P8v9AV4WbsnPz3iIuVPAOehU9yf1tZS/gTwb02z
tBVeofwJ8HbiP1aVitcpfwIUCO72MZe5RfkT4ND+Jxfbd9ZR/gS4rR6H6MA7
lD8BMm9+0BMMv0f5E2CpenVLb4V6yp8As1MST93XaKD8CcBR0NN46dVI+RNg
8ok5QerJjyh/AhT23puv0vGE8vfn/Z+Wleq5PKX8CfBQsV4Y/tczyp8AzSEh
xqJ3tD5PEkD+wJBis3EvKH8CfHNV91G6/pLyJ0DunPxnKkGvKX8CnKyRHybX
+IbyJ4CB/kPN3Mh3lL8/Pmdqe8fKf6D8CTDrmn9Sn8MfKX8CpD4bM9jZ6DPl
T4B79ZY7FX59pvwJEJbLi+1dR/ubawLUl1Y/lSv4QvkTYFjUslXDlrVR/gR4
vJRzZKRHO+VPAHsXg0qpgV8pfwLcmvy7e0cd7b/eCxAQmtF8JrmD8ifA0w+b
Hgm9v1H+/uRjYdBXXvs3yp8QGWviDsRm0X6vjxBNaxVOfbag/eEAIVoa87sy
q79T/oSQbbhRl4QflD8h5MumRr0vp/2ljhCDIy2Xd6jRflRfCDX5HPPOiC7K
nxC9x19eOPEE7U+thIj/fX19/rsuyp8Q5SkzxoUN+Un5E2L+rCTFBfo/KX9C
vDz6e2WiMe2HeUKUrYstLRv2k/InxL5DraP7StH+OESI9rYGpcq6LsqfEGbP
H9xW30H1hQn/5Gnh9HRPqi9ciPRhc99dePmD8idE34sZe51X0ueNEeLjNbXP
1d3fKX9C/DXwRKPuiu+UPyGS3R/2D2rppPwJoaI9upeNVyflTwgjzhWZOzl0
PrKFGKXysMzvDe2n84SQNn3Rv9C8g/InRNIb/rYBC+n8HhLiQI3qz+zCdsqf
EAZGO28vbaC8VAjxdvPtupP92ih/QnAnfMyKtftC+RPilOqhvi9msfwJ4Riq
G/os+TPlT4iDhzg5XSs+Uf6EELpm7Ai694HyJ8QduZMuibbvKX9C3Lx25q3T
btpfv//z+basKH0+8A3lT4hq51MFnxNfUf6EeC/cHxbX/yXlT4TV/nPGHc9u
ofyJMPqhS0yEDfXvABG4nw+cjn78lPInwpyyY7oR6fT/Xuoi3Hjiuj33xGPK
nwgfxn/a8G5KE+VPhArzoiu2erS/NhVhiPId3Yq+Dyh/InyVW751ifx9yp8I
J8bd7G9qepfyJ8LRzcMPbZh/m/InQmuEj9Szi2x/LULlh08nHFbdoPyJcCX3
H6Pj+VcpfyL0SoxUHPvrEuVPBOm4toMDkmoof38+7x4l2xIu7a/DRZim0bb0
vsN5yt+fz2t9wtRRJKb8idD/YiX36JizlD8RDPtoB8bJVVL+RNDt1PjU35D2
10kiWC3/3x31xyl/IvgMOutVYnmM8ifCjmNjlwqVSil/IoyyrcsuHnuI8ifC
q4OnduW/of31IRF8Db6VOj4spPyJsH7R/s1bhu+j/IlwRj/RetCxPMrfn/eT
3nh1oUou5U+EO1kyn6u9aH99TQSdvNUFla/TKX8iONy+2rvly3bKnwj8TinP
9JAUyp8IKzMq5ozQT6L8iTArr758ryntr9+L4H1yic/kk/GUPxH61d/uJzy+
nvInQtMJX6cBlmspf2OR3qe8Y1lpjOv/A0eRjnM=
           
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      ImageSize -> 300, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Probablity Density\"", TraditionalForm], None}, {
          FormBox["\"Separation\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{0, 10, 20, 30, 40, 50, 60, 70, 80}, {0., 0.01, 0.02, 
         0.03, 0.04, 0.05, 0.06}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"8 nm\"", TraditionalForm], 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {10, 
           FormBox["10", TraditionalForm]}, {20, 
           FormBox["20", TraditionalForm]}, {30, 
           FormBox["30", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {50, 
           FormBox["50", TraditionalForm]}, {60, 
           FormBox["60", TraditionalForm]}, {70, 
           FormBox["70", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}}, {{0., 
           FormBox["0.`", TraditionalForm]}, {0.01, 
           FormBox["0.01`", TraditionalForm]}, {0.02, 
           FormBox["0.02`", TraditionalForm]}, {0.03, 
           FormBox["0.03`", TraditionalForm]}, {0.04, 
           FormBox["0.04`", TraditionalForm]}, {0.05, 
           FormBox["0.05`", TraditionalForm]}, {0.06, 
           FormBox["0.06`", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Old \\\\ New\"", "\"New \\\\ Old\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
YCOfZxyfzfga+MVXH787j52vAeXQbXH/FLLP04Dr328/P59hvHFI/u16inee
8cbhw7wNB15cYLxxWGaa1XbkAuONQ5ncDvGFIsYbh8AJs+1G/z9PE1UeslMr
CxhPE9vOLB3VcZjxNNF0KrdhczbjacJ5+06jgzsYTxNev3HMKZHxtHAq40j/
sDWMpwWjvxfGe4QynhbuGq/oc38G42mhLqpiUC8fxtPCTb3yQhlbxtOGRWPw
nnu6jKeNSYdSvi5XYjxtGJy0G9/vD8uHNob1W2WV3Mjuvza8f5mk9nnE8qKD
+vUhXmkXWB50ULldabnePpYfHZhOMNJs2Mh4Ojj+oWjY/fmMp4NPUYd+vfJm
PF30e9z6a5Ix4+miqzlzeNVQxtNF+dWM+ffb2XrQRbJ307dRVWz96MJyU/yr
ivNsfYzH08ULtbt2sfU0HiOOpEdvX8XWy3j0nvC7/1kR443HwS859wLMGW88
cvKjV24byngT0M81aeL8VrbeJyA6/N7GyjK2nifg8hMzQWs+W/8TMOLynbfn
ErKJNwEfomIPGc1l9UAPFoNnbw/kMJ4e8sfNnuurynh6OPx3zaY+naw+6SGi
+5xT7BNWf/SwYXnv3uUnWL3SxxVRaFlL0l7i6cM0vyXr+VxWv/SxecQGnVxH
xtPH3UzdUI4y4+nDM67u+fX2LOJNxKn4w33Uy1m9nIiAljVTZx1j9XUi3P6Z
VRm3MYt4E3HbSShJnMHq7USkmIqrwqwYzwDOhnPuug1hPAOkvl9n+KMpk3gG
uH/icNieG6y+G2Cv2QudkfsyiWeAwBtqFzdEsHpviPkXQ1eW+7P+YIgzw+9N
kdNjPENwqszmqsoxniGCRCfqlepYfzHEHWvLhNZzrB8Z4Vrdw33HU/cQzwh+
DpHjXUNYfzJC2ExTrRKHPcQzgq797zSlkYzXc75Z3SV8ziCeMZycyg9wb7N+
aAyx4pMu/f0ZxDNGjs+nyfWrWH80xtjfYy/P880gnjHibsyru6nNeCZQ/31T
9tuv3dLjlU3A6XZY/enJbuKbwE3lwfGr+dSPfUzwpHuF4bQY1q9N0HDKUkYy
mfp5jAmMKgbXfjcgXqYJ/pb0luuSI945E4jDh6+9UbOL9JjA7Juja8BJmhca
TbCLEz/zYtwu0mcK49/10c1Td5E+U/jHTf3YYMjmCVN8f9pcUCBHPB9TPMlI
X+5cnU76TPHugdjheEE66TPFi1ETbzVtYPOKKaYZqe5rF6aTPlOE9hrzvm48
m29MMbfN5NPeXzQfNZqC0xFwyvwRm4fMMCswLfP0wZ2kzwzXjJ4WKEWw+ckM
8+fqNAZ47iR9Zug+FPM3dQybt8xgk/Hm+NnWHaTPDDffuudWXGfzmRkOJJ9+
3bRrB+kzQ7SxsqbcQjbPmaFf9PrR4+x3kD4ztI14ucZ3MPFkzPH+kGn3ljfb
SZ85WnSi896cZ/OiOaY3na+dmryd9PUcn17H75yxnfSZY8uET4OumtA8GWOO
E1/eRl3qTbxMc3TsLvFur0kjfeYIGR0Zt+BEGukzh8IieRejjTSvNprDtiHi
qcOUNNJnAd/q4kOHDWi+VbaAGx6dDpIjnrkF9UOah30sUDL1ygKLWdtInwVm
FB67ZqFA83OMBXLCVM/qXt5K+izw5qvikVGLad4+ZwFd87h9/cZsJX0WGF+2
KGxoOc3njRZouHJL3TJ2C+mzxFXxluExlltInyXCjIr0BrWkkj5LZP/E1/Lc
VNJnib8iXW59QCrps0SGQ7CO07BU0meJWz2r7e/DFNJnicbP5ZbjN6eQPkv8
7N3x5KI7209Y4r9qfrNvCumzxKh0xbXcO2z/YYUN03598U3eTPqs8M107JAP
PptJnxVWq6ypGq60mfRZofC20rPbNWw/Y4UC9Sqxbm4y6bPCyKo7H3QWJ5M+
K6Rlf9EstkomfVYwn+no0ad3MumzgnP05ZivT5JInxXWpk8/nHUoifRNwoap
Ou5tq5JI3yT43R29sN2T7bcmgWtqHHFmLO23fCZBnrtMTq0zkfRNQofwSZTL
40TSNwkDp099oV3A9m+T0DKo/9VziYmkbxIyQl+rt4Ukkr5JuD+0+tk3N+I1
TsKiEX9yM8cTT8YaVTd9PrYMIJ6yNQZo3D7f0ppA+qxxonbZjpRnCaTPGioc
l881VxNInzV2nff9UnyM9pcx1li/OamfTXoC6bPGSC3ZAMdY4p2zRknZaf6z
ZcQrs8Z/m9X2QOI1WuOS2uOkJD7br9pArO/bmuhKPGUbOJ9Q1Om2ZvpscHOg
pqDSiOmz6dlPbRnQqcP02eCexPtSpDrTZ4O06GVqhqOZPhsYR33N0R7G9Nmg
SfXNQpfBTJ8N5oxyGxytwPTZoKN4+O+6AUyfLZJHh3y0HcD02ULNyqp+zwCm
zxZnhyZVdwxk+mxhcGPpVj1Fps8WzRlvw5yGMn222Or8SclkBNNni+kTMrOf
KzN9tji5uz7KbyzTZ4uledXz5rLrbbRFV27kI10Dps8OaV8e1q0zZ/rskP66
snOVHdNnh6bkff82ujB9dvDZpLa4xYfps8PBlvmTp09m+uzgMSBikOtsps8O
b3b6ae9ZxPTZYWnSl6wpq5g+O2zLCumzKobps4Pr/eNz21KYPntsGXXt/L0M
ps8eizce+yVzmOmzx/or8+8lnWb67HH37l/1OVeYPnsc/TJvQcZ9ps8el5uP
2KjXMH326FN0dUdHA9Nnj3dZR//V/8b02eMHf0HRaTm2PuxxUPdndPpQtj4c
UD96ps0zDbY+HHB2wvamVSa03swdEHlo248Y0HrzcYBR8tSFnTy2fh1QU9ti
XTuHrV8HrNrluUA3nK1fB8yVXzz3Yzxbvw6QjfPcbZ3B1q8DWota0v/kM30O
2PLR64HHFabPEXV6821UKpg+R1hdsvHe0MD0OcKJdy990U+mzxH/JPT//H0w
1at5jsia2TlZW5fqVYwjUhKz5zbYU73KdAQ3p7lFJKJ6dc4RigNaR00NZd8P
OeJgUHap/CZW/xyRO/1HxIz9rP5xsNi5O39mMat/HHSPPDl1UCWrfxzkOg4r
4H1m9Y+D0FyVBv8BrD5zcOhwhVGbLqvPHHA9rJNMXVl95qDTUbypbxCrzxys
0FL9mxzD6jMHv6ZlqOTmEK+RgzazG9yAUuLJALuGFB7P+JeOVwCa2vncGTKs
nwAfXxQpHx23WXq+LoD1dcWLXFh/ARqrb2kdDaF+9N+fs9d89kti/QaQL/sx
OqiAeAGAnrLXpMpy4s0DNJpWL0/8SrxwwDd5g3nqyBS6XkBQGDz0qS31w1Tg
cW/jHH4g65/AwK6W3s1x1B+PAHMq008eP8b6KbDS08Qk4SHxJEBi6YMzc76y
/gpkWs43dxhF39fVAn6z5D0H2lP/bgTcPhYnXJ1N/b4d0NwRHeO5ifq5jBPe
+ousCvOp/ys44eFm38cPHhJP2Qn/Oi/wO/aFeLpOmPnyTI3uiC3knxPyjmrV
iaxp3oATfvZ9sG7U9C3knxP+njgpmrOO5o8AJ5zJLg80y2HfJzqhaJOp+ToJ
8cKdcFz1VZDFa+LFOGHHrKefp8jSvJPqhFPnxnWXabD5yAlyqrd37uRsJf+c
sDn9WmHBTDYvOaH5icqrfmu3kn9OGPesYvyxDDY/OWFFr29nlp8jXq0TXk2L
jQ4uJ16jE27ohbdv+UC8dicEVz1zrJRl33c649rMwlkWKjTfKTij7nq74Izp
NvLPGad7n1D18qB5T9cZ76pe+XyZuY38c0bPZlFQtIJ4cMa4a/slmxLYvOiM
pbCdODWTeAHOiMx2X8QtYPOjM14lPhzqUkK8cGfI8m5tmV7G5klnbDxquWJj
HfFSnTFnq3rpP03Ey3TGL35Uff9O4h1xRk3O2NxrsmwedsbQTXYlqf1o3pU4
Y0p3auRHBTYfO2Pa+SHJ74fS/FvrDOWjt9vWjWTzsjPSn548eUqFeO3O0E+5
brRZnc3PLjDQ7nO5rybxFFxwdGfoKhsdNk+7wCG1+8vwCcTTdcEv2SLBCX02
X7vg9bfkDDlD4sEFOQPXR6gaE8/HBRbctNZOE+IFuKD7y8WleWbs+2cXnDrf
ma9vQbxwF7hu98xNtCRejAuWTCwccMOKeKkuqNUfk/12Evs+2wXWVrsHtlkT
70jP799GDm61Yf65YPPAvTPe2zL/eq43WvNbjR3zzwXlH/NT7tsz/1wwtrdR
7XUH5p8LHi0o2HHXkfnnAqOVOnJVHOafK7LCd+3sAPPPFcPn/+LqOzP/XOH9
vwGU+eeKbZEHN7x0Zf65ov5To5+Yy/xzxf48lcLP7sw/Vyzku07M9mT+uSLH
cab1Ym/mnysso5adcfdl/rnCqiOs2M2f+eeKxlHLVnnxmX+uEFYFDlgkZP65
QrKDl5MsZv65ImWf7YELU5h/rph8TDv3bQDzzxUrFJQ+ys9g/rnCRKvvA81Z
zL+e6/so42g0m/nniriVClqjg5h/rhhwecKa+rnMPzfcXTGjOiqE+ecGhY7j
8S/nMf/csPqbysi/85l/bph1/1TV0wXMPzcMehw6aPpC5p8boobO2Bu9kPnn
hq/vY+6ZLWT+ueFe4avXEQuYf244oBS92m4+888NC3XmLg4NYf654WlKWtiQ
ucw/N2gVDD2tMJv554YpcY16c2Yw/9ygdGfECpmpzD83HHp08MlbAfPPDSf9
0//948P8c4Ope/MePy7zzw0a10++uObI/HPDGsnr41OsmH9uSNub4CvP1psM
F+cKDyg+/v/1y4WFr7l13ijmHxfXtexitg1k/nHx99a6Drk/rP5xUTVinf/3
elb/uChoWnOw5Tqrf1w4vFh4+89BVv+4MDjA8x8by+ofF882TsifyeppOBev
rLrmF0xi9Y8LmSln52oNYfWPC/u3k7NvNbL+wYVfRE1T4WXWP7joWXz1D7ay
/sHF5L+LjafOZv2Di3l1Cxe7mrD+wcXtb3qhBX+pv9Vysd1sz6rzD9h+nIu7
6UWJQRnU39q5iO+1uPH5HLY/d4dOWdGfiROpXyq4Q1s7cl1KO+u/7tC8Wvyj
5RLrv+7oGjN1a1os27+7o9dWv6MJ7tTP4Y5ZPxKTviuw/bw77vz4Lv+rguaN
AHf81Nva69RumjfmuSOs1EzHYzrNG+HuSOr36nnlWDa/uGNG89oFa97RPJTq
juNy3XmT82keynRHqrWwOm0pzUNH3KG+Mhh8C5qHzrnjipyBb95Pmtck7nin
vO3E9WtsvnNHW9/EhxeSaR6sdcf+4L6bsgVs3nOHvOqPUdljaD5sd4evkvf9
l+/ZfOqBgX/kTERFNH8qeEBlVnew80Y2r3pgjSUWHuPTfKvrgSa14uG5mmx+
9cCt4NmVNh00j8MDE75qN2XdY/O2B4pWKzRfyKH5PMADm+rlVC5Esv2BB7L0
+kft4dO8Hu4BQe6I8MWGbL/Qo2+X9kr7gcRL9cC8f+yG/G1m+xsPbGjjptSU
0X7oiAe6vvpEXT3N9jseWL5ctPTgbtofSTyQ35fnnLOe7X888HqUr1rWAuLV
9lx/nnf3DhHbr3ng3C9XUYYz8do98DmG65pqxvZvnljyfvLcYG3iKXjif19n
sP21sidsph42ujqIeLqeGGT4W39AH7a/88R8j7D16n83kX+eML4+vOFJ1yby
zxNHur8nKHRsIv88YeA35HHNV/b/257grl47RK7nd6l/nsgw4bxY85V4MZ4Y
Gznd3OUb8VI9ETyyJUSnk3iZnuh/7Vu/4b+Id8QThXobTsjKMP88kX4+Y31l
H+afJ3rd9z60VIH554lX609VHx/G/POE7tPrqkmqzD9PXH2dOfGVFvPPEy0K
zsY7/n9/7gW//tcv7bZk/nlB32b898eOzD8vhPyzad9oD+afF/5sfHl6CZ/5
5wVrWfup56cRD1744Xne/85ctl/2wtvBvIm7Q4kX4IXdfYZtGL6K7Z+9MCVt
YPj4dcQL98KCEe7GRfFsP+2F++m3zl1KIV6qF4J095Yo7WD584Lx/TueJRks
f15Y2TA1Ljub+eeFKn3xn7wDzD8vfPG54f3gEPOvh/+fnUeYf15w5chrOh1l
/nkhcHxHyMKjzD8vXLmwpDzyCPPPGzM/rZgeepj55414EyVLg1zmnze2PXS9
czOb+eeN63qjbVUzmH/eKO3cMU4zjfnnjbfxJ5saE5l/3qiIW647Yz3zzxtJ
3+qqY8OZf97wsf+l4zCf+eeNtcfuRu8NYP55Y4SN64tsL+afN0oOrKwxt2X+
eaPcQPhyyQTmn/f/f/8j9c8b043tGxJlmH/esGzniFY1U57LvHEF3e3NTyjP
td4QhISbfL9IeW70xrfZ2fIZObQ+2r3h2hgzTBJH60PGB7nOKpfWzyOegg8G
Riz488SdeMo+2Biz+GXJeOLp+qBPkNY0+77EM/fBLpW0cP7bePLPB2mdx3fJ
l9LzKD4++N4VLgnOjCf/fNCRLG6ctiKe/PPB4MbX93960vMs4T4I+XXmlpsG
8WJ8cCzseqpzRxz55wOnIa90O+6y52F8ULJjwdegvXHknw/u7J+VtyM0jvzz
QetHrf3J9nHknw/0Zd478QcSr2eDrrvhMLetZiP554Pzf/8b8DeSfz5I0inj
V4ZtJP98UCvYqalvx57P8cVkQ9c3Ub03kn++cBjOySsviyX/fDErWznKJD2W
/POF8rCH9wqnxZJ/vgj6lfjbRyOW/PMF//bQctWGGPLPF9xrc4/r5tPzQgG+
2GcT+WdNKHueyBd+Z9cYaBrHkH+++J5vljf1zQbyzxfROpYBHiEbyD9fGPmN
+23yfj3554sHV5tCDBesJ/98oagUu3Tqh3Xkny/Ov6n9VDafnm+S+OL60dGL
jzVGk3++mFQzZ0n/EHoeqtYXqWYRan3eriX/fHHTcI1cyWx6fqrdF/XYccjr
1Rryzw/7+56peTB9Dfnnh5UOGfen1NLzV8p+KLDee0pxShT51/P3596yfatW
k39+qMh8yJ0uXE3++cHW8vUx3SeR5J8ftBe782L4keSfH/r+lITEVESQf36Y
ckBRiSOIIP/8eiag0vKKylXknx/89uy8yZu8ivzzw+AnFxTLaleSf36QLWyq
mj5rJfnnh7v+UyyHvKPn0c75YXfO1iN/F4WTf3648yFpl0X7CvLPDx6mh8pu
RtPzbLV+iLj97J+SfivIPz+c6hhzQy99Ofnnhz0fDsiP0WTPw/mjt0XXnr1n
wsg/f+yW9Ustdg4j//xxfphCfNtxer5O1x9P1z76dL9yKfnnj4tqqx6NkFlK
/vnjy5nZic+Ml5B//jihMm6b5txQ8q/n8+6tO9Q7azH554+Nq55rbny6iPzz
R1FN1uIDSvT8X4w/HMc071kmWkj++SM9MdinOZM9L+iP8pQKZ9W388k/f3ya
YBotZ0LPF57zR9usuK6cmHnknz+qDe/+0/6UPY/oj5Ev907vMggh//xhoxPk
fC6Jnl9s9Ef2i1be8A9zyT9/PLh8rEHDmz3vyMNJ/i2X8jNB0uP78nCx4bXC
qDFB5CcPT/pOim9LniM9fxgPy37P9hb/mk3+8hAp3pNnGzZbytPgYfPjua0a
FYHkNw/nFk6PO3F3lpRnwIOG1rXHP2/PJP95SM53zP3wYIaUZ8NDiYrb2jnV
9HwneDjYZ9DBaU3TpDwuD9cszoTsl51G94cH5WOmtw00AqQ8IQ8m+vnDHrtO
pfvFQ6snb/u6ZVOkvNk8dDjL+ww4MJnuHw8TDiskLn4mlvJCeRhivWrHYiUx
3U8edm1Ze6ZbKJLyongQ18t++Z0lpPvbcz1+UdW+7wVSXgIPhXEpRk+sBXS/
eThr+KZ04Ta+lLeThw9duuJvzTy6/zzEVWrm8bx5Ut4BHgrM/Xc8ne1PeeBh
/MrfrRwLPymvkIdO64b5+UN8KR887BHk/n3W4S3lXeQhVXHzq7S3XpQXHgKL
1q47VOsp5d3mYctwxfqn1R6Unx5/I9Siv7x0l/IqedDXTLhzq4VLeeKhqK5h
poYsV8qr56Fi/vPnj9TcKF88KKXIPj/o5Crlfezxr3e0c2ioC+WNh8WKBuNk
9ztLeT96/Fh6aqjJMyfKHx87qw12PB3uRPnj4/DmXsGlAaD88WG4bNLkbE8O
5Y8PNSMzi9MtDpQ/PhZeuaa0JNOe8sdH6Ebzz8kCO8ofHykvpiheH2lL+eND
f2L3pccN1pQ/PorvRCeuKp1E+eMjc2ju5cWHrCh/fNgHlTav2G5J+eNDq58p
R5hsQfnj43KAp0/ZZnPKHx+JR+fYH9llRvnjo9uF9/lwvinlj4+TEV+q02+b
UP74MFBxcI+uMab88bE8f05nhYUR5Y8PF335whu5BpS/Hr0TP/Ka1SdS/vh4
b3+j4lWBHuWPj6ouxJl6TKD88XH1md6G1HZdyh8fR5ebqMSc0KH88VEG5aUX
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
+2MVJ7S7Fv8dfI3dPztBWs7r2r0LxOM6Yf2P2Y+STxIv3Ak/9g5873OEePFO
uMMdHSn///fbTjhecnzk51xWnxPyrp5tf5HN6nPC0ViD/t8zWH1O0LYedtQ4
ndXnjPNpoXu2pbH6nKHkOmLzyHRWnzNyN1k2v8pg9TkjYF5pfms2q88Zei27
b+nksfqc8Szvkfyh/6/PGfJuUeZLjrL6nKEzdlFkXCmrzxkLs67a1Zex+pzh
1BX1NK6K1cfBbsu13AV1rD4ONMVb/A43s/o4SFI4PH/sJ1YfB9dn3z787i+r
j4Pn3/0lPgxn48vBSG2LuwZabHw50M5ZtzPDiuWPgx8z7ITmvix/HNjpTS/s
CGP542BT3r9RZctY/gBrrRGDMlJoeymgZcbJzshDLI+ApUJtjGMF7a8LjHRN
WPTmOcsnYJV3LzL0O/EAPEk4XZkvz64nIO2k56stpnT9hQDlazZJKwWw6x/w
/rFB1ziCrsdoQNPAbWj5FjYfADkLqwdeLSJeMhCwbuwmxWo2PwBJV6Y1nHpH
vELg3ZPV6cmD2XwGnDFPbErSo/lKBGxfl+id4c3mN+Cmevyo03Np/qoH+PJx
zrc2sfkOuKuQ4HjnMPG6AGPjvG8Hb7L5zwVLw+5FTHhHPCkXuEweYVE3iM3X
Lkg0Sho7cCzN77ou8Hg80rfDg83fLoic3rhi+Sya7+GC/3VH69l87gLfhD9a
E/KJF+KCj2NnxmZeZr/3uGBHhGTQpGfEi3bBQ/FvTtu/sfXIBUN9DRNM5Wj9
SnbBo4+nLpoasd9/XJDA3TZusxetZ4UuuKh4db7hdFr/Sl2g3DNBSnoVrZci
FzifCT6gnsrWVxfEZ1yJnVBEvHoX1BzfG11YztZbF9w58U2t5yHxulww0r9O
KqCNrb+uCLGxe7L1D/GkXBG32nxSwTDWL7hihU51dNxo6gd0XbEnRWyRkgnr
H1zx9Oor3RAn6g/giuixcZUGvqyfcEWZYl16QjDxQlxRmPUxRhDG+gtXaJfX
u8TPIV60Kx7b/ncE1m+4ol8EEs5HES/ZFQcmVmsdjmH9hytODYH3pWXEK3SF
ekpJbWMM60dcYeM4QkoymngiV3zRSKrVW8R+T3MF1/G3jtMc4tW7og3//UJN
vFZX3DQeZKoqJF6XKxpli67f9yCemBsSbCZdD7cmnpQbpgk0r9VoM39u0JD8
vUxOlvlzw/XJb18Y/2b9jdv/90t9/twQ878bctbvuGG79neDd8U0viFu8JWR
tD+TwvofN8y4K1eycxHxot2Q1F/WKYFLvHg3KPX8EWTrsfy54e6E6qqP/Vn+
3HBBIuJy2nPKc6Ebtpx42ZZ2ivVLbjiSrvJcZhPlWeSGlRLSPfJTWP/Ue3yX
o40iY7o+6t0Q7dCeO06M9VNuGOJ6rXj6fXb9uiE1XSctIY9dv+5QNRq06vBC
dv2648TPqXEv7Vk/447hGWrLfQfRfKDrjgyBY93nWtY/uOPUwuLR33JovoI7
ZLbPk5s+l81/7ig/Mu+uhzmb/9xx+3RB1PnfbP12h/u+Idp3r9N8Gu2OxMvZ
/ju3sfneHV/GcyfLjaf5OdkdFgpqAyaMYvO/Oya1/QuPbqX1otAdinHdjotK
2HrljmtqXZ+DltF6JHJHheLXj5bObP1yx/SKnvhBErQ+1fd+HyuRWrGHfj9v
dcfl8AG/UsZtJ3/uWN718+68S+z3dg8MHlBzOckvhfx54PSv7V/uPqff51U8
8Gys9SOfiG3kzwPWOqd7M5FM/jxws1PS0iIlmfx54GOjqWrJaPr9n+sBvyyT
LStPbiV/HnCM+vehwI09L/DA6LNZx20e0/OFaA98nfX3gc28LeTPA+p3dEUn
/mwmfx6wyVUZlraDPa/wQIHe/bGd2vS8otADoQt8pW9e2ET+PLAgfNMVpcBN
5M8DenM2HHrfkkT+es9Hw3WK3eok8ueBrqbL3tJySeTPA/3H94hNKkokfx4o
r/352dAlkfx5wii4dERiPT2fkfKET6P+itlR9HxGxRPn1Gftvzx0I/nzhPnJ
oKiigwnkzxMNwyLPSIGe98ATFQbFKb+fbSB/nlhh7/x9ybIN5M8TOoblnkvk
2PMjT7zvqHr4q2Q9+fPE8ClbeLLc9eTPE7/xQHS+jZ5HJXtCec4cw69J68if
J+5lKmff0l1H/jxxJMVjrnMlPd8q9YSSfFlOUHg8+fOERFFRntKgePLniWFy
LZny/LXkzxOqEUlyi9PWkD9P7DxmPcL/eRz588SUhoClIq048ueF8L+GX54v
iCV/XshSMQ45dXY1+fNCs8XxZeMHrCZ/XlhgwrnWyF9F/rygI+cgOblgJfnz
gvMVs6uvu1eQPy/ss4s/v8VnBfnzgt2WDWdn5C8nf174dCYzcc3PZeTPC925
AQVdQfS8Md4LM85GVN45FUP+vHDsYqmqlnwM+evdX+196N8Yel5Z6IU7Es5H
lzyPJn9eKLhxMGKzWzT588LmW21hvJIo8ueFhapzAutVo8ifF3btDmzXTV5C
/ryQF3bPz+dfJPnzwigrr1qPGPZ81RuBUgNiAhro+auUN3YoXb3xpm4R+fPG
gVPfTk5/sJD8eUM5Szyz6mEE+fNGcpfSrrFNC8ifN3au2tkvqWM++fPGydYn
Lu/7zyd/3hhYdFImbNQ88ucNMclLwxs5c8mfN0zKJ+TMnzOH/PXybiddGJQW
Tv68sSfm7cDjN2eTP2+IxOW1J/efTf68sVRUeEbCdRb580aezfOewqSZ5M8b
e7Hx5bi6GeTPGzdPrvTYqE3Pv+u9ITnyS8Th1dPJX+/5N/1Yu+rpNPLnja5H
s2e+t59G/nzg9u63+FGPMPLnA7GSWVWeGqHkzwebxofsmzdwKvnzgb+DkW5d
92Ty54MC9whD24+TyJ8PmiYVbPH/EkL+fDAxfLLyzR563h/Su3/T5A98+Ynk
zweGat/3HjGbQP580O/MjOrwifS+QLwPxuw08HZICiZ/Prg/Vt6i9nIQ+fOB
x+fm/Y9+C8mfD+prRy/5BSH588HJR3e+v0gWkL9e3svoYQ4v+OTPB7kBc71v
29D7DPU+8NI+1N80nUf+fKC5ZMuH4O5A8ueDR9XjFn6vDCB/vojYLfvl/H5/
8ueLhu6iydpbuOTPF6OStc/eWOlH/nyBT2fzzaJ8yZ8vQg2eGw6I9iF/vjhh
szvg1Wpv8ueLSNk3P5cle5E/X3TlhQxcdsCT/PkizZuzMP2aB/nzRfnbsXlp
be7kzxft99tW2ijR+x/JvkjnN41193Ejf74IPPly1Kb19L5IoS8KT+/89aDC
hfz5gqOQ2vFDwoX8+aI0ZcCLGj7Iny8mlqYHTHPnkD9fFAdqbG7/5ET+fHGT
v/TMz4OO5M8XEqOba9zDHcifHx7LnFuw1dSe/PnhxKqaOTvF7cifH8TOxk5Q
emVD/vzgJzNi9qub1uTPDz2vusecOW9F/vxQvDgqOOykJfnzQ43knKcHTlmQ
v97tO80WjS8zJ39+qIg6nox7ZuSv9/i3nL9avDMlf36IMvUQGzLElPz5wf62
W5PuHGPy54dTnKWWwmpD8ueHG7KdL6fYjyN/fniSv8343wV98ucHf67yjK9e
euSvd//JCzqHtuiSPz8UDon4oJyiQ/78sK/4k3GjB71v1OUHxD2tNB06hvxx
oX1+cMXbRk3yx8W/5LkVLy5rkD8uGhedLnoePJr8cfFUce7poz7q5I+LleNv
jvgzXpX8cXH9dtK4qXEq5I+LdMlrc2eVKZM/LlIO/2rYL69E/rioHL9kVO56
BfLHxcC6qrLqwfLkjwulhlyvnIOy5I+LHt/Lc2MnypA/Li4ZJEyMcBlG/nr3
j7zeofd7KPnjYl2U1d7TDZLkj4vlk/UfxLcMIn9c7Iwp+dAqI0H+uNg+auYO
82n0vlgrFwuOr7t76n5/8sfFhgKxw7nT+pE/f6QFr6lwGSZG/vwRFTtS9djx
nr731VR6vyeNzXFb/rvvfTZdf+xeen/Ih8U/6X03f4ys3PcqPP173/tr8Mel
7rD1q99+7Xu/jeuPoDFVGibT6P23EH8cnz6gdHdPJ70f54+L82wH9ZR96eNF
++PkjX1ez/d87uPF+0NvW1pphsmnPl6yP/5cajgbNrWD3qfzh9i7v6lNZe/7
eIX+uDX5yzJ33/Y+Xqk/7M5mujn1b+vjifxhlF5fv/TlW3r/zh8PPibdkXvT
2ser9we/dHmJ85DWPl6rPzTHRVzfE/Cmj9flj7XN+bY5x1vofb0A3OvcYThg
XEsfTyoAS9IX719z5TX5CwBv23Bl+bn0/qBuAAY0vU5M1XlN/gJQuuhcYGv3
K/IXAA8lxbv9H74ifwFYcH177C3RK/IXgKG8UxfMLrwifwHQSnnBMb70ivwF
QG2p1sLc68SLD4DTg9lqsXXESw7AvFjLoktviJcVAFMDH8P5P4lXGIDYpCtO
2VJUX2kATmuZRC9Vf03+AvAg6FGjl8Fr8heA2ukWx6LM6HzrAxA23u3DKjM6
39YATP2TKFLSJ15XAAzavRZoKhNPLBDlC85VHf1F9UkFYlRK09DuWqpPJRC5
4oskVuZRfbqBiPRy1mwJo/O1CETHitF5agrMXyBUF+8rQ9lL8hcIm9pdp7ZP
fEn+AuHxZ6r8urZm8heIBRLKhpcWN5O/QMw/sXWozNMX5C8QN8fP8Dt4pYn8
BeK46vDJfmmN5C8QC4f/Kxsd2kD+AjEhKeBApepz8heIwNAhwxPu15O/QISK
r+18t+Yp+QuE8uCVnpH6T8hfIJ7/VnBLrX1E/gLhc3T0m5zYh+QvEGf+pL2/
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
Uksztw==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      ImageSize -> 300, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Probablity Density\"", TraditionalForm], None}, {
          FormBox["\"Separation\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{0, 10, 20, 30, 40, 50, 60, 70, 80}, {0., 0.01, 0.02, 
         0.03, 0.04, 0.05, 0.06}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"10 nm\"", TraditionalForm], 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {10, 
           FormBox["10", TraditionalForm]}, {20, 
           FormBox["20", TraditionalForm]}, {30, 
           FormBox["30", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {50, 
           FormBox["50", TraditionalForm]}, {60, 
           FormBox["60", TraditionalForm]}, {70, 
           FormBox["70", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}}, {{0., 
           FormBox["0.`", TraditionalForm]}, {0.01, 
           FormBox["0.01`", TraditionalForm]}, {0.02, 
           FormBox["0.02`", TraditionalForm]}, {0.03, 
           FormBox["0.03`", TraditionalForm]}, {0.04, 
           FormBox["0.04`", TraditionalForm]}, {0.05, 
           FormBox["0.05`", TraditionalForm]}, {0.06, 
           FormBox["0.06`", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Old \\\\ New\"", "\"New \\\\ Old\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.705735494905332*^9, 3.705735530893239*^9}, 
   3.7057418750553007`*^9, 3.7059150674266863`*^9, 3.705915304077227*^9, 
   3.705917620984891*^9, 3.7059181093156433`*^9, 
   3.705918153309948*^9},ExpressionUUID->"492b3dc8-f833-4901-b79b-\
4f1635ed9ac9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Comparing the results from I942E EGFR ",
 StyleBox["Affibody",
  IgnoreSpellCheck->True]
}], "Subsection",
 CellChangeTimes->{{3.705732938069254*^9, 
  3.7057329631216183`*^9}},ExpressionUUID->"fb1f283b-f2a2-4dd6-917a-\
cf88ab70af8a"],

Cell[TextData[{
 "The new filter was used to select tracks from 390 data sets taken with the \
condition I942E EGFR ",
 StyleBox["Affibody",
  IgnoreSpellCheck->True],
 " and the tracks were analysed with FLImP. The results were compared with \
tracks selected from the same data sets with the old filter. "
}], "Text",
 CellChangeTimes->{{3.705915799865868*^9, 
  3.7059158861747932`*^9}},ExpressionUUID->"00862e8f-ac01-474f-8540-\
763f8ed78970"],

Cell[BoxData[GridBox[{
   {" ", "Shown", "Selected", 
    RowBox[{"<", 
     RowBox[{"10", "nm"}]}], 
    RowBox[{"<", 
     RowBox[{"8", "nm"}]}], 
    RowBox[{"<", 
     RowBox[{"7", "nm"}]}]},
   {
    RowBox[{"Old", " ", "Filter"}], "14370", "231", "101", "64", "46"},
   {
    RowBox[{"New", " ", "Filter"}], "313", "214", "116", "69", "40"}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]], "Text",
 CellChangeTimes->{{3.705743205525804*^9, 3.7057432420167027`*^9}, {
  3.705743275109108*^9, 3.705743275495989*^9}, {3.705743419203972*^9, 
  3.705743422651305*^9}, {3.705911681326764*^9, 3.7059116967985907`*^9}, {
  3.7059117751452417`*^9, 3.705911830107245*^9}, {3.705911897422093*^9, 
  3.705911944112883*^9}},
 TextAlignment->Center,ExpressionUUID->"c4711a67-64f7-4fa0-8ee8-fff83fdc3a8b"],

Cell["\<\
The plots below show the probability density of separation for tracks \
selected with the old and the new filter with confidence interval less than 8 \
nm and 10 nm and separation less than 60 nm.  \
\>", "Text",
 CellChangeTimes->{{3.705915601231523*^9, 3.705915605598488*^9}, {
  3.705915676591371*^9, 
  3.7059157894930677`*^9}},ExpressionUUID->"b4f429c1-3300-4a8d-ad06-\
e94c648dea2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"#", ",", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", "imgSize"}]}], "]"}], "&"}], "/@",
    "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"prefix", "<>", "#"}], ",", " ", "\"\<table\>\"", ",", " ", 
           RowBox[{"FieldSeparators", " ", "\[Rule]", "\"\< \>\""}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<I942E.old.ci_8.txt\>\"", ",", "\[IndentingNewLine]", 
          "\"\<I942E.new.ci_8.txt\>\""}], "\[IndentingNewLine]", "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Old\>\"", ",", " ", "\"\<New\>\""}], "}"}], ",", 
          "Above"}], "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "70"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.06"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"GridLines", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<ci 8 nm\>\""}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Separation\>\"", ",", " ", "\"\<Probablity Density\>\""}], 
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"prefix", "<>", "#"}], ",", " ", "\"\<table\>\"", ",", " ", 
           RowBox[{"FieldSeparators", " ", "\[Rule]", "\"\< \>\""}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<I942E.old.ci_10.txt\>\"", ",", " ", "\[IndentingNewLine]", 
          "\"\<I942E.new.ci_10.txt\>\""}], "\[IndentingNewLine]", "}"}]}], 
       ",", "\[IndentingNewLine]", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Old\>\"", ",", " ", "\"\<New\>\""}], "}"}], ",", " ", 
          "Above"}], "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "70"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.06"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"GridLines", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<ci 10nm\>\""}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Separation\>\"", ",", " ", "\"\<Probablity Density\>\""}], 
         "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.7059147345333223`*^9, 3.705914760159307*^9}, {
  3.70591529241567*^9, 
  3.705915294815481*^9}},ExpressionUUID->"6b1d37e2-cde3-461b-814f-\
e559aec7645f"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
naHkzxqDG0pebZoaSv4GPv/7hI/5VVvJ38D+GirZNt5byZ81fh9LKwkftJX8
WeNp0InQlCNbyJ81ju1NkS033kL+rPE2bdhD07rN5M8aeibn9bmrN5M/a/h+
CRIYSG0mfzZYyJ7qZJIZQv5s8OZsnmG6WQj5s0HC+7yI9Cd0/0LDBifzMj5u
Wr+J/NkMTEjPIvxHbCJ/Nqh+Yvbj5Klg8meD+V5F0V7OweTPBukaUS9KuzaS
PxvsP9K85XES3S8JssGGfMGLSsON5M8GLwMlJ6S83ED+bLCkyOOgcNcG8mcD
M+wWE9fdQP5ssLj41oF9L4PInw1UXrSxf+6m+zOVNki+uMdovHkQ+bOBw64/
3NZP68mfDU6Pyz1ilLme/NnA+cw9sZ9z15M/G6SqfEjsl1lP/mzxWyfId9aN
deTPFpuCbMR8t9L9ISVbuDn6hyfOWUf+bGG5LKk4uiuQ/NlCcN691vREIPmz
RZ7FSokD3oHkzxYuPxYnxE4OJH+2kBaTD550eS35s4W4RNBl5zl0fyrIFv9M
N8ceLFpD/mxxla1YNn7mGvJni1/nWJqfT6wmf7aIOFK4zGz6avJniyZdaxWD
ggDyZwsxT+4KRe0A8meL2Psb8tSK/cmfLQqc9/vnmfiTvwGeeVlo541V5M8W
pcUeg03dVpE/W+wKF8S9a/Yjfxxs4TpsnRbsR/44wKwSMaEc3Y9T4sDkw+nh
SQW+5I8Dt76r3SOcfMkfBxzxurjOzyvJHwc6q87vnZW2kvxxIGewQryJs5L8
cXA2XODX0OND/ji4ELPsUc9pH/LHQXnMBrtxfj7kj4OJfgpZ7Ro+5I+DmfKP
Lk5sX0H+OND445/lXbiC/HHgmF6w1TtoBfnjQBca7EvmK8gfB/H5rLODpVeQ
Pw7SncredtfT/cmmAZ77NReDbG/yx8FhrZyYmPXe5I+DAKXL6qfY3uTPDpVK
nN3bRnuTPzu4Nn6LaWpZTv7ssOfw4vKyC8vJnx1CfXbOmBK7nPzZoWLpvk61
xcvJnx2iVo0LuTd7OfmzQ86+ByscBhPP3Q4yc00kbzUtI392SLg6osv/zDLy
Z4f4xMCRy2OWkT87fHd8Wf7Caxn5s8MIFM7uNWfuz9rh0H/TlRLxcu1QqDzy
yMYeL/JnhyUt+qM7G73Inx22RxSqTyzzIn92eDO6U9h71Iv82aEg3kB+fqQX
+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
i4pe8XUs/x/cxQfv
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
bC3q3xJ4bxrKYh9VMfkfmztaTA==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      ImageSize -> 300, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Probablity Density\"", TraditionalForm], None}, {
          FormBox["\"Separation\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{0, 10, 20, 30, 40, 50, 60, 70, 80}, {0., 0.01, 0.02, 
         0.03, 0.04, 0.05, 0.06}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"ci 8 nm\"", TraditionalForm], 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {10, 
           FormBox["10", TraditionalForm]}, {20, 
           FormBox["20", TraditionalForm]}, {30, 
           FormBox["30", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {50, 
           FormBox["50", TraditionalForm]}, {60, 
           FormBox["60", TraditionalForm]}, {70, 
           FormBox["70", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}}, {{0., 
           FormBox["0.`", TraditionalForm]}, {0.01, 
           FormBox["0.01`", TraditionalForm]}, {0.02, 
           FormBox["0.02`", TraditionalForm]}, {0.03, 
           FormBox["0.03`", TraditionalForm]}, {0.04, 
           FormBox["0.04`", TraditionalForm]}, {0.05, 
           FormBox["0.05`", TraditionalForm]}, {0.06, 
           FormBox["0.06`", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Old\"", "\"New\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9m3k8VO///pXsKqVkiVAUkX3LMhdjxs5simhBSUUKEW2oSJSQispWtGml
faFVebdr00qkSBEl7T+f77zOb/7p4TFnnuea57nm3Pc5504nNFowb7CEhMR8
SQmJ//0rfinV9s2ak6i14ZiTxf+9htfeD6sUKYedcgr/v9ewWqcPh2UStS85
FRb87zW0dqOKe+prvWtOd27/76VYq5aQPWFRfb2TmKdYa1uXOfpO9QPiKdRK
RrUsTXd9Sjz52ieFjq3P5r0mnlxt6ArTU40XW4gnW/vtm8Luo6vbiSdb+xYT
Zd1mdRNPpvao/TyuRttX4knXyr8ROOdu+Ek8qdrMMvbKHzUSLDFvSO3x7BNh
52SkWGLekFotf6XDwS7yLDFPslbQsCJwiK8SS8wbXDt2Patw3vhRLDFvUO1t
zsqJ4RdViSdRO+jMM3u2vRbxJGqrl8neuTJblz7/t2azr1Z+u40+bf+75vHK
mQ83nTOk/f2qmR0+VOP8HxPi/6j5de+IZLiiBfH6a568vsTl5loTr6+mo2/i
5Hm7pxLva82srftN1exZxOutUQ3QPpjp4EK8LzX1wwcZbTfnEK+75stDdveu
NHf6fGeNlM4+v2Usb9q+vSatKTTrrRmP9tdWczl8w8qfKwXEb6nZeMxhj+wQ
f+I11Rg3RX1/fGs6fb6xJvZDadyX+zNo+4aaEIvxpls1ZtH7t2q0+MmV9x/P
ob/P1ly7IT1WeDmU9fhf9fvBte8cIpYaBL29P5d5n/Xv/Ilb7UPmM59nPfjR
vztj5gKGz1rYMtu67vkiZv+s6xuL1s1fuZjJx0pwWbb1X8kSJj9L8tsv28TR
Mcz3YxmHNSliZyzz/Vkfjm3pfWW2jPHDYv3WlK5/Fs/4Yw1NkW+dl72c8ctq
K6pYpeSfxPhntfWlFCoZrGSOD6vV56fgoPxq5vix3jc8Pa72Yw1zfFmf9mwa
fPNHMnP8Wf7VoT7Fv1OYfrDWZD2UPThkLdMf1q6jh4xWj1jH9Iuls+rz7Grd
9Uz/oC9T9uqpTRrTTxQuSl9WwEtn+osNrEd1myI3MP1GSf01WYfMDKb/iHga
u2Fx5Ubm9wHzOROGF9/LZH4/aF7ZEVD+NYt4UtBbNrhQVmMz8aSxXjldN88l
m3gyeMfmWSVZbSGeLLIn2h76emsL8WRxAlIP9s7KIZ4c1kncqwzqzSGePKbV
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
F+b+OxuWPha25WOIV8FG/NDxgqHP15A/NkTBDy6eXU/372vZmP1o4biZ5mvI
HxtOxeq5Mk2ryR8bXReaRp/dTPf/29j4905bLsFpNfljw/+A8lHrrlXkzxXh
vv4HekpWkT9XqM3Vsi8RriJ/rqivZXuYyKwif654NLXwTPb5leTPFXn7+6KO
L1lJ/lyhOeR3UYo+PY/wdkWam0/Kp5cryJ8rjDxqfrTmrSB/rtCV/Obo77WC
/LlCYdK3ZlPJFeTPFS6bt9bPP59E/lxx9JqCfVdsEvlzRbL1db0aoyTy54oW
38mr7r1LJH+uyDVTzNUsTiR/rnh4rkC5MiCR/Lli5rAywfKRieRv4Pskap3P
vr2c/LnizDP8/pq2nPwN/G0W3nTOeTn54+DQN/8Jnb8TyB8Hl6WLnYvOJJA/
Doo3Rwqb4xLIHweDJh03u2+WQP44UD35yz+5i573gINRqi/sZI7Ekz8OftTF
zk2Niid/HByr1y0ZMiWe/HHw/dzza/u7lpE/DlynB/9KO7GM/HGQUj5k2Il4
er6UxUHBIdM6B4dl5I8DyUmlfizJZeSPg5yjH6sv/xdH/jh4v8h+5KP8OPLH
gebd6RNSQuLIHwe1m/d63J0SR/44UNkoNLv0J5b8cTB317aNwrux5I+Dee32
FZklseSPi/PjPVUD42LJHxfPcmemnvKg52NqXKgP9bqVp008fS58j62NfdEf
Q/64yIo/eCrpYQz542L09dvnph2OIX9cfJhwo5+fEUP+uBg0LqbdN5x5HseF
6pykacauxIvloujMtBn1usRL5sLz8bFLUoOJl8XF4IFr69PNS8kfFzKyk6Su
XV5K/ri4Law3kCtbSv64aOy5sm5x6lLyx0Ws5zinxtCl5I+LiOW8lxZs4jVy
EWQys3fJeOK1cWHxd9WN9ZLE6+XigGxKRXTLEvLnhku+4XlTri4hf27gzLta
WF+2hPy5wf/i7ETf1CXkzw3j7Or33wthnk+6oeFcTlmYM/Hghg8SCdm6OsTz
dkNoalGfwSDiBbrhe9W32QZXo8mfG0ZPzCpRWh9N/tyg+CJFYqp7NPlzw48p
7z0/KkaTv4E8AaUmMxoWkz83pGjcLT2+czH5c0Pkt889OuGLyZ8bgu1mBP5n
Ts9Xa93Qr2TffXHQYvLnhl8q67JHNUSRPzf4Po9KulYRRf7c0D2j/9idlVHk
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
PxH6EvfeqD/qQP0Tget2IPVelpXT/wPMSuei
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
M4dHEK/JDmO2VPTG/I0jf3a4t/NqUer7OPJnh8dhbv/eeRBH/uwho3H+ivAy
vX9QsMfoR49sBh2KI3/2iLmL4X/yiadhj/TlP9ePTyaeoT1ezxhoOi+YeLDH
ZKewwwfnE09gj7tSB3T78YnnZQ/OovitLibE87FHnXFtfYQq8ULtcWrFjeUR
g4kXZ4+uhMvG4T2x5M8e+mGNUiG3Y8mfPaIV7i25viuW/NnDPsfr+6rwWPJn
j153mYU+gljyZ4/2iXKuR5SJV2sP1WDddTN66H1Mkz2eav1e4n8jhvzZY+TF
ooxhhTHkzx5K8b76vitjyJ8DJOc7ZOXaxJA/B7w3U/t4eSjxlBxg1DTRduzr
aPLnAMW8jpT6k9HkzwFzY+xmyq2PJn8OWOlpv/OzdzT5c8DmFfbb9ulHkz8H
3DFdXi8YQDwfB2yJCvLteRZF/hzQb5/6hAMno8ifA4pXt7uvyYgifw54PWXO
LuHyKPLXd7yItXt07ej9VJkDPOZ93vx9IvEqHNC/1DQ+o3cd+XPAt0lXNtU9
Xkf+HHBtUNi19FPryJ8DEj7ebszPXUf+HBBccdz7XMg68ueA0ep2R84LiSfh
CNv2mlsrphFPwRHzvQq5SfLEU3JEzC+D6idta8mfI3S2Hi4xvcrerzni/TdN
nWVFa8mfI4qNKsZarllL/hxh6Lt06mbXteTPEbUJ8XW2asTzccSxztEaBt8j
yZ8j1OSMvZ1qIsmfI2L/+/kriCR/jli2Ja2sxDeS/DlCWkXPttEwkvw5YkxE
yBqJPxHkzxGv18R/1b1O7werHNHzoGr8P+kR5M8R5a/+G5AI8ueI0YOTlkoO
jyB/jgi1+Od8TmM4+XPEnoCRmv7Z4eTPCZN9/Op3uoeTPyccueSeKZAPJ39O
kFA8Y5levYb8OWFhxU/52Jg15M8JY775mTiYrCF/Tjgjm1ss2bWa/Dkh1fZ2
3P0Set/p5QTvfbf8X89eTf6cEJPbnuemsJr8OUGuY6izTVUY+XOCpPpymfrQ
MPLnhIPZ9jLqmmHkzwkzN/yOmfsklPw5Qadr4vu0TfS+tcIJBgb1dbUIJX9O
uFkmW2DYE0L+nPBIqDW8vpze1zb1bV99mb9/Xgj5c0J3WNHv2iEh5K/vfMpn
3zK4Fkz+ePjq3V3xNCKY/PGwXOLegcqpweSPhxpl46+Nr4LIHw9ng5TV5fOD
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
TnSvH+pt8z8ql+df
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      ImageSize -> 300, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Probablity Density\"", TraditionalForm], None}, {
          FormBox["\"Separation\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{0, 10, 20, 30, 40, 50, 60, 70, 80}, {0., 0.01, 0.02, 
         0.03, 0.04, 0.05, 0.06}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"ci 10nm\"", TraditionalForm], 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {10, 
           FormBox["10", TraditionalForm]}, {20, 
           FormBox["20", TraditionalForm]}, {30, 
           FormBox["30", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {50, 
           FormBox["50", TraditionalForm]}, {60, 
           FormBox["60", TraditionalForm]}, {70, 
           FormBox["70", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}}, {{0., 
           FormBox["0.`", TraditionalForm]}, {0.01, 
           FormBox["0.01`", TraditionalForm]}, {0.02, 
           FormBox["0.02`", TraditionalForm]}, {0.03, 
           FormBox["0.03`", TraditionalForm]}, {0.04, 
           FormBox["0.04`", TraditionalForm]}, {0.05, 
           FormBox["0.05`", TraditionalForm]}, {0.06, 
           FormBox["0.06`", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Old\"", "\"New\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.705914764910046*^9, 3.7059148063036737`*^9}, {
   3.70591484173018*^9, 3.7059148562217073`*^9}, 3.7059150678299637`*^9, 
   3.70591530446898*^9, 3.705917621287775*^9, 3.7059181095657263`*^9, 
   3.705918153557*^9},ExpressionUUID->"f141eceb-7ba9-4050-ac7f-1b4d4f60e748"]
}, Open  ]],

Cell["\<\
The plots below show the probability density of separations for tracks \
accepted by the new filter, but rejected by the old filter (New \\ Old) and \
tracks accepted by the old filter and rejected by the new filter (Old \\ New) \
for 8 nm and 10 nm. \
\>", "Text",
 CellChangeTimes->{{3.705915535467882*^9, 
  3.7059155463045197`*^9}},ExpressionUUID->"24cd03dd-f7d8-4f42-b88b-\
19bbcba84486"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"#", ",", 
      RowBox[{"ImageSize", "\[Rule]", " ", "imgSize"}]}], "]"}], "&"}], "/@", 
   
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"prefix", " ", "<>", " ", "#"}], ",", " ", "\"\<table\>\"",
            ",", " ", 
           RowBox[{"FieldSeparators", "\[Rule]", " ", "\"\< \>\""}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<I942E.old-new.ci_8.txt\>\"", ",", "\[IndentingNewLine]", 
          "\"\<I942E.new-old.ci_8.txt\>\""}], "\[IndentingNewLine]", "}"}]}], 
       ",", "\[IndentingNewLine]", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Old \\\\ New\>\"", ",", " ", "\"\<New \\\\ Old\>\""}],
            "}"}], ",", "Above"}], "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "70"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.06"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"GridLines", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<8 nm\>\""}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Separation\>\"", ",", " ", "\"\<Probablity Density\>\""}], 
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"prefix", " ", "<>", " ", "#"}], ",", " ", "\"\<table\>\"",
            ",", " ", 
           RowBox[{"FieldSeparators", "\[Rule]", " ", "\"\< \>\""}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<I942E.old-new.ci_10.txt\>\"", ",", "\[IndentingNewLine]", 
          "\"\<I942E.new-old.ci_10.txt\>\""}], "\[IndentingNewLine]", "}"}]}],
        ",", " ", "\[IndentingNewLine]", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Old \\\\ New\>\"", ",", " ", "\"\<New \\\\ Old\>\""}],
            "}"}], ",", "Above"}], "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "70"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.06"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"GridLines", "\[Rule]", "ticks"}], ",", " ", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<10 nm\>\""}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Separation\>\"", ",", " ", "\"\<Probablity Density\>\""}], 
         "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.70565566672609*^9, 3.705655750177945*^9}, {
  3.70565583161546*^9, 3.7056558691175337`*^9}, {3.705655904646574*^9, 
  3.705655949580349*^9}, {3.705656115633234*^9, 3.705656127394896*^9}, {
  3.705659452072917*^9, 3.70565945668934*^9}, {3.705732752750214*^9, 
  3.70573275581631*^9}, {3.705733679049139*^9, 3.705733679468643*^9}, {
  3.7057337870824966`*^9, 3.7057338221431313`*^9}, {3.705733886809958*^9, 
  3.705733944542894*^9}, {3.7057351787475643`*^9, 3.70573524010631*^9}, {
  3.705735341710047*^9, 3.705735529807551*^9}, {3.7057418299210377`*^9, 
  3.705741874066101*^9}, {3.7059149263023977`*^9, 3.7059149493387833`*^9}, {
  3.705915299005075*^9, 
  3.705915299984967*^9}},ExpressionUUID->"976264f4-d182-4ef0-9fe2-\
c62a7698d06f"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxdm3k4VI3//ilLC4pKKYlEiOz7MjdjN8MwSihKRSsVlSVC0qaNKGVLRUQp
0o42bbRIiegpIdImT5uUn8933ud6rp/5p+tc5rzOPa9zn/c5Z+akFBDisXSY
kJDQguFCQv/7V/AaW/V41/DH4lcirfT/7zWmyt+/54S5UYJV4P+9pKqQ6Htn
odMeq8Pp/3tJVkXtG3GiIDTNqrbmfy+JqgXFPDf/TTlWAp5E1Wwr0ZLdw04S
b3SVx9T1z1rczxJvVNXlaL9R625dJN7IKmGdrPJN+64Tb0TVi8D6OQVld4k3
oqrdr+24t/kT4olXqaR6Vfo3NBBPrKrhcZNMue9r4olWuStPfOZg20E8kaoI
8VytPulPxBOpctlnuujhjH+JN7yqM0Yi+EF1H/GGVancbo7Ye1KYJeAJV3Va
rbR1lxdnCXhCVa47zpZ/GC7FIoFVo+5Mcx87bxxLsP7fysL2U5bylZPo/f2V
JaZO3XNXTWMJtve7cq1ujUZnrTLxf1WGTh/dyr2rRryfleO82m7Ouj+beN8r
x4of/P3sjx7x/q2MsWjt62EbE6+3MmZcYRbb1YJ4PZXfrl587TrZmnhfKjN0
Mx7f3GZL63+obE9r+/grypHe31VZb9opOWc4l7bXUdl99I7p7/HuxH9bebk0
hvPwD594ryun7DKftM/ai9ZvrAyZFTXZqd2H3v+08uayuuiVH/3o7/cq2fcf
rG08vYiWL1XeserRTZZfwno2UPZuWFW7xZfqvzv6qwKZv7PeZaYtqs9YzqzP
UvmVucytZBXDZ320nH7H43cIs33WcK+40IKKtUw+1rSxGsuLDocy+VnptQVb
pfavZz4f64SGfvXwoxuZz8/KLrdKOXwvgvHDUg/0iK4euYnxxypzWXpk6cIY
xi8rs+X5R4XAWMY/a7zaQId4Xhyzf1grJp/Ndfwcz+w/1sLN+cNNrBOY/csa
+PPwiPaRrcz+Z0WfjPkc25/I9IOV4PbwVOqS7Ux/WB8uTOk6W7eD6RdLvLkg
xM1+F9M/nIp97nWuIonpJ+57dP+xN9/D9BfnObM0tl3ZS+sPg3vVBp2A7H20
veG4Xmu52TBgP/FEEP91+xRh1WTiicDfLzY67H0y8UShbWjD4p9JIZ4Ywq27
SoLCDhBPHAFCB8uDTVOJNwIz3gbMNf2bSrwROCa8iJN9I414IzGu9mTW2sSD
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
zEPTmiVWUv8G3z9Fm3u0d7HV/wOJJE4N
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw1mnk8VIv/h7VvyhJKqZA1S/Yly7yNncFIKa2WiOyUpGzJFkKptFtK2pNy
i25Gt0JRypZSCYnSLaHd9fP9zefMH/e+vObMM895zueczjlzZDyDl3uPFxAQ
eDH2n//9n/8S5o0mBO1oy68x1f7/lxAv0kOgzTqqwdTn/1+zeMVBCf/8/aHZ
9OiR/71m8s5qhv/a/afdtL7ufy9BnqHiYMtUoS5TPk+Qd9qzZn7Ax17izeC9
iHgYf0r7C/Gm81b3fLXkDg4RbxrPVc6zp+nLL+JN5XWLJNlILxvH4vOm8hpD
8tfb901i8XlTeNvveOwf+GsGi8+bzLsx6ZGnRogIi8+bxFPgThye2SjO4vMm
8m78jhPgqMwn3kTerZcVimnPpIk3gReQ2uVueEuOeON5dgWyFje8lYk3jner
f6a17Hd14gnwrJ7wWr9VaxFPgBdS/vDa6/N69Pn/Kie4218uNTCi5f9Uti5k
Sd40B33f70q5gb3ZhqvMif+zsjXWLcawy4p4PyrFvdfsOz5kR7xvlSOytcPX
c52IN1Rp9MYp43DQcuINVjplagf1bF5JvIHK6kYdaeXK1cT7UtlXV7VOeuc6
+nx/5fPFO1z0nN1p+b7K2Y3TsvNPeNL39VQaKRko3pb3Jn5Xpe2PuWlL+jcT
r6PybKjYfe7gFvp8W+XVHoEqKZMgWr6xcoZtXl7uuxB6v7ZSOXL6reVPwujv
W5UC7A3/zmnfymoevf5+PO+dcdTFH9N/z9jOvM/a9eTTw8YNO5jPs5KThUI0
m3YyfNaznusx3v4xzPez4lQtknnZcYwfK6jr/MxzI/GMP+uwOLf2RmQCs36s
3nidqXPHJzLrz7IL0cnuyk1i+rDOlEw5Pcs4henH+pmsZnL0QyrTl/VwlHXO
uTCN6c/Kl2/TEfDOYLYPy90lPTdGPZPZfiy/6LjTprFZzPZlmeb41nb5ZTPb
nyWmuHw4yXU/Mx+s151Je3IsDjDzw4qNW1OySTuHmS+W7S8hi1DZg8z8IdZ1
qHORyCFmPhGSaef64b9DzPyivt/x2aqPh5n5xkEhs+be5lxm/iHf42arcucI
s3/A6OKjPeWFR5n9B2yL+wcMko4x+xdW6ocZOHofZ/Y/HB8/5HoTJ5j9Ex3N
YZsV5p5k9l+c3zmt3PPjSeJNxZM5Lb0a5aeINw3zPb6t0mHnEW86pkVc2/vp
dB7xZuC/c2cttSflE08QH6Z2+Ax45hNPENW57q8W3Mkn3kzoC2qYXJAoIN4s
7LnrWpkSUEA8IYyKPb90pbKAeMKwKys/LipcSMsL48bouJbz6wuJL4y3hdc/
bSkupM+LINKpKcXpSyF9nwj+8fDrsNY9TTxR/PMifMhl+2niiSKU96PUr+w0
8URxf+7IzNivp4k3G35Zu89mqZwh3mxMbNorf8zjDPHE0Gss+exwzhniieHv
7UuXJ9w7QzwxvGh9JOAxcIZ44uib9mW32vwi4okDHke1+82KiCeBfXuqawq9
i4gnAdXqbSdWJRURTwKREScXiJ8uIt4cyBiajnbeYXhzsGed4+XHLQxvLkqa
7nH6PzK8uZj4+aiV7X8Mby66v94bW+OzxJPEpPhle+fOP0s8SUQn99ffkj9L
vHkYd/bZ+QG1s8Sbh6L6Vy6vtc8Sbx4a2OOtDuszvPk4OKRxfZkhw5uPK9Hr
IroMGJ4UkuR3TDunx/CkEK2980OBFsOTwrg+57NfVRneAoQc+HbhjDzDW4DX
0mtUXkgxvIVwSwyzPi3K8BaCNcswQGQKw1uIE1cKK3R/Mf0WYff64lXy/Uy/
RTh+x/xbTzvTTxr54YEb0uqY5aWRGyGdL1XB9JRGStWqJ6eLmc9LY7vjrF9q
B5m+0gicw9K6G8fwZFAV3Ptskz/Dk4HSj3GFCisZngwKr6YVTDFleDLoNYzO
navA8GQwkvH0oNdMhieLbJdE7udBZr5kMfF5tk5tGzOPsvAU+uQ1qZKZX1ms
zTuQc76QmU9ZrHi2w7whmZnnxbjwNbc9wZ/hLcZ9m3ft7Y4MbzFWb3Od0a/J
8BajtrKju0aM4S1GdHBkz97vzP4mhxePRDJsXzD7kxw+1RT8mvs3s//JIXzc
wilieaeJJ4eG2//bgZj9UQ6in88cfO/D8OTxXeuYyGc7hiePzif20nFLGZ48
tGeXqBWLMTx5OFpUlsX8Yo4X8jBbFfBqzttC4ilgtlXptega5vihgKcT966+
d5U53ihgd8bHN8NHmOOJApqTmv6bu4fhKUDZ1FTGKJjhKaJ5smLBxrUMTxEp
yWn6GTYMTxEfAwKTeHoMTxGX1tdaCCgwPEUsLC24bSnB8JRwiPfdJmcKw1OC
UHr987c/meOnEjTvyouofCognhIcbk8w9ntbQDwllDZuKTzYwhxPlXHDY0P2
uTrmeKuM4/d7THP+YXjKKF895ZtjBcNTxhSZ+2eelDI8Zcg/VeiceonhLcHG
Gp3uviKGtwQrbw2zvPMZ3hKcdw1JDTzO8JagePTiz4HDDG8Jvvhck3t3gOGp
YIFlesbSLIangqif7EBeOsNTAbfr9Z+kVIangj4P321hSQxPBW/VPrr5JzA8
VbT9DDTdFMfwVDFP/udaTjTDU8WRikNZQlEMTxXDwQ4heREMTxVR+fI6/4Yx
PDU0/JGOHw5ieGroy7DVLdjC8NRwb8Up7pA3w1PD+lWKd9+6Mzw1rGF3qW9e
y/DU4X23ySh+JcNTh0rMj5N6TgxPHatkuSMJNgxPHazxL0oCzBieOoxDc+YM
GTK8pXDxi2LJaTG8pVA7nPH4pzLDW4qnQzXNMTIMbykONy+5WjaX4S1FjGHp
+nwhhqeBZGnP16aTaXlJDUx9rZux/08+8TWw4pHm9YNf6d97jgYqzNxOmPXm
0/dpoPvTpU/7X9H5QZwGHjXr5MQ+Y84HNPDX6m+13x4Qr1QDv58MPx8oZ84f
NJBqbXJq3WXi9WjgwsLmlQr5zPmGJsZPvZdldoB4kppo8xRNPbGH8dPEw/eP
qmS3MX6aaDg+rFy9ifHTxMuMI6ciXBg/TewLvFO22Izx00SXmd+Ge2qMnyYW
byl4Yi3J+Gni237/K+cnMH6auCxeY93Tn0d+Whg8ecvke1Me+WlBPMX8ZUsF
c/6khXvbPVvS8vPITwurq8T2SiYx51taULq52jnBj3hxWjByVTZptCfeES2w
2AkThNWIV6qFfqkN/nYziVenhTeSgStF206RnxYEfKaKlB88RX7aOLsx+vAl
Lp3vSWojO/8Ob8r0U+SnDeXAinkfquj8kKMN1fU+Y4f4k+SnDW+B4s4HanQ+
GaeNDruIgImdJ8hPG76PbomtOkjnn6XamBHhO/LM+gT5aaNbK2hL3k86X+3R
xnrz8r6O88fJTwe6bJbLlbXHyU8HrSH9OmqCx8lPB6N+13223T5GfjqYF5wU
cS7gGPnp4N28lcbdUsfITwf+HhIvDOuPkp8OHi4pO/As+ij56WBsYzdXqDPn
1zroqQmOEO44Qn46kGoMcvqYzZyP66IyeoHBZosj5KeL9tuhy3O/M+fvuojd
48HbfyGX/HSxOfiNW6h7Lvnp4lToW9hI5JKfLlKeu7+Vqz9Mfrp4ZcqdLZt4
mPx08WegmO1gepj8dDH0zj27/Mch8tPF01lBMjHXD5GfHixm1xefDKXrDUk9
nMP2A8oah8hPD+7d3g6qXw6Snx6q7fezr5ccJD89vIn4E1a1la5n4vSwUjA/
Z43hQfLTwxLBuLOxoznkp4eZCw556FfnkJ8eRk277sZn0fVRjx7y5YI2Oq/N
IT99OM/XKCxVzCE/fSxP0SvLGD5AfvpYKRrj2HOPrrc4+igWnV5WdvAA+ekD
B7sffth8gPz0ETgo3LrT6AD56WOpWuYLP2Hileqj9mzAyJGe/eSnDyOvcyzB
O/vJTx+Kohzd0kP7yc8ASzevDYsP2U9+BrAMetvkac9cDxrAV/H1ulWKxOMY
IP3k2l67icTzMYBLkvsMjc5s8jPA+uxBt5885vrSAJyw+b5H8rLJzwD/vHxd
Oz4+m/wM4BVnMVvJM5v8DLAgwFV22Jx4Aoaw+DHHzEuBeJKGeKhxwGHDNOJp
G4Jb8/jl8/4s8jNEzcOm2jsNWeRnCG2DM3OEb9D1b5whmrc5fCo5kkV+hhhp
b8g5EZNFfmN/P9BaXedFvDpDVLOixZfYEq/HEGutr9aVqTPX08swXf9Jtb8Y
8SSX4dPuKt3tQ5nktwym9bVpHF4m+S3D5qNXRzalM9fny3DBKaH0zOpM8hvj
fTK7NEs+k/yWIW/Nc/WagX3ktwzcq2uGzt3ZR37LkLP48qW+tH3ktwxCm9v+
3eG2j/yM8NKz5vduxX3kZ4QjtfG+34czyM8I3gkDkaP36P4BxwgnXwkfKc7J
ID8jMPcX+H5GSDXXy1LXyyA/I/zoU2cpTCVeqRGmj7uSKPQynfyMcCelzOvD
5XTyM0LDfIOSpwnp5GcMdrl20H23dPIzhuimc0fva6STnzHMJI/oPZtKPI4x
QtOntbx6m0Z+xsj/+1dkb0Ua+RkjfGN4afehNPIzRn1qstn5MLpfUmoMp88m
f6k4pZGfMf7/9oYq8XqMMSGm91XpNOIJmGC0ZeKULe/3kp8J1kTPO652fy/5
meBHiolbS8Fe8jPBuO2ZsjJxe8nPBCMiKjbP1+0lPxOEyqnMe2BAvCMmKJh9
gvdkNvFKTfCr6or14U+p5GeCqKVeV6QepJKfCezbnr+UOpFKfqbgtsqlBofR
/SFJU+xVtv5LzCqV/Ezx5r2LbPcc4nFM8fme84aG9ynkZ4pyHvzbbtD9pjhT
5CnNuyG4O4X8xv7+88poCyeF/EzRLBdpPk88hfxMwcrvfSTVnkx+pvjpNl/y
aH4y+bGwa8/wi2rvZPJjIbHCr4+nlEx+LGi890q59IHuf3FYWLH3bmPDhSTy
Y+ESK7LQMiCJ/FiYvddrtpNqEvmx8K4sOvPXx0TyY8Ht0MlTuRcSyY+Fum2V
V/T8E8mPhbUmdRNGliSSHyDdfPXN7I97+MsLAq2tG+cfurCHfIHbpw0fZQbs
4X9eAWi85hmxUH0P+QNa4QVtnC8JLMJh0JVXIl+aQOsDvP/qLFgSkcDnuQHH
Rsuth5Yx9wOBWdG/vT6P7ubzwgFvt4s3C+/vpvUFqnb7nBBN383npQPl6htn
GLjspvUHnNYfGi82fzefVwRskA5XOdNF9x9Lx75/+3Dix4vxfB4PEFxe5tcb
EU99gIHjjuonzOL5vDZAVkRWS2hmPPUC3u31lDNri+PzBgH1DNMtxkXM/U4z
pDdIek7eGkf9zCD2oKLmHDuO+pnh2PjyC+qicdTPDEqiSR3G92Opnxm0DhoX
TfGNpX5mMM4ZCmsQjKV+ZnCP2zahoJTut7qZIXmjlGzmuhjqZ4bEBzHtp6bE
UD8zLLHTQvv1aOpnhsgPeg4Wm6Kpnxl+bfzi8Uo8mvqZIdfwcNXx2l3UzwwP
7lTPjI7dRf3McG1Nv0GE/i7qZ4a/utoUIwd2Uj8z/N1bsyDy0k7qZ4Y2r3Vc
L/+d1M8MQ11145eq0P3jQTNcmS9TW98fRf3YGDiS3aNzNYr6sbFORP6z67Yo
6jf2fvzLTm3jKOrHxivXRdf/mRhF/di4ZLOiasaTHdSPjY2roqYLHttB/diI
Nxr+VOtL97Pd2Fjik67ENdhB/djozSyce3raDurHxpzJOksa2yOpHxuW8fkV
nSWR1I+N1LDS1FcpkdSPjbKg0fxHHpHUj41H2xInXjKOpH5sPEy2LImXJB6P
jZLTrGLbH9upHxuX9V+//POc7r+3sXH+iVtmVsV26sdGuc/KHwOntlM/NmKv
tJ6fnbSd+pkj4eOimFeBxBM0x0GDUz8MVxFP0hylizQPzGATT8EcF+5YNRmr
E0/bHHp3UxMvzScezHEoc8oT9nTiccyx0nc0uftnBPUzx0jG1eSoDxHUzxwN
3krf+l5GUD9zdPdNmyb9OIL6mePu2pzDE6siqJ85qrOPJyVfJ94Rc0xJuj/j
UDHxiswh91G8QvYE8UrN8e/r/+bN3U88njkmiyVX+iYTr84cNe4JGROjiddm
jjuTtdc1hhGvxxwpN49XVvsSb9Ac/i/r3zzYQDwBC+hm6JtXrCCeoAW6XW94
JtsRT9ICt0+s8BEG8RQsED6rco6eLvG0LbBzR0B2szLxYIGGzQacpwuIx7GA
24DexHEiTD8LiJwy17KewPSzgLz3abOYoW3UzwItxT5r0rq3UT8LvJbQsXJs
3Eb9LDC9PjqthLeN+lngnWDCuBMXt1E/Cwin2hlPOEy80jHfsYNJWyzxeBao
npw7b8Fm4tVZYJZq/6zHHOK1WWBDScPc7xrE67GARLfp6TOziTdoAdmHB3b2
D22lfpb4LpNV3dW0lfpZItdztdC50q3UzxKOb9ip67K3Uj9LFFe3zpMJ2kr9
LKFjf+qcpB3xYAmh5Yk7guSJx7FE3NIOHkuAeG6WWP/ZT6z0RTj1G+NNtf79
7no49bPE+cf1F37sC6d+Y99vvfbLiG849bOE88zOPGHzcOpniYfZylFGC4hX
ZIlnlj8NUr+HUT9LXJ6UkP7naRj1s0TRpR+Lcy+GUT9L5NftZzsn0+9rbZao
q694scgzjPpZIiHZ5umgMfEGLdE++HJt+RziCVjBfcUN57VfQ6mfFd48sDSs
qgulflZ4m17X11gUSv2scGHGqrTIuFDqZ4XY4q+WOW6h1M8KavHCeSJaxONY
4WGmy5NX04jnZoUO8d/nOzpCqJ8VRB7MrBb8K4T6WcFi6T2fVekh1M8KHh2u
9TfcQ6ifFRaPHLCX12F+X7RCvcelrOLJxCuywn0pK8PYq8HUb8wvr73ss3Mw
9bNCcKTtjWsDQdTPCn5XrWo/ZQZRPysodz14WKEaRP2scCLDfoZDTSD1s8LR
in2Lqj0DqZ81Zn4QcVvzJ4D6WaNOLpOjejCA+lnjbm+yfaBaAPWzxgOzsg/s
+/7UzxoGQ/oLnq/zp37W8HDxknQY2kL9rJF2bZ/43TT6vdXNGqEXL/Y5L95C
/axxc0vvVcEKP+pnjUlzApPGu/hRP2sEy45XNP3oS/2skWA5Y+Begi/1s8Zj
g372cSlf6mcNvbRXG2/d2Ez9rHHb+I21lBP9/suzRlNOxvHKXh/qZw1OiVt3
xm4f6meNa3Zno9OlfKifNWwfJGTlldHvyYPWEJb7LPWQ6039bOC17M6Unx82
UT8blHEzviombqJ+Noi+/CPGedEm6meDvE6DL1tueVE/G5w/U3J6h4sX9bOB
MGvUJPKTJ/WzwYdFfZGhyZ7UzwaLWs/mrpFhfu+2wVurhxK2FR7UzwbqwdxB
45Ue1M8G0lXjPuKzO/WzwZNLZ8o3pjK/n9vgzYbN0ecWu1M/GzTslepw3rWR
+tlgoUTa2vaSDdTPBgPXQgpFe9dTPxtkXV/8r9ii9dTPBmojWjd+uK6jfjZY
4nz7Y2/mWupng/oJEjWTHq6hfraIaltvEjVpDfWzhft12ftr2W7UzxY/a22F
OuJWUz9brEs7+lykahX1s4XUqaoMzQmrqJ8ttrx3KF5h7Ur9bHFGaf38ogx6
vsDNFnPLLBdYtaygfraQXSGfv1FmBfWzxbfuvdJTg12ony0GVXP2balcTv1s
4RV7WOas6HLqZ4uIO4tdGn2dqZ8tMi67Ssy7y6V+tlj+TepixkIu9bOFyHMJ
u9w/jtTPFne7PIab7zpQvzGfxxW5E7I41M8WKR6VL6032VM/W3B8p/jUsuyo
nx0qrl04cF7WlvrZQexorNOUmTbUzw7Hh+acH/nPivrZIUaR/T3vhyX1s8OX
bMeWqb8sqJ8dpp2ZOBETLKifHTqfqpg4i9HzHm52SBK1rocam/rZ4XvXnBfC
jmbUzw5yy3PrbkaA+tmhr3Vcw1pHFvWzQ/z+tD9/3zGhfna4KnRVJdDUmPrZ
4V3x3S9K9cuonx0OlxxZcmOLIfWzw6T8n18rJAyonx1iOy/++tygR/3soPEz
9N7XXF3qZwdz3ymN3kE61M8Oj+/Ii3ZytamfPXrTEgMFoEX97HFq07rElUaa
1M8eUnW+7bvZGtTPHu2XefLLzqtTP3u4qnxXinqnSv3sIftnZFhST4X62WO3
Nue3yzF6HsfNHrWtG0z9xZSonz2OVT6Uvp+nQP3s4f5OlHWJJU/97FG+qO5X
ypfF1M8eBs6JC29ck6V+9ojmNs44nChD/eyhMmQnl+NLzweV2qPQ5Nsm0bKF
1M8eHL2R9TU3paifPQ7FNn0Tez6P+tlj/NtHgldFJamfPY4Ihg66b55D/exR
U5Zg9alJnPpxsOHQcN/cNWLUj4MvPlLLTw+LUj8Ojj5O89tYJEL9ODCNNLog
4S9M/ThY8CdV0zJxFvXjYHZj9dYnqwSpHwe/fD6aXLKfTv040AgZfde7YSr1
42BZ5ryhE5mTqR8Hm1QKl4i0T6R+HKj5Jfv8xZ5A/Thgr6y6JnF3HPXjQOdC
UcLn1QLUj4Pvs7e0qAn+x3/+q5SDvMvhgRLZv/nPh/E46EsJ+K/D9Cc978WB
2dcHO7pmf+c/D9bGwanqHKsHs4b5z4v1cNBUWW3joD7I5w1y0OPYFhMQOkDP
mzmgsVtcWPbyZz5P0AG7vvhX5tzu5/MkHRBu28pbL/iBz1NwgHdkVO25Y+/p
+TQHOC2/mRPk+47PgwN2Lz8W0RnSxedxHGB7JUb0xrW3fJ6bA7SPWKocVemg
59nGvq/fR9j02is+L9wBS21rrg+FvOTz4hywzqHVPzujjc9Ld8AO3kW1qnHP
6fk3B2xrr9r5+kELn1fkAJdYgTP1zc3UzwFCJXcrVig2Uz8HpMgs7uCVNlE/
B6wP/aOxJbyJ+jngXpihSOKGJurnAPmhrYU2gU3Ub+z98Fv/yOc2UT9HlAgO
3G9qJZ6gI9irvcP95el5P0lHqKsF30+LaqZ+Y8unHPLa+pT8tB0x301rkaJ8
C/VzhHKegR43tIX6OWJS5/rqy9daqJ8jtAq9pcp7aH19HDHaqflmnGAr9Rtb
flPpm58yrdTPEUEVyuKflVqpnyO2aBUeWyDbSv0coTDv1bKtQq3UzxH1+Y0F
1wZbqJ8j0jcXfBd4Rn48RwyEdHOHL5FfnSNMHPb8iUojvzZHqAb2Wx4IIr8e
RzzzWlWhsJZ4g44w+jf48ugK4gk4odA19PbujcQTdEJS8l9C+dHEk3TCiFpm
QWUJ8RScsPKjZcKBEeJpO2HQf7qriCetL8Z4nNv7497Q+nKc0O2jmmaxjebF
zQnfdhl3z5Vto35O2OH/ue1TVxv1c8Kp38VG026+oH5OiKgZOSd57CX1cwJ3
ZuHyNant1M8JuiUbSvbGvKJ+Tqj8FmGrFPGa+jnB12N3V7z/G+rnhCvVixP7
VDuonxMupz7+Z+nJDurnhIZj1684TXlL/ZzgM71KaY7PW+rnBOVjEn1JN99S
Py6GnyV7P/5Dy0/m4nrn5HQ3zU7qyUX5qUnmLSs6+Z+fzYXyruZeQ59O6svF
h6SzLlWbOvk8aS5+eYsNDDl1Um8u7jnusrysSDxVLmJmL3KY1U8+2lysXlRn
FHeC9m9DLnR3rVl/w5j8wMXOlh8rCx7S/m7FRchey4RtNrT+HC5MOZ8MVILf
8HkuXAR96lLQ0H5N24uLw0vnqQZ0tPN57lxIfZ3+KivqJW0/LuRfxk3bMekF
nxfAhUvYgxjxxOe0PbmIMGqpdRuhedrBRX7th0j1MDoexHGx4t3JkyvfN/J5
SVxI5mQs93Z/Rtubi65lskOXOxr4vANcXDF/2hzZ8pi2/5ivxAtu7KQ6Pi+P
CyT+WC7kUkvzwMXCZdb9Av884PMuclEx4GHus/oezQcXSgmTJJLE7/J5t7j4
+Hhj+MXvlTQvY3560Fo89zaf94CLKQtVfZLSb9L8cPGo+fSSbpcbfF4jF1lJ
n6qG/a/RPHExU/zgLM3CK3xeBxeBwezm3nEXaL64YOvsKtL/WMTn9XNxaVef
3qaVhTRvXGw6N6NLXy+Pz/vJRVKdeL/P5GM0f85Y8ubp2dteh2j+nFFrOz+h
I3g/zZ8zBLUcL89V30fz54xW8cSvv9JTaP6cUexzxiewLYHmzxneQ38FWvfE
0vw5402u99FDO3bQ/DlD9BGyphpspflzhuzount+74Jp/pwR++5JHE/Az/T/
AFfeaII=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      ImageSize -> 300, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Probablity Density\"", TraditionalForm], None}, {
          FormBox["\"Separation\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{0, 10, 20, 30, 40, 50, 60, 70, 80}, {0., 0.01, 0.02, 
         0.03, 0.04, 0.05, 0.06}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"8 nm\"", TraditionalForm], 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {10, 
           FormBox["10", TraditionalForm]}, {20, 
           FormBox["20", TraditionalForm]}, {30, 
           FormBox["30", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {50, 
           FormBox["50", TraditionalForm]}, {60, 
           FormBox["60", TraditionalForm]}, {70, 
           FormBox["70", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}}, {{0., 
           FormBox["0.`", TraditionalForm]}, {0.01, 
           FormBox["0.01`", TraditionalForm]}, {0.02, 
           FormBox["0.02`", TraditionalForm]}, {0.03, 
           FormBox["0.03`", TraditionalForm]}, {0.04, 
           FormBox["0.04`", TraditionalForm]}, {0.05, 
           FormBox["0.05`", TraditionalForm]}, {0.06, 
           FormBox["0.06`", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Old \\\\ New\"", "\"New \\\\ Old\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
TcJIm93LzhcyvEkYvafb91Uaw5sERfMWpbY4hjcJ2Y+W8D6HMLxJqFu8Qvv5
PIY3Gd2uv+6XezC8ybgydtjQ2KkMbzJ0xMeeuo5leJMR+0u0u1+a4U2GeUFA
cvlnps9TsMspxiiolunzFLzX1Lqrdpbp8xTYOCLwXjrT5yn4+u3Z4uRIZn5M
AXfnl9Ez5zI8Q1ydGfbF0p7hGSLt1FprIw2GZ4jalMbe6b3M/DXEuFxRx4oX
zPw1hGGiQo3oPDN/jTDzyA2xwwFm/hrhyPNmR/Ea5nxghBNN6/Zf8WJ4Rnip
GmR1W4fhGSGu6mK8XB9zfjFGwduwmJinzPnFGAfv7o0zLy0gnjHK6xRbtOOZ
85MxMgu/+bHnMOczYyyAyasLpgzPBDle98cvHczwTKC86lb9vAbmfGgCf+GE
Y+klzPnTBA8FdR9Hb80nngk2B70p/sJlzqemGGzldEhem7ZXN0VYVU91/Pc8
4pvi9oDBBjOv0fmabYpTxwI2b9/LnM9NYZYl+1gzgM730abId/8Vq2fMXA9M
cdHZxCPrD10vyk2xMbnQJPU2cz0xhdXGBanDUul6IzZFUR4HIxceo3xmiLkQ
Ij5jeIzymWHVvBv2Hd3M9cwM9147nXl5ja53bDN4vxP3bEzOpXxmyB1S9LJh
Jl3fos0wqXD7mQHazPXPDP+7Wx3QmkP5zPBFd3P++4ocymcGy9/bP5zaStdX
sRlq9dNXhHsy19+pUO/NLXIeSddn9alYdrfo15jXzPV7Kh4k5EQqFdL1nT0V
nCnxMA5hrv9T0V7mOyfKju4Poqfigkrvy6Ey2ZRvKlScZOddy8mifFOh9eeG
stK0LMo3FbJpExdr1h6lfFMxMUBdJLXkKOUzR6xPpvuN/kzKZ46ng0pOh2Vk
Uj5z7Lhl8e+Kmkn5zJGRav3oV+0RymeOUYHFxe9WHqF85ih9uvNex1Dmfskc
i749MZ9UTPdT5eZg5cUNPuLF3G+Z41PekfrprXQ/JjbHfyw1BfU9hyifBc6E
dZWamh+ifBa45etwcM3zDMpngcINHVGvojIonwWOuSqfXKuXQfksMGxkzkrd
2oOUzwKPvhQfFm88SPks0F1rbHt2It0/lltAI9T8VXRtOuWzgDiuahRrM91/
ii3AHVInbpuUTvks4Ttko9Hm52mUzxL7ppzI+rqduZ+1hHxU+FiTaWmUzxLL
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
JvLnDJOqusU3X0aSP2ds+JE898eOSPLnDN/HXaLFVpHkzxlJLZlZ4z5GkD9n
uJ7iVujviyB/zmBX5CruRgT5c0bz8xvz+O0byZ8zRo+5mBV2dCP5c4b2jLK4
bp+N5M8Zlj9G9T/+y7xfcMHQ8ecWDCrdQP5cMErN2CNh/gby54I7+mNmCxQ3
kD8XKL098zxAFE7+XDA37kBQUUg4+XOB1oI5ufoTw8mfC+rPHTN9Wr+e/Lmg
+bHcmVMJ68mfC1SfzdlQNm09+XNBQHVG9MuWMPLngmFhPzabZoaRPxd83jIo
8j9f5v2JC+6vnxu/STqM/LngQc31OXEV68ifC8YH1YQ3L11H/lxQ4PIw++K4
deTPBboy1WWjHoWSPxfMcEmPUUmg9zViF0Tzj7k9swslfy64OrrOJeF7CPlz
xcKWzWcci0PInys2nUqqMwsMIX+umMxt+xKlEUL+XLHzbDKL17CW/LlCX76z
/F7aWvLnin0JBcbKfmvJnytmC0xTXdTWkj9XhI+R2TqgYg35cwXCuttPs9aQ
P1es28hfe+3BavLnijNcp7Fui1aTP1fsqpjs6/ibeX/lipC2wpOlaavInyvY
id8jYq1XkT9XGMvvXLTn1Ury54o5DRv3nI9fSf5cUbGvzPLc1JXkzxVWXi1u
3A8ryJ8rLJtLM2zTV5A/V2w+ol+gw1lB/txQn7b54xXZFeTPDZs5oatPVy8n
f27Q3basPztmOflzg86YtlUujsz7ODcYPQlYz5JeTv7ccOCwT6vb9WXkzw0z
tq64PmH7MvLnhhtL3eqjvJaRPzd0v5h713z4MvLnBrW7Xcrqj5eSPzdUh3w7
PzBtKflzw/uAHf3N/sz7QTe4VhitKddYSv7c8GV1o0zguyXkzw1f+5bESucv
IX9uaN/d3p+zdAn5c4PWAJmffoZLyJ8bmtTvzGJ/CyZ/blBs+n658Gww+XPD
7reDwjIigsmfO67eHxfCZgWTP3fcGu69VUYmmPy5I3mC8rfu+0Hkzx2j284/
mpMeRP7c8UezNSV0URD5c4dtwU+7DSZB5M8d1b9n6RzqW0z+3KF/o+rc2IeL
yZ87bt/xEOvlLSZ/7pjg0LCoI3Ix+XPH+vW3Fh0WLiZ/7jjfesB6hhnxMtyx
8/7KXmNl4hW4w2JF/iePrkDy54557ctUyl8Ekj93pIwY/y70eiD5c8esZN2S
5LJA8ueOKYXj1PpyAsmfOzYVZlVXphKv0x15i2PTqpKIJ+WB8N5pql8SiCfv
gXGBMqVj44in7oHF5+Z+tIsjnp4HNrXE6OhtJ565B6TsZv2b8sSDBwZNmZ9e
eIB4bA/o/Vwf/+Eo8fw90B58MdXoBPGCPfDnP4Unsy8Qb50H3Pv0LE3vEC/a
Ax8vxC3e8oJ4SR7wP+dYLv+VeBkeyBk8auQxKcafB2Z/aEwZNYrGo9wD0Qvn
jp80mcZD5IHTl5bdPsOi8ajxQH/YdvttM2g8GjwQpWRhuGQF8cQemLWtot8u
hnid/77PJzH4YRrxpDyhNGHu5EElxJP3RG3L2nNlIuKpe0Jb9enUynri6XmC
LZNxa3gz8cw9kaJ568iO38SDJ7ztLNPHyjP988Rzw/8Onx9H7+f9PTE+bsdX
niH1OdgTgx++qX1rS31e54lkpUtOCz2oz9GecOqLznspJF6SJ8p4BwTCAOZ9
vyeCq2eVPlxOvAJPDNrSUxsQRrxyT5gdz6lT2UI8kSc09BunSscTr8YTv146
L3FIIl6DJ7YurPL4uI94Yk/MfLfl+8AM4nV6YsYSm55rR4kn5YVxGhobzfKI
J++F7hlb89cUEU/dC73b9B12lDLz1wvru1dsPFzOzF8vROqoKJ/9j5m/XtDZ
9On6qyuMPy8krjzJ1axm/HnBpuzOiLjbjD8vqD8P4/y9z/jzwrmMEYv21jH+
vLC8ZsNU0wbGnxc2PSn7VPmG8eeFB84916d+ZPz9O57r3ftXfGb8eSHFq7PK
uY3x54Werrm1+d8Zf15Y5la+duFPxp8X5M2nK/J6GH9eUDhlr+r7h/HnhWE/
M/aZ9jL+vGHam9Ze+4fx542iisiDsr8Zf97IUt31q+wn488bfnFPrM92MP68
kXBioGZbC+PPG31FCdZe7xl/3pBqWlFw8hnjzxu755avHH2P8eeNDcYPlNZf
Zvx54+Lsy/uqTzD+vP//+Ev8eeNVZPhuuzjGnzfq3srdWLOK8eeNO7cPd+UL
GX/eaFe7lNZpw/jzxlwHk6WBGow/b0w+WaUr1c/MX2/0Jqe3NLxh5u+/fEPf
P5K6wsxfb+i/lLaNzGDmLxunJ+k6+IUx85eNrNKS6Yd8mPnLhvzLgO9cXWb+
stFd6rgg8g9z/mOj9f2Zd2MfMuc/NuZXcseaHmPOf2wsOfP+9tUw5vzHRptP
jtFNF+b8x0ZnSpKn/Ujm/MfG+k154/QbF5E/Nj4L4z2iTiwif2z4apjcd1q/
iPyxUVifUxxmv4j8sbHZ3JGlPmgR+WOj1kZhl+mdheSPDaPsZa1VSQvJHxvT
UmKinnFofVADG8M2jeuLUVxI/tjwSAxKqH0QQP7Y0M7+kvIkKYD8+cBO3DAt
zzOA/PmA163t5zeY1h+p+8Dfx9ZhdPQC8ueD3pLSMec655M/HwTLFnwUB80n
fz5oPBX++O7TeeTPB87ZE7dfc5tH/nwwdPi+MwPPzSV/PnijZBXVoEPrn9b5
YJkoduSe/XPInw8cqvXfLpaeQ/58UM+R3ZsSMpv8+eBpZBp/3jt/8ueDgmGd
qj95/uTPB5etpHenVM8ifz5Y5DumjW01i/z54O3xvau8i2eSPx9EpVU6lUyY
Sf7+ff/onFVr0vzInw+iv/u9qxrOrOfiQMWZp7Njxwzyx0GPXIrV7YEzyB8H
Hv+9qE+MFpI/DppfLXO60ScgfxwUp5YOXhQlIH8crA95t9Cvn0/+/u2/Vnpm
bgyf/HEwTMvLwG4wn/xxUDiiY7RqIo/8cTDWtdvAXIlH/jjwdU89vD2dS/44
eOOxDhM0ueTv3/6DWr70CXzJHwcpd6o7gpZzyB8H523ct+yJ9SF/HMyfIpeV
kcUmf/+OZ5G+16lKb/LHwWn9Pu+eRi/yx8FwFwP2URkv8sfBqnC3nfdNPMmf
L3R2dhafnOtB/nyxy+3urKBkd/Lni88DtO6oXHMjf76I35sk/+K3K/nzxV7h
vGs11q7kzxfW5lmj+za6kD9f7NCaVRBe6Uz+fLE/rebV9CHO5M8XM0bZpXH8
nMifL67oLViYf9yR/PnirH9IjFU/yJ8vVG4G3f7mD/Lni9ABH+ckhrDIny86
PPZehrUD+fOF89GKqoZB9uTPF0PszUMnv7Ajf75onr3GUP68LfnzRZbWk9cB
h2n9otgX/+6x9/9NmEb+fOEQaVlXE2FN/ri44T5C58I6K8n2MlyYCjjyJ8Ms
yScXq45/6MrabCHZfyQXwYIat527zMkvF2YewzNCcqZKeJpc3E8o+jKr0ox8
c8EemPfE/b2phGfIxYMTCTbeCqbkn4tbzaVzn0UZS3g2XOwL5X6P7zCk8eDi
d1eHeW7oFAnPjYtwg/MnFkjT+k42F4MUsv0rsw0kPAEXb6MqpZ/76NN4cdG1
U14pT05Pwgvgwsk4MUa7XofGj4vNhyf8MT05UcJbyYVwQIXmyQPaNJ5cbNkz
NS0sUUvCi+BC647fG4PdmjS+XHiM/RgzlDVBwkvgIlAUH+O3WYPGm4uQ2i9W
rnVjJbz9XMxIW6MhdhpD48/F9BRNeYO7oyW8bC5mzzwY92GJGvWBi9zE+oNf
x6hKeCVcTHi16IjCexXqBxc50pbrZC+PlPAucPHj7PQBWYUjqC9cHDnMisg9
pizh3eSifeYqy6ZSJeoPFyPeH/1yKEVRwqvj4uRFbenDrxWoT1xsaz4ufukk
L+E1cvHycfqc3Mqh1C8uEkvk2mf5ykl4rVzUB0y/kNkpS33jov+I/xa7YhkJ
r4cL34fhRZNCB1P/eBDaXpXd5jWI+sdD5iuewq6pA6l/PHzI9pl3ZJI09Y+H
LOtJT61MaL2xOg/ePH+/l05S1D8e/vQY7ne93SdZn6zHw8jE5aoC3b+S9c2G
PMQsUfmqduQPrWfm4XNB3f2aKb8l66FteEiOKHqUWvdLsv4ZPNiMWTA1ZV+3
hOfGw8rO/PvnlvyU8Ng8GEV05/zl/ZDwBP+2963gWXG7JDx/Huq05bKnLOyU
8AJ46Hw4qCs+9jutn+ZB1uj7/q6KDglvJQ+DVT6IJ3R/k/DW8dCzPiI11/Wb
hBfBw0a9/52B2yW8aB527j3xY8ywNgkv4d/fC3dbfG2m9dxJPDy/e2HI4Wdf
JLz9PCzYI9Wq/6SF1n/zcM86fr/o7WcJL5uHwK8ZK5/+aJbwCnj4GWw6x0i1
WcIr4WGK5RhRHuuThFfOg8vOWWcDQmg9+QUeJliOk7tb3CThiXiY+6jpbuiX
jxLeTR4sSzSytc0/0npzHh5/+TCsMuaDhFfHQ9AG01a/Z+8lvAYeVoy9N3eE
xXsJr5GHaVFzfpoepPXsYh5mGMWYDB70TsJr5UEjf93rrxsaJbzOf+Ox73rw
+ea3El4PD0sHZHhGdL6h9e189Ll/cB+p/EbCk+FDzUj6drDTawlPng8P/3qj
FTteSXgj+diaPkSz/8NLCU+dj7GV9jI9M15KeJp8mFU6DR339gX1jw+pUzIN
itEvqH987HkybeIcG2Z9Ph+leR6ZgcNeUP/4UHz4AwE/G6h/fNizuT7+vxuo
f3wkBh28raZGPDYfOkXz+yzZxBPw8aC/3FE+g3j+fCgUN5SU976g/vExGY5a
MuEvqX98PNtzedD5ga+of3yEPjGSmZxHx7uOj30J+hkZM15T//g45NZrMUGV
/EXzsWJAu2r2B/KXwMfRK6EObZfeUv/4MOBeebqIQ+Oxn49r31s7m682Uv/4
8G+ZpD7H+h31j4+v9fOG7DlJ41vAxzL+oYn+E99T//g41h6w63D6e+ofH+fN
L22dLveB+sdH2gGvLOMNH6h/fGis13QPbfxA/ePDVWs1f7QL0z8+vj2qn83K
+Uj942Pxscz0Md0fqX98eKZeeN3hQn1u5EP6YIPU6MQm6h8fRv5W7Yo3m6h/
fBwvlop0+tVE/ePj+Zchn5dr0vzo4WNuRa3HWAcx9U8ArzFNL1x5YuqfAB3B
O/PL/cXUPwFYOwyXhM4UU/8EGDqr9EimF/HUBZh8uu0a15x4mgLYmWnse6hM
PD0Bqpc2RK8RUz5DASZW5m47XEb5zAX47+CvxGvrmqh/Ajxg3/UOMKLjhQA3
Dd8+7XhD89dNgKIt4ld/d5A/tgBLEs6XyhmSP4EAor0Rr9Nv03j4C6D2vTNS
dwGNR4AAynLGh3S+vaf+CfDGsXu11GYa35X/jl91gbH6QBrfdQJIj6gYfj3+
HfVPAN+bSkt8B1FfogVYX5/T3h/VSP37t/0jRWedVqZ/Aiycobsise4N9e+f
j9TAu/lnqc8ZAri1yAna97yi/glQsmP72V9BND8KBGjJ/TPPz5rmW4kAPRj1
5+KgBuqfAFs8yrs6Hjyj/v07/s0f175Ne0r9E0B1g/vj+HlPqH8CPC8Y+t9g
nXrqnwCy/klRB788pv7927/aS2pHxSPqnwDLpQ/MMIt9SP0TwMa/pqT5xAPq
nwBdR46ah86vof4JoK66KaRU8y71T4Df6lEZjj/o/x/qEWCbv4s4+c0N6p8Q
+deWp995U039E6Kuom398+6r1D8heH3JAt4UEfVPCOfHPuovuy5T/4S4Gmmq
qFFzgfonhFK69Mqg1+eof0Jot1RPbjQ4S/0TIqm2i+9dWkb9E0Iu3r3o3fNS
6p8Qxx+EJgZXF1P/hMgJ6Eu9qlZI/RNi+GO1O9cfHqP+CfHTR7Y2uTmb+idE
c/KbHxFlR6h/QpTVR31xszxI/RMiLtD39TnOAeqfELGcwDnDvqVQ/4QQzBrg
xVdLov4J4VhRkP/AYDv1T4ihooII/T/bqH9CjFroVCnTHkX9E+JM54IJAxQj
qH9CtK5YlTXQOIz6J8SJYU2vj+qvpf4JYT/5TbTLuWXUPyGU3Z6bKc9cTP37
5ytjSIPg7wLqnxAm7WOcZvTNov4JYcQZWvRihYD6J0SkZ6xthBSH+ieEwraz
Cy4PcXf4f2S9A2M=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wTnzLl7zcaf+ucJMVDNwE5dv8X8vhH+3
           
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      ImageSize -> 300, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Probablity Density\"", TraditionalForm], None}, {
          FormBox["\"Separation\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{0, 10, 20, 30, 40, 50, 60, 70, 80}, {0., 0.01, 0.02, 
         0.03, 0.04, 0.05, 0.06}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"10 nm\"", TraditionalForm], 
       PlotRange -> {{0, 70}, {0, 0.06}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {10, 
           FormBox["10", TraditionalForm]}, {20, 
           FormBox["20", TraditionalForm]}, {30, 
           FormBox["30", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {50, 
           FormBox["50", TraditionalForm]}, {60, 
           FormBox["60", TraditionalForm]}, {70, 
           FormBox["70", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}}, {{0., 
           FormBox["0.`", TraditionalForm]}, {0.01, 
           FormBox["0.01`", TraditionalForm]}, {0.02, 
           FormBox["0.02`", TraditionalForm]}, {0.03, 
           FormBox["0.03`", TraditionalForm]}, {0.04, 
           FormBox["0.04`", TraditionalForm]}, {0.05, 
           FormBox["0.05`", TraditionalForm]}, {0.06, 
           FormBox["0.06`", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Old \\\\ New\"", "\"New \\\\ Old\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.705914950926332*^9, 3.705914979687377*^9}, 
   3.705915068321908*^9, 3.70591530493928*^9, 3.705917621551015*^9, 
   3.705918109858954*^9, 
   3.70591815381741*^9},ExpressionUUID->"ce42b1bd-2f53-42f2-848d-\
373f9f944a4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"prefix", " ", "<>", "#"}], ",", "\"\<table\>\"", ",", " ", 
        RowBox[{"FieldSeparators", "\[Rule]", " ", "\"\< \>\""}]}], "]"}], 
      " ", "&"}], "/@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<I942E.old.dist_gt_60.ci_gt_6.18_tracks_density.txt\>\"", ",", 
       "\[IndentingNewLine]", 
       "\"\<I942E.new.dist_gt_60.ci_gt_6.19_tracks_density.txt\>\""}], 
      "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Old\>\"", ",", " ", "\"\<New \\\\ Old\>\""}], "}"}], ",",
        "Above"}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "70"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0.07"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", "ticks"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<8 nm\>\""}], ",", " ", 
    RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Separation\>\"", ",", " ", "\"\<Probablity Density\>\""}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.705917105292519*^9, 3.7059171929364023`*^9}, {
  3.7059173299082527`*^9, 
  3.705917394351077*^9}},ExpressionUUID->"d47288d4-1f34-4d67-93aa-\
a5abcc9b2f62"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9mnk8VPv/x6WUMLYoVCJbJFmzm5cZxgzad3VLhRBXRQmlqeyRNpVSZK0o
SiXFNa1apL20Si5auZXSRfVzv96f3/zBYx5zzvO8zvPzfn8+58wc3aVhM/yl
paSklvb9+e9//0tN8sXuVsmC7pMu+zP/ew2TpGftb/MeV+Fi9b/XMMn2dolq
+tlql9t1/71UJQ8/BWwY3HPJJeB/L1VJUk7mhgzD6y79PFXJ2aMXP6Rl1RNP
RbJ4m3PdmhkPiKciMT3vXv3Dq4F4ypLpRaU1LWGviKcseSPs2V748w3xlCXG
3JuDHhxoo/2VJG6xwd8DnT7R9oqSyG+v8jplv9DxOJLi5OCYWpPvxFeQPMy5
cUbFoId4ChLNiOUp2ulS3H6evGTuvYAwGd1B3H6enGSe++6BFktkuf28oRI9
8Xazrys43H6erEThyB3ZHWUq3H6erMR82wJtJ0t14g2RRKnnzuVM1STeYIlc
hHSR5Wht4slIcmddmJ/xTJd4gyQ/04T5MpoGxBsk8QtfZFbQMI54AyWmZ3RS
E4wnEE9asilmod4BRQviDZCU7djzB7fZinhSkpa8cx2SUbbEk5KknuLe+XTV
gfb/VRP/XNPI9r0Lbd9bM8hqmu/Dm650vJ6a0Ef3NDYEuxH/35rP+oFap308
iPejZkzGk1k+uZ7E+14jL1B8miqcQrzOmuGKqY9EJtOJ97Xmour3lO6AmcT7
XBMs/6SK82o28f6pecPJ+x20ax7t/7FG3P3WVpKygLZ/VzO8bVT399pFdLzW
mnDdgbY+RkuI31wztkuzapbKMuK9rsnYLC9zQs+f9n9aozfOv0PDdzlt/6Dm
S5BBo+X1IPr8Rk3IxHm+sX+E0PvKmlsbouMDdcO4DkmfFg0S36863n55yF65
Vexz7sODV8J/ZK1m+3OvrvFUWiiMYHxujneKqQFnLTs+93V9mnTRh0iWj6uR
N+CX7t9RLD/3yY/QQZXfY9j5ca1d999fqxfLzp+bGt84e5yNmPnhqogW16f5
b2L+uAadRV71uZuZX65ea9D4qo9bmH/ua97lISP58Wx8uJPM7kefKEhg48d9
GNDFHamWxMaXO+7OkmUDtyWz8ee69Arie1S3svrgXrVpfpqSm8rqh3tTOWSA
wGkbqy/um48WH7c2prP6g9kbR4sPV7ez+sTyHoEJL2cHq1+0rFo6Pzp2J6tv
XK6vFDv57mL1j9DOmBIT992sP3Bc9d6sTtMM1j9w8f9wx3rEHtZf2Fb/r/G2
gXtZ/2Fuilnlgc97WX/ijO4Z7uCmfax/MWTLtaIF9zJZf0P9VUqQ16X9rP/h
ousYtqz8AJsfMHn9b/OZ+Vls/sDkOM7U0t0HiacAuaA0V6O4Q8RTADfg5KI5
q7OJx8HzR9OU1k7MIZ4iDllf7r2Vn0M8JWSh9udPjcPEU8Yl+ZDGT1sP0/bK
+Hb86h/hPw8TXxmrdramB4Xm0v4qiNJ+cfDM81w6ngq8qs8dshTmEU8VT6MT
VtadyiOeKhZfmmuyaGQ+8VRh9NVa5smmfOINw5rV441HteYTbxiafwg0hwsL
iKeGqpZ0xdNFBcRTwxc35bamQYXEU0Pk2PvirYsLiaeOPS9fquVUFBJPHbzN
zpvkOUXEG47LYf/+qlpcRLzh8JfRqs0rLSLecKzKLVIt7S0i3ghs/n3cr1Zw
hHgj4HDHanpj2hHiacD6ptuCxntHiKcB+aMfZcpUjxJPA0NvWaVg2lHiaeL6
W4MVUSlHiacJa7X7a5wuHiWeFvaVoHld51HiaeH1ZbFYWf8Y8bRQoHro7oep
x4g3Eqa/Cno6Io8RbySUuPlxMlnHiDcK79Ly29WqjhFvFIp6zwyWamC8vs+d
G30rOxhvNL6cnWBgOLCYeKOhWHs01Ua1mHjasImYl/ByVDHxtHFqNM+Lo1dM
PG2YrgwUX9QvJt4YfLtSH/ZVl/HGYFlYeEShFuPpYGPQ9Oy/Fdn2OsgevNzr
5C+WVwf3HY7t13nPzq/vfQ7Hf/I9ll8HZaaJdV6n2fnqIu6atLrbLnY+urhQ
GlY390/G04VO5NmPZ9wZTxcG8y6qpWgyni54SWs6h75n4zEWuc2nP6+qYOM3
Fmpfl47o2cTGZyy0WhcbtojYeI6FZd/sFKbExn8sXlrXDnx+n9WLHrqdPtSE
7z5CPD34pD3XDp/F6kcPz3NXTTYcxupND70laQq377L61MNeM8V1x9JYPetj
/NwH036JWL3qI/3ohVPyg1l96yPjxLEj8pdYP+jDn7d5n0Ms6x996HoYP7np
UEg8A+x33xL2rauAeAbgR0VLtZ5h/WcA5yvfXtVHFBDPAHmKTVMarAuIZwD7
T8b2Rt/ziWcILWFVU/M51u+G8OEkx5huyCeeIfxjN+4ey2f9b4gfNjsHNcmx
+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
SJ13Oyt2+T9+SA3y
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ZvIZofPpnO+OoUw+I1yZK6e4ezOTzwhbVFNHHY1k8hnh+IyyD15bmXxG0HDa
W52/lclnhP3rLG47RDH5jKH2X4OuegSTzxjKlg4Ks0OZfMaYOa5mtFEQk88Y
y2scJZRWMvmM0bSuZ3K3J5PPGMHyx375OjP5jNG4NZa335zJZ4w8+8wzAepM
PmNEqbQffSLF5DPGpDr37pdDByifCYTbhkQjug9QPhP4erQYV9QfoHwmuNfT
+yuh8ADlM8FfTXl9icQDlM8ERXdDU1z8iBdtgvbLvUYLbIiXZQLXfSuH2HLE
KzfBiuN9PK0vmZTPBDs1fPiqdZmUzwSBN64qzcvKpHymSDz/ZXRjIF1vyZoi
K+WTzXXzTMpnCpGck6vMRInHNcWHmr/n1z7dT/lM4fV1wCXgOF2/RZtiSm2g
9op1+ymfKXZGLK1ebrqf8plisuv5C7kC+ymfKXb0+dYqNND1YJ8pnmv7aIul
76N8c2AmnSUduWgf5ZsDD1ORebtm7KN8c2CclC1q2UfXl9w5wGKPE+eLMyjf
HOzMVmQPbsygfHMw2nZIXNksg/LNwdavnRcs/tL1avkcDBTUL5l3K53yzYGs
QFFVSHI65ZuDIwVxO3PnplM+M6Sk8FrfTk2nfGbgjBbW8H+ZRvnMcH9cXqjk
yTTKZ4ZWs6lpY4LSKJ8Z1mYEbHcwTKN8ZojxkZrd/C2V8pnh0dhnX8XiUymf
GbZdn6btMTWV8pkh3//mlHuFKZTPDNN2lz66ZsVcn5sj/2KTvm3TXspnjuCG
0bWFgXspnzm+f9HS1xTeS/nMUemnpfvz6B7KZ47uH8/s/K33UD5zLFCflnzx
VTLlM0fc/y4fY5MpnzkKWxo5n7WSKZ85LLxFfvi0JFE+czxotSxviE+ifBZ4
GbNktp853W+QtUBXquPkwP8SKZ8FymJexcuUJFI+CwTaTajL2pBI+SzQOb/i
o55pIuWzgMHRa/YiQomUzwLy1+TyjJoTKJ8FKg5U2fcUJVA+CwhqHzSYvJvu
f/RZQG718bOf1iRQPksc/9rh5MdLoHyWONTuMWaLFfEMLfFnymCvmh7xuJao
rOk55qzO3E+xhAhUV9apEC/aEo8LH/VuVCdeliW8V32Za6zH5LPEJI+L5SWW
TD5LtCSZ1F9yZfJZYur/HwCYfFYYEpwgpriVyWeFdI/qmvuHmHxWOCbZon+u
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
         
         "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 70}, {0, 0.07}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Probablity Density\"", TraditionalForm], None}, {
        FormBox["\"Separation\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0, 10, 20, 30, 40, 50, 60, 70, 80}, {0., 0.01, 0.02, 0.03,
        0.04, 0.05, 0.06}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"8 nm\"", TraditionalForm], PlotRange -> {{0, 70}, {0, 0.07}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {{{0, 
         FormBox["0", TraditionalForm]}, {10, 
         FormBox["10", TraditionalForm]}, {20, 
         FormBox["20", TraditionalForm]}, {30, 
         FormBox["30", TraditionalForm]}, {40, 
         FormBox["40", TraditionalForm]}, {50, 
         FormBox["50", TraditionalForm]}, {60, 
         FormBox["60", TraditionalForm]}, {70, 
         FormBox["70", TraditionalForm]}, {80, 
         FormBox["80", TraditionalForm]}}, {{0., 
         FormBox["0.`", TraditionalForm]}, {0.01, 
         FormBox["0.01`", TraditionalForm]}, {0.02, 
         FormBox["0.02`", TraditionalForm]}, {0.03, 
         FormBox["0.03`", TraditionalForm]}, {0.04, 
         FormBox["0.04`", TraditionalForm]}, {0.05, 
         FormBox["0.05`", TraditionalForm]}, {0.06, 
         FormBox["0.06`", TraditionalForm]}}}}],FormBox[
    FormBox[
     TemplateBox[{"\"Old\"", "\"New \\\\ Old\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.70591762176665*^9, 3.7059181100205584`*^9, 
  3.705918153981605*^9},ExpressionUUID->"08e7ba64-8bb9-43af-9443-\
c1da830a6e2b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7059171666698017`*^9},ExpressionUUID->"24d01475-339f-4d2f-8a73-\
1e426af097a4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{866, 999},
WindowMargins->{{Automatic, 429}, {7, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{594.75, 842.25},
"PostScriptOutputFile"->""},
FrontEndVersion->"11.1 for Linux x86 (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 341, 6, 67, "Chapter", "ExpressionUUID" -> \
"9b6712c0-cc94-4ff0-acf1-537705bfc915"],
Cell[924, 30, 993, 15, 51, "Text", "ExpressionUUID" -> \
"6ba1cd72-fd8b-455b-9c8c-552fdf329b2c"],
Cell[1920, 47, 413, 8, 31, "Text", "ExpressionUUID" -> \
"fa4693f7-be80-47df-a99c-0d3473341009"],
Cell[CellGroupData[{
Cell[2358, 59, 216, 5, 65, "Section", "ExpressionUUID" -> \
"ca8038e7-4e8b-4d0d-8c8b-3c93528e3e20"],
Cell[2577, 66, 676, 13, 51, "Text", "ExpressionUUID" -> \
"8aa13113-bdc1-4af9-8dd9-fcabe523ca84"],
Cell[CellGroupData[{
Cell[3278, 83, 290, 4, 45, "Subsection", "ExpressionUUID" -> \
"1c847548-b91f-4c22-929f-94d3b0768527"],
Cell[3571, 89, 674, 11, 31, "Text", "ExpressionUUID" -> \
"baa3d6b9-7a62-434a-ba44-a7a220b9e869"],
Cell[4248, 102, 333, 7, 31, "Text", "ExpressionUUID" -> \
"2ff1c4cd-6c63-45e6-ab09-eb0cb305f2f7"],
Cell[4584, 111, 750, 20, 81, "Text", "ExpressionUUID" -> \
"dd349ffd-3442-4035-984a-c3c9d6123b94"],
Cell[5337, 133, 788, 21, 19, "Input", "ExpressionUUID" -> \
"6480738f-26d0-4e82-a326-f0514b7fa4ed",
 CellOpen->False],
Cell[6128, 156, 741, 12, 90, "Text", "ExpressionUUID" -> \
"43df5066-a1d0-4ff0-85b5-7481c18bbcb8"],
Cell[CellGroupData[{
Cell[6894, 172, 3957, 92, 19, "Input", "ExpressionUUID" -> \
"86be7e7e-deac-46ba-a50e-d5ea1629fe36",
 CellOpen->False],
Cell[10854, 266, 77715, 1376, 256, "Output", "ExpressionUUID" -> \
"d15de511-5706-4c11-a9a5-603b6003b3ba"]
}, Open  ]],
Cell[88584, 1645, 448, 9, 70, "Text", "ExpressionUUID" -> \
"453abf31-7fb8-4d11-9635-137435de966f"],
Cell[CellGroupData[{
Cell[89057, 1658, 4231, 96, 19, "Input", "ExpressionUUID" -> \
"51cb8caa-57da-42bf-bc21-6dd6b1488d80",
 CellOpen->False],
Cell[93291, 1756, 77357, 1371, 256, "Output", "ExpressionUUID" -> \
"492b3dc8-f833-4901-b79b-4f1635ed9ac9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170697, 3133, 252, 7, 45, "Subsection", "ExpressionUUID" -> \
"fb1f283b-f2a2-4dd6-917a-cf88ab70af8a"],
Cell[170952, 3142, 447, 10, 70, "Text", "ExpressionUUID" -> \
"00862e8f-ac01-474f-8540-763f8ed78970"],
Cell[171402, 3154, 872, 21, 81, "Text", "ExpressionUUID" -> \
"c4711a67-64f7-4fa0-8ee8-fff83fdc3a8b"],
Cell[172277, 3177, 399, 8, 51, "Text", "ExpressionUUID" -> \
"b4f429c1-3300-4a8d-ad06-e94c648dea2f"],
Cell[CellGroupData[{
Cell[172701, 3189, 3585, 86, 19, "Input", "ExpressionUUID" -> \
"6b1d37e2-cde3-461b-814f-e559aec7645f",
 CellOpen->False],
Cell[176289, 3277, 72624, 1292, 256, "Output", "ExpressionUUID" -> \
"f141eceb-7ba9-4050-ac7f-1b4d4f60e748"]
}, Open  ]],
Cell[248928, 4572, 403, 8, 70, "Text", "ExpressionUUID" -> \
"24cd03dd-f7d8-4f42-b88b-19bbcba84486"],
Cell[CellGroupData[{
Cell[249356, 4584, 4234, 96, 19, "Input", "ExpressionUUID" -> \
"976264f4-d182-4ef0-9fe2-c62a7698d06f",
 CellOpen->False],
Cell[253593, 4682, 71085, 1269, 256, "Output", "ExpressionUUID" -> \
"ce42b1bd-2f53-42f2-848d-373f9f944a4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324715, 5956, 1736, 42, 19, "Input", "ExpressionUUID" -> \
"d47288d4-1f34-4d67-93aa-a5abcc9b2f62",
 CellOpen->False],
Cell[326454, 6000, 31381, 569, 293, "Output", "ExpressionUUID" -> \
"08e7ba64-8bb9-43af-9443-c1da830a6e2b"]
}, Open  ]],
Cell[357850, 6572, 130, 3, 32, "Input", "ExpressionUUID" -> \
"24d01475-339f-4d2f-8a73-1e426af097a4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

